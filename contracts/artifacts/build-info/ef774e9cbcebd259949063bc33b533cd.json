{
	"id": "ef774e9cbcebd259949063bc33b533cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/location.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./ERC20.sol\";\n\ncontract Geologix is ERC20  {\n\n    address public owner;\n    uint public latitude;\n    uint public longitude;\n    uint public radius;\n    uint public startTime;\n    uint public endTime;\n    uint public rewardAmount;\n  \n    enum DeviceState { Created, InZone, OutZone, Completed}\n\n    struct Device {\n        uint complianceCount;\n        uint nonComplianceCount;\n        DeviceState deviceState;\n        address public_address;\n        uint lastRecorededTime;\n        uint payedAmount;\n        bool isActive;\n    }\n\n    mapping(address => Device) public devices;\n    uint public DeviceCount;\n\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    constructor(\n        uint _latitude,\n        uint _longitude,\n        uint _radius,\n        uint _startTime,\n        uint _endTime,\n        uint _rewardAmount\n    ) ERC20(\"RToken\", \"RT\") {\n        owner = msg.sender;\n        latitude = _latitude;\n        longitude = _longitude;\n        radius = _radius;\n        startTime = _startTime;\n        endTime = _endTime;\n        rewardAmount = _rewardAmount;\n    }\n\n    function addDriver(address _public_address) external onlyOwner {\n        DeviceCount ++;\n        devices[_public_address] = Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true);\n    }\n\n    function optIn(uint _latitude, uint _longitude) external {\n\n    require(devices[msg.sender].public_address != address(0), \"Device not registered\");\n    require(devices[msg.sender].isActive, \"the device Contract is not active\");\n    \n    if (block.timestamp < startTime) {\n        revert(\"Contract has not started yet\");\n    } else if (block.timestamp > endTime) {\n         devices[msg.sender].isActive = false;\n        // _payReward(msg.sender);\n        devices[msg.sender].payedAmount = rewardAmount;\n        devices[msg.sender].deviceState = DeviceState.Completed;\n        return;\n    }\n    \n    if (_isWithinArea(_latitude, _longitude)) {\n        devices[msg.sender].complianceCount++;\n        devices[msg.sender].deviceState = DeviceState.InZone;\n    } else {\n        devices[msg.sender].nonComplianceCount++;\n        devices[msg.sender].deviceState = DeviceState.OutZone;\n    }\n    }\n\n    function _isWithinArea(uint _latitude, uint _longitude) private view returns (bool) {\n        // Calculate the distance between current location and contract location\n        uint distance = _calculateDistance(latitude, longitude, _latitude, _longitude);\n        return distance <= radius;\n    }\n\n    function _calculateDistance(uint lat1, uint lon1, uint lat2, uint lon2) public pure returns (uint) {\n        return (lat1 - lat2) + (lon1 - lon2);\n    }\n\n    function _payReward(address recipient) private {\n        transfer(recipient, rewardAmount); // Transfer tokens from the contract's address\n        devices[recipient].payedAmount = rewardAmount;\n    }\n\n    function getDevice() public view returns (uint complianceCount, uint nonComplianceCount, DeviceState deviceState) {\n        require(devices[msg.sender].public_address != address(0), \"Device not registered\");\n        Device memory curDevice = devices[msg.sender];\n        return (curDevice.complianceCount, curDevice.nonComplianceCount, curDevice.deviceState);\n    }\n\n}\n\n\n "
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./../extensions/IERC20Metadata.sol\";\nimport {Context} from \"./../utils/Context.sol\";\n\nimport {IERC20Errors} from \"./../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the ERC may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the ERC. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./../contracts/IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the ERC may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the ERC. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the ERC may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the ERC. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xd81d3cd11a5cc4e1acf9b5b7af53f279ea65df91de539db131e197774830ba7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffcb8bf996229e6dfbdc16054023528e10a53a39621451d344763c2fb047daeb\",\"dweb:/ipfs/QmWifyKuvhQBka64pJVZiwuvbLbrGnmxqYeFVdPL6Acmh9\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xc14a0988e51257843d3de5afaac0219b5ca5673a78173b73b17a71feaa896802\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1750255fc47dd13448c7ba0b40c15691159ccea47ffac0d70450ed081bcd199b\",\"dweb:/ipfs/QmZamWGFwXP55D2Jf5xr5gP1s3C3o5T9JnSeW6aPMhA9mc\"]},\"interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 28,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 30,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 32,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 34,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/location.sol": {
				"Geologix": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_latitude",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_longitude",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_radius",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rewardAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DeviceCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lat1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lon1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lat2",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lon2",
									"type": "uint256"
								}
							],
							"name": "_calculateDistance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_public_address",
									"type": "address"
								}
							],
							"name": "addDriver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "devices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "complianceCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nonComplianceCount",
									"type": "uint256"
								},
								{
									"internalType": "enum Geologix.DeviceState",
									"name": "deviceState",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "public_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "lastRecorededTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "payedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDevice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "complianceCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nonComplianceCount",
									"type": "uint256"
								},
								{
									"internalType": "enum Geologix.DeviceState",
									"name": "deviceState",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latitude",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "longitude",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_latitude",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_longitude",
									"type": "uint256"
								}
							],
							"name": "optIn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "radius",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the ERC. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/location.sol\":81:3323  contract Geologix is ERC20  {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/location.sol\":770:1178  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC20.sol\":1899:2012  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x52546f6b656e0000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5254000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC20.sol\":1973:1978  name_ */\n  dup2\n    /* \"contracts/ERC20.sol\":1965:1970  _name */\n  0x03\n    /* \"contracts/ERC20.sol\":1965:1978  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/ERC20.sol\":1998:2005  symbol_ */\n  dup1\n    /* \"contracts/ERC20.sol\":1988:1995  _symbol */\n  0x04\n    /* \"contracts/ERC20.sol\":1988:2005  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/ERC20.sol\":1899:2012  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/location.sol\":975:985  msg.sender */\n  caller\n    /* \"contracts/location.sol\":967:972  owner */\n  0x05\n  0x00\n    /* \"contracts/location.sol\":967:985  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/location.sol\":1006:1015  _latitude */\n  dup6\n    /* \"contracts/location.sol\":995:1003  latitude */\n  0x06\n    /* \"contracts/location.sol\":995:1015  latitude = _latitude */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/location.sol\":1037:1047  _longitude */\n  dup5\n    /* \"contracts/location.sol\":1025:1034  longitude */\n  0x07\n    /* \"contracts/location.sol\":1025:1047  longitude = _longitude */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/location.sol\":1066:1073  _radius */\n  dup4\n    /* \"contracts/location.sol\":1057:1063  radius */\n  0x08\n    /* \"contracts/location.sol\":1057:1073  radius = _radius */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/location.sol\":1095:1105  _startTime */\n  dup3\n    /* \"contracts/location.sol\":1083:1092  startTime */\n  0x09\n    /* \"contracts/location.sol\":1083:1105  startTime = _startTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/location.sol\":1125:1133  _endTime */\n  dup2\n    /* \"contracts/location.sol\":1115:1122  endTime */\n  0x0a\n    /* \"contracts/location.sol\":1115:1133  endTime = _endTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/location.sol\":1158:1171  _rewardAmount */\n  dup1\n    /* \"contracts/location.sol\":1143:1155  rewardAmount */\n  0x0b\n    /* \"contracts/location.sol\":1143:1171  rewardAmount = _rewardAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/location.sol\":770:1178  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/location.sol\":81:3323  contract Geologix is ERC20  {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_16:\n    /* \"#utility.yul\":490:514   */\n  tag_43\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_15\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_44:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_17:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_46\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_16\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1828   */\ntag_3:\n    /* \"#utility.yul\":809:815   */\n  0x00\n    /* \"#utility.yul\":817:823   */\n  dup1\n    /* \"#utility.yul\":825:831   */\n  0x00\n    /* \"#utility.yul\":833:839   */\n  dup1\n    /* \"#utility.yul\":841:847   */\n  0x00\n    /* \"#utility.yul\":849:855   */\n  dup1\n    /* \"#utility.yul\":898:901   */\n  0xc0\n    /* \"#utility.yul\":886:895   */\n  dup8\n    /* \"#utility.yul\":877:884   */\n  dup10\n    /* \"#utility.yul\":873:896   */\n  sub\n    /* \"#utility.yul\":869:902   */\n  slt\n    /* \"#utility.yul\":866:986   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":905:984   */\n  tag_49\n  tag_13\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":866:986   */\ntag_48:\n    /* \"#utility.yul\":1025:1026   */\n  0x00\n    /* \"#utility.yul\":1050:1114   */\n  tag_50\n    /* \"#utility.yul\":1106:1113   */\n  dup10\n    /* \"#utility.yul\":1097:1103   */\n  dup3\n    /* \"#utility.yul\":1086:1095   */\n  dup11\n    /* \"#utility.yul\":1082:1104   */\n  add\n    /* \"#utility.yul\":1050:1114   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1040:1114   */\n  swap7\n  pop\n    /* \"#utility.yul\":996:1124   */\n  pop\n    /* \"#utility.yul\":1163:1165   */\n  0x20\n    /* \"#utility.yul\":1189:1253   */\n  tag_51\n    /* \"#utility.yul\":1245:1252   */\n  dup10\n    /* \"#utility.yul\":1236:1242   */\n  dup3\n    /* \"#utility.yul\":1225:1234   */\n  dup11\n    /* \"#utility.yul\":1221:1243   */\n  add\n    /* \"#utility.yul\":1189:1253   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1179:1253   */\n  swap6\n  pop\n    /* \"#utility.yul\":1134:1263   */\n  pop\n    /* \"#utility.yul\":1302:1304   */\n  0x40\n    /* \"#utility.yul\":1328:1392   */\n  tag_52\n    /* \"#utility.yul\":1384:1391   */\n  dup10\n    /* \"#utility.yul\":1375:1381   */\n  dup3\n    /* \"#utility.yul\":1364:1373   */\n  dup11\n    /* \"#utility.yul\":1360:1382   */\n  add\n    /* \"#utility.yul\":1328:1392   */\n  tag_17\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1318:1392   */\n  swap5\n  pop\n    /* \"#utility.yul\":1273:1402   */\n  pop\n    /* \"#utility.yul\":1441:1443   */\n  0x60\n    /* \"#utility.yul\":1467:1531   */\n  tag_53\n    /* \"#utility.yul\":1523:1530   */\n  dup10\n    /* \"#utility.yul\":1514:1520   */\n  dup3\n    /* \"#utility.yul\":1503:1512   */\n  dup11\n    /* \"#utility.yul\":1499:1521   */\n  add\n    /* \"#utility.yul\":1467:1531   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1457:1531   */\n  swap4\n  pop\n    /* \"#utility.yul\":1412:1541   */\n  pop\n    /* \"#utility.yul\":1580:1583   */\n  0x80\n    /* \"#utility.yul\":1607:1671   */\n  tag_54\n    /* \"#utility.yul\":1663:1670   */\n  dup10\n    /* \"#utility.yul\":1654:1660   */\n  dup3\n    /* \"#utility.yul\":1643:1652   */\n  dup11\n    /* \"#utility.yul\":1639:1661   */\n  add\n    /* \"#utility.yul\":1607:1671   */\n  tag_17\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1597:1671   */\n  swap3\n  pop\n    /* \"#utility.yul\":1551:1681   */\n  pop\n    /* \"#utility.yul\":1720:1723   */\n  0xa0\n    /* \"#utility.yul\":1747:1811   */\n  tag_55\n    /* \"#utility.yul\":1803:1810   */\n  dup10\n    /* \"#utility.yul\":1794:1800   */\n  dup3\n    /* \"#utility.yul\":1783:1792   */\n  dup11\n    /* \"#utility.yul\":1779:1801   */\n  add\n    /* \"#utility.yul\":1747:1811   */\n  tag_17\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1737:1811   */\n  swap2\n  pop\n    /* \"#utility.yul\":1691:1821   */\n  pop\n    /* \"#utility.yul\":694:1828   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":1834:1933   */\ntag_18:\n    /* \"#utility.yul\":1886:1892   */\n  0x00\n    /* \"#utility.yul\":1920:1925   */\n  dup2\n    /* \"#utility.yul\":1914:1926   */\n  mload\n    /* \"#utility.yul\":1904:1926   */\n  swap1\n  pop\n    /* \"#utility.yul\":1834:1933   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1939:2119   */\ntag_19:\n    /* \"#utility.yul\":1987:2064   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1984:1985   */\n  0x00\n    /* \"#utility.yul\":1977:2065   */\n  mstore\n    /* \"#utility.yul\":2084:2088   */\n  0x41\n    /* \"#utility.yul\":2081:2082   */\n  0x04\n    /* \"#utility.yul\":2074:2089   */\n  mstore\n    /* \"#utility.yul\":2108:2112   */\n  0x24\n    /* \"#utility.yul\":2105:2106   */\n  0x00\n    /* \"#utility.yul\":2098:2113   */\n  revert\n    /* \"#utility.yul\":2125:2305   */\ntag_20:\n    /* \"#utility.yul\":2173:2250   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2170:2171   */\n  0x00\n    /* \"#utility.yul\":2163:2251   */\n  mstore\n    /* \"#utility.yul\":2270:2274   */\n  0x22\n    /* \"#utility.yul\":2267:2268   */\n  0x04\n    /* \"#utility.yul\":2260:2275   */\n  mstore\n    /* \"#utility.yul\":2294:2298   */\n  0x24\n    /* \"#utility.yul\":2291:2292   */\n  0x00\n    /* \"#utility.yul\":2284:2299   */\n  revert\n    /* \"#utility.yul\":2311:2631   */\ntag_21:\n    /* \"#utility.yul\":2355:2361   */\n  0x00\n    /* \"#utility.yul\":2392:2393   */\n  0x02\n    /* \"#utility.yul\":2386:2390   */\n  dup3\n    /* \"#utility.yul\":2382:2394   */\n  div\n    /* \"#utility.yul\":2372:2394   */\n  swap1\n  pop\n    /* \"#utility.yul\":2439:2440   */\n  0x01\n    /* \"#utility.yul\":2433:2437   */\n  dup3\n    /* \"#utility.yul\":2429:2441   */\n  and\n    /* \"#utility.yul\":2460:2478   */\n  dup1\n    /* \"#utility.yul\":2450:2531   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2516:2520   */\n  0x7f\n    /* \"#utility.yul\":2508:2514   */\n  dup3\n    /* \"#utility.yul\":2504:2521   */\n  and\n    /* \"#utility.yul\":2494:2521   */\n  swap2\n  pop\n    /* \"#utility.yul\":2450:2531   */\ntag_60:\n    /* \"#utility.yul\":2578:2580   */\n  0x20\n    /* \"#utility.yul\":2570:2576   */\n  dup3\n    /* \"#utility.yul\":2567:2581   */\n  lt\n    /* \"#utility.yul\":2547:2565   */\n  dup2\n    /* \"#utility.yul\":2544:2582   */\n  sub\n    /* \"#utility.yul\":2541:2625   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2597:2615   */\n  tag_62\n  tag_20\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2541:2625   */\ntag_61:\n    /* \"#utility.yul\":2362:2631   */\n  pop\n    /* \"#utility.yul\":2311:2631   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2637:2778   */\ntag_22:\n    /* \"#utility.yul\":2686:2690   */\n  0x00\n    /* \"#utility.yul\":2709:2712   */\n  dup2\n    /* \"#utility.yul\":2701:2712   */\n  swap1\n  pop\n    /* \"#utility.yul\":2732:2735   */\n  dup2\n    /* \"#utility.yul\":2729:2730   */\n  0x00\n    /* \"#utility.yul\":2722:2736   */\n  mstore\n    /* \"#utility.yul\":2766:2770   */\n  0x20\n    /* \"#utility.yul\":2763:2764   */\n  0x00\n    /* \"#utility.yul\":2753:2771   */\n  keccak256\n    /* \"#utility.yul\":2745:2771   */\n  swap1\n  pop\n    /* \"#utility.yul\":2637:2778   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2784:2877   */\ntag_23:\n    /* \"#utility.yul\":2821:2827   */\n  0x00\n    /* \"#utility.yul\":2868:2870   */\n  0x20\n    /* \"#utility.yul\":2863:2865   */\n  0x1f\n    /* \"#utility.yul\":2856:2861   */\n  dup4\n    /* \"#utility.yul\":2852:2866   */\n  add\n    /* \"#utility.yul\":2848:2871   */\n  div\n    /* \"#utility.yul\":2838:2871   */\n  swap1\n  pop\n    /* \"#utility.yul\":2784:2877   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2883:2990   */\ntag_24:\n    /* \"#utility.yul\":2927:2935   */\n  0x00\n    /* \"#utility.yul\":2977:2982   */\n  dup3\n    /* \"#utility.yul\":2971:2975   */\n  dup3\n    /* \"#utility.yul\":2967:2983   */\n  shl\n    /* \"#utility.yul\":2946:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2883:2990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2996:3389   */\ntag_25:\n    /* \"#utility.yul\":3065:3071   */\n  0x00\n    /* \"#utility.yul\":3115:3116   */\n  0x08\n    /* \"#utility.yul\":3103:3113   */\n  dup4\n    /* \"#utility.yul\":3099:3117   */\n  mul\n    /* \"#utility.yul\":3138:3235   */\n  tag_67\n    /* \"#utility.yul\":3168:3234   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3157:3166   */\n  dup3\n    /* \"#utility.yul\":3138:3235   */\n  tag_24\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3256:3295   */\n  tag_68\n    /* \"#utility.yul\":3286:3294   */\n  dup7\n    /* \"#utility.yul\":3275:3284   */\n  dup4\n    /* \"#utility.yul\":3256:3295   */\n  tag_24\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3244:3295   */\n  swap6\n  pop\n    /* \"#utility.yul\":3328:3332   */\n  dup1\n    /* \"#utility.yul\":3324:3333   */\n  not\n    /* \"#utility.yul\":3317:3322   */\n  dup5\n    /* \"#utility.yul\":3313:3334   */\n  and\n    /* \"#utility.yul\":3304:3334   */\n  swap4\n  pop\n    /* \"#utility.yul\":3377:3381   */\n  dup1\n    /* \"#utility.yul\":3367:3375   */\n  dup7\n    /* \"#utility.yul\":3363:3382   */\n  and\n    /* \"#utility.yul\":3356:3361   */\n  dup5\n    /* \"#utility.yul\":3353:3383   */\n  or\n    /* \"#utility.yul\":3343:3383   */\n  swap3\n  pop\n    /* \"#utility.yul\":3072:3389   */\n  pop\n  pop\n    /* \"#utility.yul\":2996:3389   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3395:3455   */\ntag_26:\n    /* \"#utility.yul\":3423:3426   */\n  0x00\n    /* \"#utility.yul\":3444:3449   */\n  dup2\n    /* \"#utility.yul\":3437:3449   */\n  swap1\n  pop\n    /* \"#utility.yul\":3395:3455   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3461:3603   */\ntag_27:\n    /* \"#utility.yul\":3511:3520   */\n  0x00\n    /* \"#utility.yul\":3544:3597   */\n  tag_71\n    /* \"#utility.yul\":3562:3596   */\n  tag_72\n    /* \"#utility.yul\":3571:3595   */\n  tag_73\n    /* \"#utility.yul\":3589:3594   */\n  dup5\n    /* \"#utility.yul\":3571:3595   */\n  tag_15\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3562:3596   */\n  tag_26\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3544:3597   */\n  tag_15\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3531:3597   */\n  swap1\n  pop\n    /* \"#utility.yul\":3461:3603   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3609:3684   */\ntag_28:\n    /* \"#utility.yul\":3652:3655   */\n  0x00\n    /* \"#utility.yul\":3673:3678   */\n  dup2\n    /* \"#utility.yul\":3666:3678   */\n  swap1\n  pop\n    /* \"#utility.yul\":3609:3684   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3959   */\ntag_29:\n    /* \"#utility.yul\":3800:3839   */\n  tag_76\n    /* \"#utility.yul\":3831:3838   */\n  dup4\n    /* \"#utility.yul\":3800:3839   */\n  tag_27\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3861:3952   */\n  tag_77\n    /* \"#utility.yul\":3910:3951   */\n  tag_78\n    /* \"#utility.yul\":3934:3950   */\n  dup3\n    /* \"#utility.yul\":3910:3951   */\n  tag_28\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3902:3908   */\n  dup5\n    /* \"#utility.yul\":3895:3899   */\n  dup5\n    /* \"#utility.yul\":3889:3900   */\n  sload\n    /* \"#utility.yul\":3861:3952   */\n  tag_25\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3855:3859   */\n  dup3\n    /* \"#utility.yul\":3848:3953   */\n  sstore\n    /* \"#utility.yul\":3766:3959   */\n  pop\n    /* \"#utility.yul\":3690:3959   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3965:4038   */\ntag_30:\n    /* \"#utility.yul\":4010:4013   */\n  0x00\n    /* \"#utility.yul\":3965:4038   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4044:4233   */\ntag_31:\n    /* \"#utility.yul\":4121:4153   */\n  tag_81\n  tag_30\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4162:4227   */\n  tag_82\n    /* \"#utility.yul\":4220:4226   */\n  dup2\n    /* \"#utility.yul\":4212:4218   */\n  dup5\n    /* \"#utility.yul\":4206:4210   */\n  dup5\n    /* \"#utility.yul\":4162:4227   */\n  tag_29\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4097:4233   */\n  pop\n    /* \"#utility.yul\":4044:4233   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4239:4425   */\ntag_32:\n    /* \"#utility.yul\":4299:4419   */\ntag_84:\n    /* \"#utility.yul\":4316:4319   */\n  dup2\n    /* \"#utility.yul\":4309:4314   */\n  dup2\n    /* \"#utility.yul\":4306:4320   */\n  lt\n    /* \"#utility.yul\":4299:4419   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4370:4409   */\n  tag_87\n    /* \"#utility.yul\":4407:4408   */\n  0x00\n    /* \"#utility.yul\":4400:4405   */\n  dup3\n    /* \"#utility.yul\":4370:4409   */\n  tag_31\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4343:4344   */\n  0x01\n    /* \"#utility.yul\":4336:4341   */\n  dup2\n    /* \"#utility.yul\":4332:4345   */\n  add\n    /* \"#utility.yul\":4323:4345   */\n  swap1\n  pop\n    /* \"#utility.yul\":4299:4419   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":4239:4425   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4974   */\ntag_33:\n    /* \"#utility.yul\":4532:4534   */\n  0x1f\n    /* \"#utility.yul\":4527:4530   */\n  dup3\n    /* \"#utility.yul\":4524:4535   */\n  gt\n    /* \"#utility.yul\":4521:4967   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4566:4604   */\n  tag_90\n    /* \"#utility.yul\":4598:4603   */\n  dup2\n    /* \"#utility.yul\":4566:4604   */\n  tag_22\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4650:4679   */\n  tag_91\n    /* \"#utility.yul\":4668:4678   */\n  dup5\n    /* \"#utility.yul\":4650:4679   */\n  tag_23\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4640:4648   */\n  dup2\n    /* \"#utility.yul\":4636:4680   */\n  add\n    /* \"#utility.yul\":4833:4835   */\n  0x20\n    /* \"#utility.yul\":4821:4831   */\n  dup6\n    /* \"#utility.yul\":4818:4836   */\n  lt\n    /* \"#utility.yul\":4815:4864   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4854:4862   */\n  dup2\n    /* \"#utility.yul\":4839:4862   */\n  swap1\n  pop\n    /* \"#utility.yul\":4815:4864   */\ntag_92:\n    /* \"#utility.yul\":4877:4957   */\n  tag_93\n    /* \"#utility.yul\":4933:4955   */\n  tag_94\n    /* \"#utility.yul\":4951:4954   */\n  dup6\n    /* \"#utility.yul\":4933:4955   */\n  tag_23\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4923:4931   */\n  dup4\n    /* \"#utility.yul\":4919:4956   */\n  add\n    /* \"#utility.yul\":4906:4917   */\n  dup3\n    /* \"#utility.yul\":4877:4957   */\n  tag_32\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4536:4967   */\n  pop\n  pop\n    /* \"#utility.yul\":4521:4967   */\ntag_89:\n    /* \"#utility.yul\":4431:4974   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4980:5097   */\ntag_34:\n    /* \"#utility.yul\":5034:5042   */\n  0x00\n    /* \"#utility.yul\":5084:5089   */\n  dup3\n    /* \"#utility.yul\":5078:5082   */\n  dup3\n    /* \"#utility.yul\":5074:5090   */\n  shr\n    /* \"#utility.yul\":5053:5090   */\n  swap1\n  pop\n    /* \"#utility.yul\":4980:5097   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5103:5272   */\ntag_35:\n    /* \"#utility.yul\":5147:5153   */\n  0x00\n    /* \"#utility.yul\":5180:5231   */\n  tag_97\n    /* \"#utility.yul\":5228:5229   */\n  0x00\n    /* \"#utility.yul\":5224:5230   */\n  not\n    /* \"#utility.yul\":5216:5221   */\n  dup5\n    /* \"#utility.yul\":5213:5214   */\n  0x08\n    /* \"#utility.yul\":5209:5222   */\n  mul\n    /* \"#utility.yul\":5180:5231   */\n  tag_34\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5176:5232   */\n  not\n    /* \"#utility.yul\":5261:5265   */\n  dup1\n    /* \"#utility.yul\":5255:5259   */\n  dup4\n    /* \"#utility.yul\":5251:5266   */\n  and\n    /* \"#utility.yul\":5241:5266   */\n  swap2\n  pop\n    /* \"#utility.yul\":5154:5272   */\n  pop\n    /* \"#utility.yul\":5103:5272   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5277:5572   */\ntag_36:\n    /* \"#utility.yul\":5353:5357   */\n  0x00\n    /* \"#utility.yul\":5499:5528   */\n  tag_99\n    /* \"#utility.yul\":5524:5527   */\n  dup4\n    /* \"#utility.yul\":5518:5522   */\n  dup4\n    /* \"#utility.yul\":5499:5528   */\n  tag_35\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5491:5528   */\n  swap2\n  pop\n    /* \"#utility.yul\":5561:5564   */\n  dup3\n    /* \"#utility.yul\":5558:5559   */\n  0x02\n    /* \"#utility.yul\":5554:5565   */\n  mul\n    /* \"#utility.yul\":5548:5552   */\n  dup3\n    /* \"#utility.yul\":5545:5566   */\n  or\n    /* \"#utility.yul\":5537:5566   */\n  swap1\n  pop\n    /* \"#utility.yul\":5277:5572   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5577:6972   */\ntag_8:\n    /* \"#utility.yul\":5694:5731   */\n  tag_101\n    /* \"#utility.yul\":5727:5730   */\n  dup3\n    /* \"#utility.yul\":5694:5731   */\n  tag_18\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5796:5814   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5788:5794   */\n  dup2\n    /* \"#utility.yul\":5785:5815   */\n  gt\n    /* \"#utility.yul\":5782:5838   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5818:5836   */\n  tag_103\n  tag_19\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5782:5838   */\ntag_102:\n    /* \"#utility.yul\":5862:5900   */\n  tag_104\n    /* \"#utility.yul\":5894:5898   */\n  dup3\n    /* \"#utility.yul\":5888:5899   */\n  sload\n    /* \"#utility.yul\":5862:5900   */\n  tag_21\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5947:6014   */\n  tag_105\n    /* \"#utility.yul\":6007:6013   */\n  dup3\n    /* \"#utility.yul\":5999:6005   */\n  dup3\n    /* \"#utility.yul\":5993:5997   */\n  dup6\n    /* \"#utility.yul\":5947:6014   */\n  tag_33\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":6041:6042   */\n  0x00\n    /* \"#utility.yul\":6065:6069   */\n  0x20\n    /* \"#utility.yul\":6052:6069   */\n  swap1\n  pop\n    /* \"#utility.yul\":6097:6099   */\n  0x1f\n    /* \"#utility.yul\":6089:6095   */\n  dup4\n    /* \"#utility.yul\":6086:6100   */\n  gt\n    /* \"#utility.yul\":6114:6115   */\n  0x01\n    /* \"#utility.yul\":6109:6727   */\n  dup2\n  eq\n  tag_107\n  jumpi\n    /* \"#utility.yul\":6771:6772   */\n  0x00\n    /* \"#utility.yul\":6788:6794   */\n  dup5\n    /* \"#utility.yul\":6785:6862   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":6837:6846   */\n  dup3\n    /* \"#utility.yul\":6832:6835   */\n  dup8\n    /* \"#utility.yul\":6828:6847   */\n  add\n    /* \"#utility.yul\":6822:6848   */\n  mload\n    /* \"#utility.yul\":6813:6848   */\n  swap1\n  pop\n    /* \"#utility.yul\":6785:6862   */\ntag_108:\n    /* \"#utility.yul\":6888:6955   */\n  tag_109\n    /* \"#utility.yul\":6948:6954   */\n  dup6\n    /* \"#utility.yul\":6941:6946   */\n  dup3\n    /* \"#utility.yul\":6888:6955   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":6882:6886   */\n  dup7\n    /* \"#utility.yul\":6875:6956   */\n  sstore\n    /* \"#utility.yul\":6744:6966   */\n  pop\n    /* \"#utility.yul\":6079:6966   */\n  jump(tag_106)\n    /* \"#utility.yul\":6109:6727   */\ntag_107:\n    /* \"#utility.yul\":6161:6165   */\n  0x1f\n    /* \"#utility.yul\":6157:6166   */\n  not\n    /* \"#utility.yul\":6149:6155   */\n  dup5\n    /* \"#utility.yul\":6145:6167   */\n  and\n    /* \"#utility.yul\":6195:6232   */\n  tag_110\n    /* \"#utility.yul\":6227:6231   */\n  dup7\n    /* \"#utility.yul\":6195:6232   */\n  tag_22\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":6254:6255   */\n  0x00\n    /* \"#utility.yul\":6268:6476   */\ntag_111:\n    /* \"#utility.yul\":6282:6289   */\n  dup3\n    /* \"#utility.yul\":6279:6280   */\n  dup2\n    /* \"#utility.yul\":6276:6290   */\n  lt\n    /* \"#utility.yul\":6268:6476   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":6361:6370   */\n  dup5\n    /* \"#utility.yul\":6356:6359   */\n  dup10\n    /* \"#utility.yul\":6352:6371   */\n  add\n    /* \"#utility.yul\":6346:6372   */\n  mload\n    /* \"#utility.yul\":6338:6344   */\n  dup3\n    /* \"#utility.yul\":6331:6373   */\n  sstore\n    /* \"#utility.yul\":6412:6413   */\n  0x01\n    /* \"#utility.yul\":6404:6410   */\n  dup3\n    /* \"#utility.yul\":6400:6414   */\n  add\n    /* \"#utility.yul\":6390:6414   */\n  swap2\n  pop\n    /* \"#utility.yul\":6459:6461   */\n  0x20\n    /* \"#utility.yul\":6448:6457   */\n  dup6\n    /* \"#utility.yul\":6444:6462   */\n  add\n    /* \"#utility.yul\":6431:6462   */\n  swap5\n  pop\n    /* \"#utility.yul\":6305:6309   */\n  0x20\n    /* \"#utility.yul\":6302:6303   */\n  dup2\n    /* \"#utility.yul\":6298:6310   */\n  add\n    /* \"#utility.yul\":6293:6310   */\n  swap1\n  pop\n    /* \"#utility.yul\":6268:6476   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":6504:6510   */\n  dup7\n    /* \"#utility.yul\":6495:6502   */\n  dup4\n    /* \"#utility.yul\":6492:6511   */\n  lt\n    /* \"#utility.yul\":6489:6668   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6562:6571   */\n  dup5\n    /* \"#utility.yul\":6557:6560   */\n  dup10\n    /* \"#utility.yul\":6553:6572   */\n  add\n    /* \"#utility.yul\":6547:6573   */\n  mload\n    /* \"#utility.yul\":6605:6653   */\n  tag_115\n    /* \"#utility.yul\":6647:6651   */\n  0x1f\n    /* \"#utility.yul\":6639:6645   */\n  dup10\n    /* \"#utility.yul\":6635:6652   */\n  and\n    /* \"#utility.yul\":6624:6633   */\n  dup3\n    /* \"#utility.yul\":6605:6653   */\n  tag_35\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6597:6603   */\n  dup4\n    /* \"#utility.yul\":6590:6654   */\n  sstore\n    /* \"#utility.yul\":6512:6668   */\n  pop\n    /* \"#utility.yul\":6489:6668   */\ntag_114:\n    /* \"#utility.yul\":6714:6715   */\n  0x01\n    /* \"#utility.yul\":6710:6711   */\n  0x02\n    /* \"#utility.yul\":6702:6708   */\n  dup9\n    /* \"#utility.yul\":6698:6712   */\n  mul\n    /* \"#utility.yul\":6694:6716   */\n  add\n    /* \"#utility.yul\":6688:6692   */\n  dup9\n    /* \"#utility.yul\":6681:6717   */\n  sstore\n    /* \"#utility.yul\":6116:6727   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6079:6966   */\ntag_106:\n  pop\n    /* \"#utility.yul\":5669:6972   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5577:6972   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/location.sol\":81:3323  contract Geologix is ERC20  {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/location.sol\":81:3323  contract Geologix is ERC20  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x9af8a5eb\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x9af8a5eb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb620b8cb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe7b4cac6\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8ea286c2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3197cbb6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4fd7d76a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x563a6c7a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x589af69c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x63a411c0\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x217f4353\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":2077:2166  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":4296:4482  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3147:3244  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":195:213  uint public radius */\n    tag_6:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":5042:5286  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3005:3087  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":246:265  uint public endTime */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":142:162  uint public latitude */\n    tag_10:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":2592:2744  function _calculateDistance(uint lat1, uint lon1, uint lat2, uint lon2) public pure returns (uint) {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":168:189  uint public longitude */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":1184:1391  function addDriver(address _public_address) external onlyOwner {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/ERC20.sol\":3302:3418  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":219:240  uint public startTime */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":116:136  address public owner */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":2955:3320  function getDevice() public view returns (uint complianceCount, uint nonComplianceCount, DeviceState deviceState) {... */\n    tag_17:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2279:2372  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":648:671  uint public DeviceCount */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3613:3791  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":1397:2285  function optIn(uint _latitude, uint _longitude) external {... */\n    tag_21:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/ERC20.sol\":3849:3989  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":601:642  mapping(address => Device) public devices */\n    tag_23:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/location.sol\":271:295  uint public rewardAmount */\n    tag_24:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2077:2166  function name() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"contracts/ERC20.sol\":2122:2135  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":2154:2159  _name */\n      0x03\n        /* \"contracts/ERC20.sol\":2147:2159  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2077:2166  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4296:4482  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"contracts/ERC20.sol\":4369:4373  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4385:4398  address owner */\n      dup1\n        /* \"contracts/ERC20.sol\":4401:4413  _msgSender() */\n      tag_122\n        /* \"contracts/ERC20.sol\":4401:4411  _msgSender */\n      tag_123\n        /* \"contracts/ERC20.sol\":4401:4413  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC20.sol\":4385:4413  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":4423:4454  _approve(owner, spender, value) */\n      tag_124\n        /* \"contracts/ERC20.sol\":4432:4437  owner */\n      dup2\n        /* \"contracts/ERC20.sol\":4439:4446  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":4448:4453  value */\n      dup6\n        /* \"contracts/ERC20.sol\":4423:4431  _approve */\n      tag_125\n        /* \"contracts/ERC20.sol\":4423:4454  _approve(owner, spender, value) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/ERC20.sol\":4471:4475  true */\n      0x01\n        /* \"contracts/ERC20.sol\":4464:4475  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":4296:4482  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3147:3244  function totalSupply() public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"contracts/ERC20.sol\":3199:3206  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3225:3237  _totalSupply */\n      sload(0x02)\n        /* \"contracts/ERC20.sol\":3218:3237  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3147:3244  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/location.sol\":195:213  uint public radius */\n    tag_43:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5042:5286  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"contracts/ERC20.sol\":5129:5133  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":5145:5160  address spender */\n      dup1\n        /* \"contracts/ERC20.sol\":5163:5175  _msgSender() */\n      tag_128\n        /* \"contracts/ERC20.sol\":5163:5173  _msgSender */\n      tag_123\n        /* \"contracts/ERC20.sol\":5163:5175  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/ERC20.sol\":5145:5175  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5185:5222  _spendAllowance(from, spender, value) */\n      tag_129\n        /* \"contracts/ERC20.sol\":5201:5205  from */\n      dup6\n        /* \"contracts/ERC20.sol\":5207:5214  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":5216:5221  value */\n      dup6\n        /* \"contracts/ERC20.sol\":5185:5200  _spendAllowance */\n      tag_130\n        /* \"contracts/ERC20.sol\":5185:5222  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/ERC20.sol\":5232:5258  _transfer(from, to, value) */\n      tag_131\n        /* \"contracts/ERC20.sol\":5242:5246  from */\n      dup6\n        /* \"contracts/ERC20.sol\":5248:5250  to */\n      dup6\n        /* \"contracts/ERC20.sol\":5252:5257  value */\n      dup6\n        /* \"contracts/ERC20.sol\":5232:5241  _transfer */\n      tag_132\n        /* \"contracts/ERC20.sol\":5232:5258  _transfer(from, to, value) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/ERC20.sol\":5275:5279  true */\n      0x01\n        /* \"contracts/ERC20.sol\":5268:5279  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":5042:5286  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3005:3087  function decimals() public view virtual returns (uint8) {... */\n    tag_51:\n        /* \"contracts/ERC20.sol\":3054:3059  uint8 */\n      0x00\n        /* \"contracts/ERC20.sol\":3078:3080  18 */\n      0x12\n        /* \"contracts/ERC20.sol\":3071:3080  return 18 */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3005:3087  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/location.sol\":246:265  uint public endTime */\n    tag_55:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/location.sol\":142:162  uint public latitude */\n    tag_58:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/location.sol\":2592:2744  function _calculateDistance(uint lat1, uint lon1, uint lat2, uint lon2) public pure returns (uint) {... */\n    tag_63:\n        /* \"contracts/location.sol\":2685:2689  uint */\n      0x00\n        /* \"contracts/location.sol\":2732:2736  lon2 */\n      dup2\n        /* \"contracts/location.sol\":2725:2729  lon1 */\n      dup5\n        /* \"contracts/location.sol\":2725:2736  lon1 - lon2 */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/location.sol\":2716:2720  lat2 */\n      dup4\n        /* \"contracts/location.sol\":2709:2713  lat1 */\n      dup7\n        /* \"contracts/location.sol\":2709:2720  lat1 - lat2 */\n      tag_137\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_137:\n        /* \"contracts/location.sol\":2708:2737  (lat1 - lat2) + (lon1 - lon2) */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"contracts/location.sol\":2701:2737  return (lat1 - lat2) + (lon1 - lon2) */\n      swap1\n      pop\n        /* \"contracts/location.sol\":2592:2744  function _calculateDistance(uint lat1, uint lon1, uint lat2, uint lon2) public pure returns (uint) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/location.sol\":168:189  uint public longitude */\n    tag_66:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/location.sol\":1184:1391  function addDriver(address _public_address) external onlyOwner {... */\n    tag_71:\n        /* \"contracts/location.sol\":736:741  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/location.sol\":722:741  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/location.sol\":722:732  msg.sender */\n      caller\n        /* \"contracts/location.sol\":722:741  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/location.sol\":714:742  require(msg.sender == owner) */\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n        /* \"contracts/location.sol\":1257:1268  DeviceCount */\n      0x0d\n      0x00\n        /* \"contracts/location.sol\":1257:1271  DeviceCount ++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/location.sol\":1308:1384  Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/location.sol\":1315:1316  0 */\n      0x00\n        /* \"contracts/location.sol\":1308:1384  Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/location.sol\":1318:1319  0 */\n      0x00\n        /* \"contracts/location.sol\":1308:1384  Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/location.sol\":1321:1340  DeviceState.Created */\n      0x00\n        /* \"contracts/location.sol\":1308:1384  Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_145\n      jumpi\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n    tag_145:\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/location.sol\":1342:1357  _public_address */\n      dup3\n        /* \"contracts/location.sol\":1308:1384  Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/location.sol\":1359:1374  block.timestamp */\n      timestamp\n        /* \"contracts/location.sol\":1308:1384  Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/location.sol\":1376:1377  0 */\n      0x00\n        /* \"contracts/location.sol\":1308:1384  Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/location.sol\":1379:1383  true */\n      0x01\n        /* \"contracts/location.sol\":1308:1384  Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/location.sol\":1281:1288  devices */\n      0x0c\n        /* \"contracts/location.sol\":1281:1305  devices[_public_address] */\n      0x00\n        /* \"contracts/location.sol\":1289:1304  _public_address */\n      dup4\n        /* \"contracts/location.sol\":1281:1305  devices[_public_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":1281:1384  devices[_public_address] = Device(0, 0, DeviceState.Created, _public_address, block.timestamp, 0, true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_147\n      jump\t// in\n    tag_149:\n    tag_148:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/location.sol\":1184:1391  function addDriver(address _public_address) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3302:3418  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"contracts/ERC20.sol\":3367:3374  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3393:3402  _balances */\n      dup1\n        /* \"contracts/ERC20.sol\":3393:3411  _balances[account] */\n      0x00\n        /* \"contracts/ERC20.sol\":3403:3410  account */\n      dup4\n        /* \"contracts/ERC20.sol\":3393:3411  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3386:3411  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3302:3418  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/location.sol\":219:240  uint public startTime */\n    tag_77:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/location.sol\":116:136  address public owner */\n    tag_80:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/location.sol\":2955:3320  function getDevice() public view returns (uint complianceCount, uint nonComplianceCount, DeviceState deviceState) {... */\n    tag_84:\n        /* \"contracts/location.sol\":2997:3017  uint complianceCount */\n      0x00\n        /* \"contracts/location.sol\":3019:3042  uint nonComplianceCount */\n      dup1\n        /* \"contracts/location.sol\":3044:3067  DeviceState deviceState */\n      0x00\n        /* \"contracts/location.sol\":3133:3134  0 */\n      dup1\n        /* \"contracts/location.sol\":3087:3135  devices[msg.sender].public_address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/location.sol\":3087:3094  devices */\n      0x0c\n        /* \"contracts/location.sol\":3087:3106  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":3095:3105  msg.sender */\n      caller\n        /* \"contracts/location.sol\":3087:3106  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":3087:3121  devices[msg.sender].public_address */\n      0x02\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/location.sol\":3087:3135  devices[msg.sender].public_address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/location.sol\":3079:3161  require(devices[msg.sender].public_address != address(0), \"Device not registered\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/location.sol\":3171:3194  Device memory curDevice */\n      0x00\n        /* \"contracts/location.sol\":3197:3204  devices */\n      0x0c\n        /* \"contracts/location.sol\":3197:3216  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":3205:3215  msg.sender */\n      caller\n        /* \"contracts/location.sol\":3197:3216  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":3171:3216  Device memory curDevice = devices[msg.sender] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x03\n      dup2\n      gt\n      iszero\n      tag_155\n      jumpi\n      tag_156\n      tag_147\n      jump\t// in\n    tag_156:\n    tag_155:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_157\n      jumpi\n      tag_158\n      tag_147\n      jump\t// in\n    tag_158:\n    tag_157:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/location.sol\":3234:3243  curDevice */\n      dup1\n        /* \"contracts/location.sol\":3234:3259  curDevice.complianceCount */\n      0x00\n      add\n      mload\n        /* \"contracts/location.sol\":3261:3270  curDevice */\n      dup2\n        /* \"contracts/location.sol\":3261:3289  curDevice.nonComplianceCount */\n      0x20\n      add\n      mload\n        /* \"contracts/location.sol\":3291:3300  curDevice */\n      dup3\n        /* \"contracts/location.sol\":3291:3312  curDevice.deviceState */\n      0x40\n      add\n      mload\n        /* \"contracts/location.sol\":3226:3313  return (curDevice.complianceCount, curDevice.nonComplianceCount, curDevice.deviceState) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"contracts/location.sol\":2955:3320  function getDevice() public view returns (uint complianceCount, uint nonComplianceCount, DeviceState deviceState) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2279:2372  function symbol() public view virtual returns (string memory) {... */\n    tag_88:\n        /* \"contracts/ERC20.sol\":2326:2339  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":2358:2365  _symbol */\n      0x04\n        /* \"contracts/ERC20.sol\":2351:2365  return _symbol */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_116\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_116\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2279:2372  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/location.sol\":648:671  uint public DeviceCount */\n    tag_91:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3613:3791  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_95:\n        /* \"contracts/ERC20.sol\":3682:3686  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3698:3711  address owner */\n      dup1\n        /* \"contracts/ERC20.sol\":3714:3726  _msgSender() */\n      tag_166\n        /* \"contracts/ERC20.sol\":3714:3724  _msgSender */\n      tag_123\n        /* \"contracts/ERC20.sol\":3714:3726  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC20.sol\":3698:3726  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3736:3763  _transfer(owner, to, value) */\n      tag_167\n        /* \"contracts/ERC20.sol\":3746:3751  owner */\n      dup2\n        /* \"contracts/ERC20.sol\":3753:3755  to */\n      dup6\n        /* \"contracts/ERC20.sol\":3757:3762  value */\n      dup6\n        /* \"contracts/ERC20.sol\":3736:3745  _transfer */\n      tag_132\n        /* \"contracts/ERC20.sol\":3736:3763  _transfer(owner, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/ERC20.sol\":3780:3784  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3773:3784  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":3613:3791  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/location.sol\":1397:2285  function optIn(uint _latitude, uint _longitude) external {... */\n    tag_100:\n        /* \"contracts/location.sol\":1515:1516  0 */\n      0x00\n        /* \"contracts/location.sol\":1469:1517  devices[msg.sender].public_address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/location.sol\":1469:1476  devices */\n      0x0c\n        /* \"contracts/location.sol\":1469:1488  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":1477:1487  msg.sender */\n      caller\n        /* \"contracts/location.sol\":1469:1488  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":1469:1503  devices[msg.sender].public_address */\n      0x02\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/location.sol\":1469:1517  devices[msg.sender].public_address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/location.sol\":1461:1543  require(devices[msg.sender].public_address != address(0), \"Device not registered\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_154\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/location.sol\":1557:1564  devices */\n      0x0c\n        /* \"contracts/location.sol\":1557:1576  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":1565:1575  msg.sender */\n      caller\n        /* \"contracts/location.sol\":1557:1576  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":1557:1585  devices[msg.sender].isActive */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/location.sol\":1549:1623  require(devices[msg.sender].isActive, \"the device Contract is not active\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/location.sol\":1656:1665  startTime */\n      sload(0x09)\n        /* \"contracts/location.sol\":1638:1653  block.timestamp */\n      timestamp\n        /* \"contracts/location.sol\":1638:1665  block.timestamp < startTime */\n      lt\n        /* \"contracts/location.sol\":1634:1985  if (block.timestamp < startTime) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/location.sol\":1677:1715  revert(\"Contract has not started yet\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/location.sol\":1634:1985  if (block.timestamp < startTime) {... */\n    tag_174:\n        /* \"contracts/location.sol\":1750:1757  endTime */\n      sload(0x0a)\n        /* \"contracts/location.sol\":1732:1747  block.timestamp */\n      timestamp\n        /* \"contracts/location.sol\":1732:1757  block.timestamp > endTime */\n      gt\n        /* \"contracts/location.sol\":1728:1985  if (block.timestamp > endTime) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/location.sol\":1801:1806  false */\n      0x00\n        /* \"contracts/location.sol\":1770:1777  devices */\n      0x0c\n        /* \"contracts/location.sol\":1770:1789  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":1778:1788  msg.sender */\n      caller\n        /* \"contracts/location.sol\":1770:1789  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":1770:1798  devices[msg.sender].isActive */\n      0x05\n      add\n      0x00\n        /* \"contracts/location.sol\":1770:1806  devices[msg.sender].isActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/location.sol\":1885:1897  rewardAmount */\n      sload(0x0b)\n        /* \"contracts/location.sol\":1851:1858  devices */\n      0x0c\n        /* \"contracts/location.sol\":1851:1870  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":1859:1869  msg.sender */\n      caller\n        /* \"contracts/location.sol\":1851:1870  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":1851:1882  devices[msg.sender].payedAmount */\n      0x04\n      add\n        /* \"contracts/location.sol\":1851:1897  devices[msg.sender].payedAmount = rewardAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/location.sol\":1941:1962  DeviceState.Completed */\n      0x03\n        /* \"contracts/location.sol\":1907:1914  devices */\n      0x0c\n        /* \"contracts/location.sol\":1907:1926  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":1915:1925  msg.sender */\n      caller\n        /* \"contracts/location.sol\":1907:1926  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":1907:1938  devices[msg.sender].deviceState */\n      0x02\n      add\n      0x00\n        /* \"contracts/location.sol\":1907:1962  devices[msg.sender].deviceState = DeviceState.Completed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_179\n      jumpi\n      tag_180\n      tag_147\n      jump\t// in\n    tag_180:\n    tag_179:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/location.sol\":1972:1979  return; */\n      jump(tag_168)\n        /* \"contracts/location.sol\":1728:1985  if (block.timestamp > endTime) {... */\n    tag_178:\n        /* \"contracts/location.sol\":1999:2035  _isWithinArea(_latitude, _longitude) */\n      tag_181\n        /* \"contracts/location.sol\":2013:2022  _latitude */\n      dup3\n        /* \"contracts/location.sol\":2024:2034  _longitude */\n      dup3\n        /* \"contracts/location.sol\":1999:2012  _isWithinArea */\n      tag_182\n        /* \"contracts/location.sol\":1999:2035  _isWithinArea(_latitude, _longitude) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/location.sol\":1995:2279  if (_isWithinArea(_latitude, _longitude)) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/location.sol\":2047:2054  devices */\n      0x0c\n        /* \"contracts/location.sol\":2047:2066  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":2055:2065  msg.sender */\n      caller\n        /* \"contracts/location.sol\":2047:2066  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":2047:2082  devices[msg.sender].complianceCount */\n      0x00\n      add\n      0x00\n        /* \"contracts/location.sol\":2047:2084  devices[msg.sender].complianceCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_184\n      swap1\n      tag_144\n      jump\t// in\n    tag_184:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/location.sol\":2128:2146  DeviceState.InZone */\n      0x01\n        /* \"contracts/location.sol\":2094:2101  devices */\n      0x0c\n        /* \"contracts/location.sol\":2094:2113  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":2102:2112  msg.sender */\n      caller\n        /* \"contracts/location.sol\":2094:2113  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":2094:2125  devices[msg.sender].deviceState */\n      0x02\n      add\n      0x00\n        /* \"contracts/location.sol\":2094:2146  devices[msg.sender].deviceState = DeviceState.InZone */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      tag_186\n      tag_147\n      jump\t// in\n    tag_186:\n    tag_185:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/location.sol\":1995:2279  if (_isWithinArea(_latitude, _longitude)) {... */\n      jump(tag_187)\n    tag_183:\n        /* \"contracts/location.sol\":2169:2176  devices */\n      0x0c\n        /* \"contracts/location.sol\":2169:2188  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":2177:2187  msg.sender */\n      caller\n        /* \"contracts/location.sol\":2169:2188  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":2169:2207  devices[msg.sender].nonComplianceCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/location.sol\":2169:2209  devices[msg.sender].nonComplianceCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_188\n      swap1\n      tag_144\n      jump\t// in\n    tag_188:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/location.sol\":2253:2272  DeviceState.OutZone */\n      0x02\n        /* \"contracts/location.sol\":2219:2226  devices */\n      0x0c\n        /* \"contracts/location.sol\":2219:2238  devices[msg.sender] */\n      0x00\n        /* \"contracts/location.sol\":2227:2237  msg.sender */\n      caller\n        /* \"contracts/location.sol\":2219:2238  devices[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/location.sol\":2219:2250  devices[msg.sender].deviceState */\n      0x02\n      add\n      0x00\n        /* \"contracts/location.sol\":2219:2272  devices[msg.sender].deviceState = DeviceState.OutZone */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      tag_190\n      tag_147\n      jump\t// in\n    tag_190:\n    tag_189:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/location.sol\":1995:2279  if (_isWithinArea(_latitude, _longitude)) {... */\n    tag_187:\n        /* \"contracts/location.sol\":1397:2285  function optIn(uint _latitude, uint _longitude) external {... */\n    tag_168:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3849:3989  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_104:\n        /* \"contracts/ERC20.sol\":3929:3936  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3955:3966  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":3955:3973  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":3967:3972  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":3955:3973  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":3955:3982  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":3974:3981  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":3955:3982  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3948:3982  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3849:3989  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/location.sol\":601:642  mapping(address => Device) public devices */\n    tag_108:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/location.sol\":271:295  uint public rewardAmount */\n    tag_112:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_123:\n        /* \"utils/Context.sol\":709:716  address */\n      0x00\n        /* \"utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":8992:9120  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_125:\n        /* \"contracts/ERC20.sol\":9076:9113  _approve(owner, spender, value, true) */\n      tag_194\n        /* \"contracts/ERC20.sol\":9085:9090  owner */\n      dup4\n        /* \"contracts/ERC20.sol\":9092:9099  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":9101:9106  value */\n      dup4\n        /* \"contracts/ERC20.sol\":9108:9112  true */\n      0x01\n        /* \"contracts/ERC20.sol\":9076:9084  _approve */\n      tag_195\n        /* \"contracts/ERC20.sol\":9076:9113  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/ERC20.sol\":8992:9120  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":10666:11143  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_130:\n        /* \"contracts/ERC20.sol\":10765:10789  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ERC20.sol\":10792:10817  allowance(owner, spender) */\n      tag_197\n        /* \"contracts/ERC20.sol\":10802:10807  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":10809:10816  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":10792:10801  allowance */\n      tag_104\n        /* \"contracts/ERC20.sol\":10792:10817  allowance(owner, spender) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/ERC20.sol\":10765:10817  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":10851:10868  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC20.sol\":10831:10847  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":10831:10868  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/ERC20.sol\":10827:11137  if (currentAllowance != type(uint256).max) {... */\n      tag_198\n      jumpi\n        /* \"contracts/ERC20.sol\":10907:10912  value */\n      dup2\n        /* \"contracts/ERC20.sol\":10888:10904  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":10888:10912  currentAllowance < value */\n      lt\n        /* \"contracts/ERC20.sol\":10884:11014  if (currentAllowance < value) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"contracts/ERC20.sol\":10966:10973  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":10975:10991  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":10993:10998  value */\n      dup4\n        /* \"contracts/ERC20.sol\":10939:10999  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":10884:11014  if (currentAllowance < value) {... */\n    tag_199:\n        /* \"contracts/ERC20.sol\":11055:11112  _approve(owner, spender, currentAllowance - value, false) */\n      tag_202\n        /* \"contracts/ERC20.sol\":11064:11069  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":11071:11078  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":11099:11104  value */\n      dup5\n        /* \"contracts/ERC20.sol\":11080:11096  currentAllowance */\n      dup5\n        /* \"contracts/ERC20.sol\":11080:11104  currentAllowance - value */\n      sub\n        /* \"contracts/ERC20.sol\":11106:11111  false */\n      0x00\n        /* \"contracts/ERC20.sol\":11055:11063  _approve */\n      tag_195\n        /* \"contracts/ERC20.sol\":11055:11112  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/ERC20.sol\":10827:11137  if (currentAllowance != type(uint256).max) {... */\n    tag_198:\n        /* \"contracts/ERC20.sol\":10755:11143  {... */\n      pop\n        /* \"contracts/ERC20.sol\":10666:11143  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5659:5959  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_132:\n        /* \"contracts/ERC20.sol\":5758:5759  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5742:5760  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5742:5746  from */\n      dup4\n        /* \"contracts/ERC20.sol\":5742:5760  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":5738:5824  if (from == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"contracts/ERC20.sol\":5810:5811  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5783:5813  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":5738:5824  if (from == address(0)) {... */\n    tag_204:\n        /* \"contracts/ERC20.sol\":5851:5852  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5837:5853  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5837:5839  to */\n      dup3\n        /* \"contracts/ERC20.sol\":5837:5853  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":5833:5919  if (to == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"contracts/ERC20.sol\":5905:5906  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5876:5908  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":5833:5919  if (to == address(0)) {... */\n    tag_206:\n        /* \"contracts/ERC20.sol\":5928:5952  _update(from, to, value) */\n      tag_208\n        /* \"contracts/ERC20.sol\":5936:5940  from */\n      dup4\n        /* \"contracts/ERC20.sol\":5942:5944  to */\n      dup4\n        /* \"contracts/ERC20.sol\":5946:5951  value */\n      dup4\n        /* \"contracts/ERC20.sol\":5928:5935  _update */\n      tag_209\n        /* \"contracts/ERC20.sol\":5928:5952  _update(from, to, value) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/ERC20.sol\":5659:5959  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/location.sol\":2291:2586  function _isWithinArea(uint _latitude, uint _longitude) private view returns (bool) {... */\n    tag_182:\n        /* \"contracts/location.sol\":2369:2373  bool */\n      0x00\n        /* \"contracts/location.sol\":2466:2479  uint distance */\n      dup1\n        /* \"contracts/location.sol\":2482:2544  _calculateDistance(latitude, longitude, _latitude, _longitude) */\n      tag_211\n        /* \"contracts/location.sol\":2501:2509  latitude */\n      sload(0x06)\n        /* \"contracts/location.sol\":2511:2520  longitude */\n      sload(0x07)\n        /* \"contracts/location.sol\":2522:2531  _latitude */\n      dup7\n        /* \"contracts/location.sol\":2533:2543  _longitude */\n      dup7\n        /* \"contracts/location.sol\":2482:2500  _calculateDistance */\n      tag_63\n        /* \"contracts/location.sol\":2482:2544  _calculateDistance(latitude, longitude, _latitude, _longitude) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/location.sol\":2466:2544  uint distance = _calculateDistance(latitude, longitude, _latitude, _longitude) */\n      swap1\n      pop\n        /* \"contracts/location.sol\":2573:2579  radius */\n      sload(0x08)\n        /* \"contracts/location.sol\":2561:2569  distance */\n      dup2\n        /* \"contracts/location.sol\":2561:2579  distance <= radius */\n      gt\n      iszero\n        /* \"contracts/location.sol\":2554:2579  return distance <= radius */\n      swap2\n      pop\n      pop\n        /* \"contracts/location.sol\":2291:2586  function _isWithinArea(uint _latitude, uint _longitude) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":9952:10384  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_195:\n        /* \"contracts/ERC20.sol\":10081:10082  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":10064:10083  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":10064:10069  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":10064:10083  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":10060:10149  if (owner == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"contracts/ERC20.sol\":10135:10136  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":10106:10138  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":10060:10149  if (owner == address(0)) {... */\n    tag_213:\n        /* \"contracts/ERC20.sol\":10181:10182  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":10162:10183  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":10162:10169  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":10162:10183  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":10158:10248  if (spender == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"contracts/ERC20.sol\":10234:10235  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":10206:10237  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":10158:10248  if (spender == address(0)) {... */\n    tag_215:\n        /* \"contracts/ERC20.sol\":10287:10292  value */\n      dup2\n        /* \"contracts/ERC20.sol\":10257:10268  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":10257:10275  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":10269:10274  owner */\n      dup7\n        /* \"contracts/ERC20.sol\":10257:10275  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":10257:10284  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":10276:10283  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":10257:10284  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":10257:10292  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":10306:10315  emitEvent */\n      dup1\n        /* \"contracts/ERC20.sol\":10302:10378  if (emitEvent) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/ERC20.sol\":10352:10359  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":10336:10367  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":10345:10350  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":10336:10367  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":10361:10366  value */\n      dup5\n        /* \"contracts/ERC20.sol\":10336:10367  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":10302:10378  if (emitEvent) {... */\n    tag_217:\n        /* \"contracts/ERC20.sol\":9952:10384  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":6274:7381  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_209:\n        /* \"contracts/ERC20.sol\":6379:6380  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":6363:6381  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":6363:6367  from */\n      dup4\n        /* \"contracts/ERC20.sol\":6363:6381  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":6359:6899  if (from == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"contracts/ERC20.sol\":6515:6520  value */\n      dup1\n        /* \"contracts/ERC20.sol\":6499:6511  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ERC20.sol\":6499:6520  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_221\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_221:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":6359:6899  if (from == address(0)) {... */\n      jump(tag_222)\n    tag_220:\n        /* \"contracts/ERC20.sol\":6551:6570  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC20.sol\":6573:6582  _balances */\n      dup1\n        /* \"contracts/ERC20.sol\":6573:6588  _balances[from] */\n      0x00\n        /* \"contracts/ERC20.sol\":6583:6587  from */\n      dup6\n        /* \"contracts/ERC20.sol\":6573:6588  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6551:6588  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":6620:6625  value */\n      dup2\n        /* \"contracts/ERC20.sol\":6606:6617  fromBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":6606:6625  fromBalance < value */\n      lt\n        /* \"contracts/ERC20.sol\":6602:6717  if (fromBalance < value) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"contracts/ERC20.sol\":6677:6681  from */\n      dup4\n        /* \"contracts/ERC20.sol\":6683:6694  fromBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":6696:6701  value */\n      dup4\n        /* \"contracts/ERC20.sol\":6652:6702  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":6602:6717  if (fromBalance < value) {... */\n    tag_223:\n        /* \"contracts/ERC20.sol\":6869:6874  value */\n      dup2\n        /* \"contracts/ERC20.sol\":6855:6866  fromBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":6855:6874  fromBalance - value */\n      sub\n        /* \"contracts/ERC20.sol\":6837:6846  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":6837:6852  _balances[from] */\n      dup1\n        /* \"contracts/ERC20.sol\":6847:6851  from */\n      dup7\n        /* \"contracts/ERC20.sol\":6837:6852  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":6837:6874  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":6537:6899  {... */\n      pop\n        /* \"contracts/ERC20.sol\":6359:6899  if (from == address(0)) {... */\n    tag_222:\n        /* \"contracts/ERC20.sol\":6927:6928  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":6913:6929  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":6913:6915  to */\n      dup3\n        /* \"contracts/ERC20.sol\":6913:6929  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":6909:7334  if (to == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"contracts/ERC20.sol\":7092:7097  value */\n      dup1\n        /* \"contracts/ERC20.sol\":7076:7088  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ERC20.sol\":7076:7097  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":6909:7334  if (to == address(0)) {... */\n      jump(tag_226)\n    tag_225:\n        /* \"contracts/ERC20.sol\":7304:7309  value */\n      dup1\n        /* \"contracts/ERC20.sol\":7287:7296  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":7287:7300  _balances[to] */\n      dup1\n        /* \"contracts/ERC20.sol\":7297:7299  to */\n      dup5\n        /* \"contracts/ERC20.sol\":7287:7300  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20.sol\":7287:7309  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":6909:7334  if (to == address(0)) {... */\n    tag_226:\n        /* \"contracts/ERC20.sol\":7364:7366  to */\n      dup2\n        /* \"contracts/ERC20.sol\":7349:7374  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":7358:7362  from */\n      dup4\n        /* \"contracts/ERC20.sol\":7349:7374  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":7368:7373  value */\n      dup4\n        /* \"contracts/ERC20.sol\":7349:7374  Transfer(from, to, value) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":6274:7381  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_228:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_229:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_230:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_265:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_265)\n    tag_267:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_231:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_232:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_270\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_228\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":818:889   */\n      tag_271\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_229\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_272\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_230\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":988:1017   */\n      tag_273\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_231\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_31:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_275\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_232\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_234:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_236:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_237:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_281\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_236\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_238:\n        /* \"#utility.yul\":1983:2007   */\n      tag_283\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_237\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_284:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_239:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_286\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_238\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_240:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_241:\n        /* \"#utility.yul\":2339:2363   */\n      tag_289\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_240\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_290:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_242:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_292\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_241\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_34:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_295\n      tag_234\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2632:2751   */\n    tag_294:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_296\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_239\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_297\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_242\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_243:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_244:\n        /* \"#utility.yul\":3196:3217   */\n      tag_300\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_243\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_37:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_302\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_244\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_245:\n        /* \"#utility.yul\":3533:3557   */\n      tag_304\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_240\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_41:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_306\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_245\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_47:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_309\n      tag_234\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3908:4027   */\n    tag_308:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_310\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_239\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_311\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_239\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_312\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_242\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_246:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_247:\n        /* \"#utility.yul\":4598:4620   */\n      tag_315\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_246\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_53:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_317\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_247\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5618   */\n    tag_62:\n        /* \"#utility.yul\":4939:4945   */\n      0x00\n        /* \"#utility.yul\":4947:4953   */\n      dup1\n        /* \"#utility.yul\":4955:4961   */\n      0x00\n        /* \"#utility.yul\":4963:4969   */\n      dup1\n        /* \"#utility.yul\":5012:5015   */\n      0x80\n        /* \"#utility.yul\":5000:5009   */\n      dup6\n        /* \"#utility.yul\":4991:4998   */\n      dup8\n        /* \"#utility.yul\":4987:5010   */\n      sub\n        /* \"#utility.yul\":4983:5016   */\n      slt\n        /* \"#utility.yul\":4980:5100   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":5019:5098   */\n      tag_320\n      tag_234\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4980:5100   */\n    tag_319:\n        /* \"#utility.yul\":5139:5140   */\n      0x00\n        /* \"#utility.yul\":5164:5217   */\n      tag_321\n        /* \"#utility.yul\":5209:5216   */\n      dup8\n        /* \"#utility.yul\":5200:5206   */\n      dup3\n        /* \"#utility.yul\":5189:5198   */\n      dup9\n        /* \"#utility.yul\":5185:5207   */\n      add\n        /* \"#utility.yul\":5164:5217   */\n      tag_242\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5154:5217   */\n      swap5\n      pop\n        /* \"#utility.yul\":5110:5227   */\n      pop\n        /* \"#utility.yul\":5266:5268   */\n      0x20\n        /* \"#utility.yul\":5292:5345   */\n      tag_322\n        /* \"#utility.yul\":5337:5344   */\n      dup8\n        /* \"#utility.yul\":5328:5334   */\n      dup3\n        /* \"#utility.yul\":5317:5326   */\n      dup9\n        /* \"#utility.yul\":5313:5335   */\n      add\n        /* \"#utility.yul\":5292:5345   */\n      tag_242\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5282:5345   */\n      swap4\n      pop\n        /* \"#utility.yul\":5237:5355   */\n      pop\n        /* \"#utility.yul\":5394:5396   */\n      0x40\n        /* \"#utility.yul\":5420:5473   */\n      tag_323\n        /* \"#utility.yul\":5465:5472   */\n      dup8\n        /* \"#utility.yul\":5456:5462   */\n      dup3\n        /* \"#utility.yul\":5445:5454   */\n      dup9\n        /* \"#utility.yul\":5441:5463   */\n      add\n        /* \"#utility.yul\":5420:5473   */\n      tag_242\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5410:5473   */\n      swap3\n      pop\n        /* \"#utility.yul\":5365:5483   */\n      pop\n        /* \"#utility.yul\":5522:5524   */\n      0x60\n        /* \"#utility.yul\":5548:5601   */\n      tag_324\n        /* \"#utility.yul\":5593:5600   */\n      dup8\n        /* \"#utility.yul\":5584:5590   */\n      dup3\n        /* \"#utility.yul\":5573:5582   */\n      dup9\n        /* \"#utility.yul\":5569:5591   */\n      add\n        /* \"#utility.yul\":5548:5601   */\n      tag_242\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5538:5601   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5611   */\n      pop\n        /* \"#utility.yul\":4853:5618   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5624:5953   */\n    tag_70:\n        /* \"#utility.yul\":5683:5689   */\n      0x00\n        /* \"#utility.yul\":5732:5734   */\n      0x20\n        /* \"#utility.yul\":5720:5729   */\n      dup3\n        /* \"#utility.yul\":5711:5718   */\n      dup5\n        /* \"#utility.yul\":5707:5730   */\n      sub\n        /* \"#utility.yul\":5703:5735   */\n      slt\n        /* \"#utility.yul\":5700:5819   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5738:5817   */\n      tag_327\n      tag_234\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5700:5819   */\n    tag_326:\n        /* \"#utility.yul\":5858:5859   */\n      0x00\n        /* \"#utility.yul\":5883:5936   */\n      tag_328\n        /* \"#utility.yul\":5928:5935   */\n      dup5\n        /* \"#utility.yul\":5919:5925   */\n      dup3\n        /* \"#utility.yul\":5908:5917   */\n      dup6\n        /* \"#utility.yul\":5904:5926   */\n      add\n        /* \"#utility.yul\":5883:5936   */\n      tag_239\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5873:5936   */\n      swap2\n      pop\n        /* \"#utility.yul\":5829:5946   */\n      pop\n        /* \"#utility.yul\":5624:5953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5959:6077   */\n    tag_248:\n        /* \"#utility.yul\":6046:6070   */\n      tag_330\n        /* \"#utility.yul\":6064:6069   */\n      dup2\n        /* \"#utility.yul\":6046:6070   */\n      tag_237\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6041:6044   */\n      dup3\n        /* \"#utility.yul\":6034:6071   */\n      mstore\n        /* \"#utility.yul\":5959:6077   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6305   */\n    tag_82:\n        /* \"#utility.yul\":6176:6180   */\n      0x00\n        /* \"#utility.yul\":6214:6216   */\n      0x20\n        /* \"#utility.yul\":6203:6212   */\n      dup3\n        /* \"#utility.yul\":6199:6217   */\n      add\n        /* \"#utility.yul\":6191:6217   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6298   */\n      tag_332\n        /* \"#utility.yul\":6295:6296   */\n      0x00\n        /* \"#utility.yul\":6284:6293   */\n      dup4\n        /* \"#utility.yul\":6280:6297   */\n      add\n        /* \"#utility.yul\":6271:6277   */\n      dup5\n        /* \"#utility.yul\":6227:6298   */\n      tag_248\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6083:6305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6311:6491   */\n    tag_147:\n        /* \"#utility.yul\":6359:6436   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6349:6437   */\n      mstore\n        /* \"#utility.yul\":6456:6460   */\n      0x21\n        /* \"#utility.yul\":6453:6454   */\n      0x04\n        /* \"#utility.yul\":6446:6461   */\n      mstore\n        /* \"#utility.yul\":6480:6484   */\n      0x24\n        /* \"#utility.yul\":6477:6478   */\n      0x00\n        /* \"#utility.yul\":6470:6485   */\n      revert\n        /* \"#utility.yul\":6497:6617   */\n    tag_249:\n        /* \"#utility.yul\":6585:6586   */\n      0x04\n        /* \"#utility.yul\":6578:6583   */\n      dup2\n        /* \"#utility.yul\":6575:6587   */\n      lt\n        /* \"#utility.yul\":6565:6611   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6591:6609   */\n      tag_336\n      tag_147\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6565:6611   */\n    tag_335:\n        /* \"#utility.yul\":6497:6617   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6623:6764   */\n    tag_250:\n        /* \"#utility.yul\":6675:6682   */\n      0x00\n        /* \"#utility.yul\":6704:6709   */\n      dup2\n        /* \"#utility.yul\":6693:6709   */\n      swap1\n      pop\n        /* \"#utility.yul\":6710:6758   */\n      tag_338\n        /* \"#utility.yul\":6752:6757   */\n      dup3\n        /* \"#utility.yul\":6710:6758   */\n      tag_249\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6623:6764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6911   */\n    tag_251:\n        /* \"#utility.yul\":6833:6842   */\n      0x00\n        /* \"#utility.yul\":6866:6905   */\n      tag_340\n        /* \"#utility.yul\":6899:6904   */\n      dup3\n        /* \"#utility.yul\":6866:6905   */\n      tag_250\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6853:6905   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6917:7074   */\n    tag_252:\n        /* \"#utility.yul\":7017:7067   */\n      tag_342\n        /* \"#utility.yul\":7061:7066   */\n      dup2\n        /* \"#utility.yul\":7017:7067   */\n      tag_251\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7012:7015   */\n      dup3\n        /* \"#utility.yul\":7005:7068   */\n      mstore\n        /* \"#utility.yul\":6917:7074   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7080:7548   */\n    tag_86:\n        /* \"#utility.yul\":7242:7246   */\n      0x00\n        /* \"#utility.yul\":7280:7282   */\n      0x60\n        /* \"#utility.yul\":7269:7278   */\n      dup3\n        /* \"#utility.yul\":7265:7283   */\n      add\n        /* \"#utility.yul\":7257:7283   */\n      swap1\n      pop\n        /* \"#utility.yul\":7293:7364   */\n      tag_344\n        /* \"#utility.yul\":7361:7362   */\n      0x00\n        /* \"#utility.yul\":7350:7359   */\n      dup4\n        /* \"#utility.yul\":7346:7363   */\n      add\n        /* \"#utility.yul\":7337:7343   */\n      dup7\n        /* \"#utility.yul\":7293:7364   */\n      tag_245\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7374:7446   */\n      tag_345\n        /* \"#utility.yul\":7442:7444   */\n      0x20\n        /* \"#utility.yul\":7431:7440   */\n      dup4\n        /* \"#utility.yul\":7427:7445   */\n      add\n        /* \"#utility.yul\":7418:7424   */\n      dup6\n        /* \"#utility.yul\":7374:7446   */\n      tag_245\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7456:7541   */\n      tag_346\n        /* \"#utility.yul\":7537:7539   */\n      0x40\n        /* \"#utility.yul\":7526:7535   */\n      dup4\n        /* \"#utility.yul\":7522:7540   */\n      add\n        /* \"#utility.yul\":7513:7519   */\n      dup5\n        /* \"#utility.yul\":7456:7541   */\n      tag_252\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7080:7548   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7554:8028   */\n    tag_99:\n        /* \"#utility.yul\":7622:7628   */\n      0x00\n        /* \"#utility.yul\":7630:7636   */\n      dup1\n        /* \"#utility.yul\":7679:7681   */\n      0x40\n        /* \"#utility.yul\":7667:7676   */\n      dup4\n        /* \"#utility.yul\":7658:7665   */\n      dup6\n        /* \"#utility.yul\":7654:7677   */\n      sub\n        /* \"#utility.yul\":7650:7682   */\n      slt\n        /* \"#utility.yul\":7647:7766   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":7685:7764   */\n      tag_349\n      tag_234\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7647:7766   */\n    tag_348:\n        /* \"#utility.yul\":7805:7806   */\n      0x00\n        /* \"#utility.yul\":7830:7883   */\n      tag_350\n        /* \"#utility.yul\":7875:7882   */\n      dup6\n        /* \"#utility.yul\":7866:7872   */\n      dup3\n        /* \"#utility.yul\":7855:7864   */\n      dup7\n        /* \"#utility.yul\":7851:7873   */\n      add\n        /* \"#utility.yul\":7830:7883   */\n      tag_242\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7820:7883   */\n      swap3\n      pop\n        /* \"#utility.yul\":7776:7893   */\n      pop\n        /* \"#utility.yul\":7932:7934   */\n      0x20\n        /* \"#utility.yul\":7958:8011   */\n      tag_351\n        /* \"#utility.yul\":8003:8010   */\n      dup6\n        /* \"#utility.yul\":7994:8000   */\n      dup3\n        /* \"#utility.yul\":7983:7992   */\n      dup7\n        /* \"#utility.yul\":7979:8001   */\n      add\n        /* \"#utility.yul\":7958:8011   */\n      tag_242\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7948:8011   */\n      swap2\n      pop\n        /* \"#utility.yul\":7903:8021   */\n      pop\n        /* \"#utility.yul\":7554:8028   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8034:8508   */\n    tag_103:\n        /* \"#utility.yul\":8102:8108   */\n      0x00\n        /* \"#utility.yul\":8110:8116   */\n      dup1\n        /* \"#utility.yul\":8159:8161   */\n      0x40\n        /* \"#utility.yul\":8147:8156   */\n      dup4\n        /* \"#utility.yul\":8138:8145   */\n      dup6\n        /* \"#utility.yul\":8134:8157   */\n      sub\n        /* \"#utility.yul\":8130:8162   */\n      slt\n        /* \"#utility.yul\":8127:8246   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8165:8244   */\n      tag_354\n      tag_234\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8127:8246   */\n    tag_353:\n        /* \"#utility.yul\":8285:8286   */\n      0x00\n        /* \"#utility.yul\":8310:8363   */\n      tag_355\n        /* \"#utility.yul\":8355:8362   */\n      dup6\n        /* \"#utility.yul\":8346:8352   */\n      dup3\n        /* \"#utility.yul\":8335:8344   */\n      dup7\n        /* \"#utility.yul\":8331:8353   */\n      add\n        /* \"#utility.yul\":8310:8363   */\n      tag_239\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8300:8363   */\n      swap3\n      pop\n        /* \"#utility.yul\":8256:8373   */\n      pop\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8438:8491   */\n      tag_356\n        /* \"#utility.yul\":8483:8490   */\n      dup6\n        /* \"#utility.yul\":8474:8480   */\n      dup3\n        /* \"#utility.yul\":8463:8472   */\n      dup7\n        /* \"#utility.yul\":8459:8481   */\n      add\n        /* \"#utility.yul\":8438:8491   */\n      tag_239\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8428:8491   */\n      swap2\n      pop\n        /* \"#utility.yul\":8383:8501   */\n      pop\n        /* \"#utility.yul\":8034:8508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8514:9414   */\n    tag_110:\n        /* \"#utility.yul\":8782:8786   */\n      0x00\n        /* \"#utility.yul\":8820:8823   */\n      0xe0\n        /* \"#utility.yul\":8809:8818   */\n      dup3\n        /* \"#utility.yul\":8805:8824   */\n      add\n        /* \"#utility.yul\":8797:8824   */\n      swap1\n      pop\n        /* \"#utility.yul\":8834:8905   */\n      tag_358\n        /* \"#utility.yul\":8902:8903   */\n      0x00\n        /* \"#utility.yul\":8891:8900   */\n      dup4\n        /* \"#utility.yul\":8887:8904   */\n      add\n        /* \"#utility.yul\":8878:8884   */\n      dup11\n        /* \"#utility.yul\":8834:8905   */\n      tag_245\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8915:8987   */\n      tag_359\n        /* \"#utility.yul\":8983:8985   */\n      0x20\n        /* \"#utility.yul\":8972:8981   */\n      dup4\n        /* \"#utility.yul\":8968:8986   */\n      add\n        /* \"#utility.yul\":8959:8965   */\n      dup10\n        /* \"#utility.yul\":8915:8987   */\n      tag_245\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8997:9082   */\n      tag_360\n        /* \"#utility.yul\":9078:9080   */\n      0x40\n        /* \"#utility.yul\":9067:9076   */\n      dup4\n        /* \"#utility.yul\":9063:9081   */\n      add\n        /* \"#utility.yul\":9054:9060   */\n      dup9\n        /* \"#utility.yul\":8997:9082   */\n      tag_252\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9092:9164   */\n      tag_361\n        /* \"#utility.yul\":9160:9162   */\n      0x60\n        /* \"#utility.yul\":9149:9158   */\n      dup4\n        /* \"#utility.yul\":9145:9163   */\n      add\n        /* \"#utility.yul\":9136:9142   */\n      dup8\n        /* \"#utility.yul\":9092:9164   */\n      tag_248\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9174:9247   */\n      tag_362\n        /* \"#utility.yul\":9242:9245   */\n      0x80\n        /* \"#utility.yul\":9231:9240   */\n      dup4\n        /* \"#utility.yul\":9227:9246   */\n      add\n        /* \"#utility.yul\":9218:9224   */\n      dup7\n        /* \"#utility.yul\":9174:9247   */\n      tag_245\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9257:9330   */\n      tag_363\n        /* \"#utility.yul\":9325:9328   */\n      0xa0\n        /* \"#utility.yul\":9314:9323   */\n      dup4\n        /* \"#utility.yul\":9310:9329   */\n      add\n        /* \"#utility.yul\":9301:9307   */\n      dup6\n        /* \"#utility.yul\":9257:9330   */\n      tag_245\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9340:9407   */\n      tag_364\n        /* \"#utility.yul\":9402:9405   */\n      0xc0\n        /* \"#utility.yul\":9391:9400   */\n      dup4\n        /* \"#utility.yul\":9387:9406   */\n      add\n        /* \"#utility.yul\":9378:9384   */\n      dup5\n        /* \"#utility.yul\":9340:9407   */\n      tag_244\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8514:9414   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9420:9600   */\n    tag_253:\n        /* \"#utility.yul\":9468:9545   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9465:9466   */\n      0x00\n        /* \"#utility.yul\":9458:9546   */\n      mstore\n        /* \"#utility.yul\":9565:9569   */\n      0x22\n        /* \"#utility.yul\":9562:9563   */\n      0x04\n        /* \"#utility.yul\":9555:9570   */\n      mstore\n        /* \"#utility.yul\":9589:9593   */\n      0x24\n        /* \"#utility.yul\":9586:9587   */\n      0x00\n        /* \"#utility.yul\":9579:9594   */\n      revert\n        /* \"#utility.yul\":9606:9926   */\n    tag_116:\n        /* \"#utility.yul\":9650:9656   */\n      0x00\n        /* \"#utility.yul\":9687:9688   */\n      0x02\n        /* \"#utility.yul\":9681:9685   */\n      dup3\n        /* \"#utility.yul\":9677:9689   */\n      div\n        /* \"#utility.yul\":9667:9689   */\n      swap1\n      pop\n        /* \"#utility.yul\":9734:9735   */\n      0x01\n        /* \"#utility.yul\":9728:9732   */\n      dup3\n        /* \"#utility.yul\":9724:9736   */\n      and\n        /* \"#utility.yul\":9755:9773   */\n      dup1\n        /* \"#utility.yul\":9745:9826   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":9811:9815   */\n      0x7f\n        /* \"#utility.yul\":9803:9809   */\n      dup3\n        /* \"#utility.yul\":9799:9816   */\n      and\n        /* \"#utility.yul\":9789:9816   */\n      swap2\n      pop\n        /* \"#utility.yul\":9745:9826   */\n    tag_367:\n        /* \"#utility.yul\":9873:9875   */\n      0x20\n        /* \"#utility.yul\":9865:9871   */\n      dup3\n        /* \"#utility.yul\":9862:9876   */\n      lt\n        /* \"#utility.yul\":9842:9860   */\n      dup2\n        /* \"#utility.yul\":9839:9877   */\n      sub\n        /* \"#utility.yul\":9836:9920   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":9892:9910   */\n      tag_369\n      tag_253\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9836:9920   */\n    tag_368:\n        /* \"#utility.yul\":9657:9926   */\n      pop\n        /* \"#utility.yul\":9606:9926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9932:10112   */\n    tag_254:\n        /* \"#utility.yul\":9980:10057   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9977:9978   */\n      0x00\n        /* \"#utility.yul\":9970:10058   */\n      mstore\n        /* \"#utility.yul\":10077:10081   */\n      0x11\n        /* \"#utility.yul\":10074:10075   */\n      0x04\n        /* \"#utility.yul\":10067:10082   */\n      mstore\n        /* \"#utility.yul\":10101:10105   */\n      0x24\n        /* \"#utility.yul\":10098:10099   */\n      0x00\n        /* \"#utility.yul\":10091:10106   */\n      revert\n        /* \"#utility.yul\":10118:10312   */\n    tag_136:\n        /* \"#utility.yul\":10158:10162   */\n      0x00\n        /* \"#utility.yul\":10178:10198   */\n      tag_372\n        /* \"#utility.yul\":10196:10197   */\n      dup3\n        /* \"#utility.yul\":10178:10198   */\n      tag_240\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10173:10198   */\n      swap2\n      pop\n        /* \"#utility.yul\":10212:10232   */\n      tag_373\n        /* \"#utility.yul\":10230:10231   */\n      dup4\n        /* \"#utility.yul\":10212:10232   */\n      tag_240\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10207:10232   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10257   */\n      dup3\n        /* \"#utility.yul\":10253:10254   */\n      dup3\n        /* \"#utility.yul\":10249:10258   */\n      sub\n        /* \"#utility.yul\":10241:10258   */\n      swap1\n      pop\n        /* \"#utility.yul\":10280:10281   */\n      dup2\n        /* \"#utility.yul\":10274:10278   */\n      dup2\n        /* \"#utility.yul\":10271:10282   */\n      gt\n        /* \"#utility.yul\":10268:10305   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":10285:10303   */\n      tag_375\n      tag_254\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10268:10305   */\n    tag_374:\n        /* \"#utility.yul\":10118:10312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10318:10509   */\n    tag_139:\n        /* \"#utility.yul\":10358:10361   */\n      0x00\n        /* \"#utility.yul\":10377:10397   */\n      tag_377\n        /* \"#utility.yul\":10395:10396   */\n      dup3\n        /* \"#utility.yul\":10377:10397   */\n      tag_240\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":10372:10397   */\n      swap2\n      pop\n        /* \"#utility.yul\":10411:10431   */\n      tag_378\n        /* \"#utility.yul\":10429:10430   */\n      dup4\n        /* \"#utility.yul\":10411:10431   */\n      tag_240\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10406:10431   */\n      swap3\n      pop\n        /* \"#utility.yul\":10454:10455   */\n      dup3\n        /* \"#utility.yul\":10451:10452   */\n      dup3\n        /* \"#utility.yul\":10447:10456   */\n      add\n        /* \"#utility.yul\":10440:10456   */\n      swap1\n      pop\n        /* \"#utility.yul\":10475:10478   */\n      dup1\n        /* \"#utility.yul\":10472:10473   */\n      dup3\n        /* \"#utility.yul\":10469:10479   */\n      gt\n        /* \"#utility.yul\":10466:10502   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":10482:10500   */\n      tag_380\n      tag_254\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10466:10502   */\n    tag_379:\n        /* \"#utility.yul\":10318:10509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10515:10748   */\n    tag_144:\n        /* \"#utility.yul\":10554:10557   */\n      0x00\n        /* \"#utility.yul\":10577:10601   */\n      tag_382\n        /* \"#utility.yul\":10595:10600   */\n      dup3\n        /* \"#utility.yul\":10577:10601   */\n      tag_240\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":10568:10601   */\n      swap2\n      pop\n        /* \"#utility.yul\":10623:10689   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10616:10621   */\n      dup3\n        /* \"#utility.yul\":10613:10690   */\n      sub\n        /* \"#utility.yul\":10610:10713   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":10693:10711   */\n      tag_384\n      tag_254\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":10610:10713   */\n    tag_383:\n        /* \"#utility.yul\":10740:10741   */\n      0x01\n        /* \"#utility.yul\":10733:10738   */\n      dup3\n        /* \"#utility.yul\":10729:10742   */\n      add\n        /* \"#utility.yul\":10722:10742   */\n      swap1\n      pop\n        /* \"#utility.yul\":10515:10748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10754:10925   */\n    tag_255:\n        /* \"#utility.yul\":10894:10917   */\n      0x446576696365206e6f7420726567697374657265640000000000000000000000\n        /* \"#utility.yul\":10890:10891   */\n      0x00\n        /* \"#utility.yul\":10882:10888   */\n      dup3\n        /* \"#utility.yul\":10878:10892   */\n      add\n        /* \"#utility.yul\":10871:10918   */\n      mstore\n        /* \"#utility.yul\":10754:10925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10931:11297   */\n    tag_256:\n        /* \"#utility.yul\":11073:11076   */\n      0x00\n        /* \"#utility.yul\":11094:11161   */\n      tag_387\n        /* \"#utility.yul\":11158:11160   */\n      0x15\n        /* \"#utility.yul\":11153:11156   */\n      dup4\n        /* \"#utility.yul\":11094:11161   */\n      tag_229\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11087:11161   */\n      swap2\n      pop\n        /* \"#utility.yul\":11170:11263   */\n      tag_388\n        /* \"#utility.yul\":11259:11262   */\n      dup3\n        /* \"#utility.yul\":11170:11263   */\n      tag_255\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11288:11290   */\n      0x20\n        /* \"#utility.yul\":11283:11286   */\n      dup3\n        /* \"#utility.yul\":11279:11291   */\n      add\n        /* \"#utility.yul\":11272:11291   */\n      swap1\n      pop\n        /* \"#utility.yul\":10931:11297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11303:11722   */\n    tag_154:\n        /* \"#utility.yul\":11469:11473   */\n      0x00\n        /* \"#utility.yul\":11507:11509   */\n      0x20\n        /* \"#utility.yul\":11496:11505   */\n      dup3\n        /* \"#utility.yul\":11492:11510   */\n      add\n        /* \"#utility.yul\":11484:11510   */\n      swap1\n      pop\n        /* \"#utility.yul\":11556:11565   */\n      dup2\n        /* \"#utility.yul\":11550:11554   */\n      dup2\n        /* \"#utility.yul\":11546:11566   */\n      sub\n        /* \"#utility.yul\":11542:11543   */\n      0x00\n        /* \"#utility.yul\":11531:11540   */\n      dup4\n        /* \"#utility.yul\":11527:11544   */\n      add\n        /* \"#utility.yul\":11520:11567   */\n      mstore\n        /* \"#utility.yul\":11584:11715   */\n      tag_390\n        /* \"#utility.yul\":11710:11714   */\n      dup2\n        /* \"#utility.yul\":11584:11715   */\n      tag_256\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":11576:11715   */\n      swap1\n      pop\n        /* \"#utility.yul\":11303:11722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11728:11948   */\n    tag_257:\n        /* \"#utility.yul\":11868:11902   */\n      0x7468652064657669636520436f6e7472616374206973206e6f74206163746976\n        /* \"#utility.yul\":11864:11865   */\n      0x00\n        /* \"#utility.yul\":11856:11862   */\n      dup3\n        /* \"#utility.yul\":11852:11866   */\n      add\n        /* \"#utility.yul\":11845:11903   */\n      mstore\n        /* \"#utility.yul\":11937:11940   */\n      0x6500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11932:11934   */\n      0x20\n        /* \"#utility.yul\":11924:11930   */\n      dup3\n        /* \"#utility.yul\":11920:11935   */\n      add\n        /* \"#utility.yul\":11913:11941   */\n      mstore\n        /* \"#utility.yul\":11728:11948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11954:12320   */\n    tag_258:\n        /* \"#utility.yul\":12096:12099   */\n      0x00\n        /* \"#utility.yul\":12117:12184   */\n      tag_393\n        /* \"#utility.yul\":12181:12183   */\n      0x21\n        /* \"#utility.yul\":12176:12179   */\n      dup4\n        /* \"#utility.yul\":12117:12184   */\n      tag_229\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12110:12184   */\n      swap2\n      pop\n        /* \"#utility.yul\":12193:12286   */\n      tag_394\n        /* \"#utility.yul\":12282:12285   */\n      dup3\n        /* \"#utility.yul\":12193:12286   */\n      tag_257\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":12311:12313   */\n      0x40\n        /* \"#utility.yul\":12306:12309   */\n      dup3\n        /* \"#utility.yul\":12302:12314   */\n      add\n        /* \"#utility.yul\":12295:12314   */\n      swap1\n      pop\n        /* \"#utility.yul\":11954:12320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12326:12745   */\n    tag_173:\n        /* \"#utility.yul\":12492:12496   */\n      0x00\n        /* \"#utility.yul\":12530:12532   */\n      0x20\n        /* \"#utility.yul\":12519:12528   */\n      dup3\n        /* \"#utility.yul\":12515:12533   */\n      add\n        /* \"#utility.yul\":12507:12533   */\n      swap1\n      pop\n        /* \"#utility.yul\":12579:12588   */\n      dup2\n        /* \"#utility.yul\":12573:12577   */\n      dup2\n        /* \"#utility.yul\":12569:12589   */\n      sub\n        /* \"#utility.yul\":12565:12566   */\n      0x00\n        /* \"#utility.yul\":12554:12563   */\n      dup4\n        /* \"#utility.yul\":12550:12567   */\n      add\n        /* \"#utility.yul\":12543:12590   */\n      mstore\n        /* \"#utility.yul\":12607:12738   */\n      tag_396\n        /* \"#utility.yul\":12733:12737   */\n      dup2\n        /* \"#utility.yul\":12607:12738   */\n      tag_258\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12599:12738   */\n      swap1\n      pop\n        /* \"#utility.yul\":12326:12745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12751:12929   */\n    tag_259:\n        /* \"#utility.yul\":12891:12921   */\n      0x436f6e747261637420686173206e6f7420737461727465642079657400000000\n        /* \"#utility.yul\":12887:12888   */\n      0x00\n        /* \"#utility.yul\":12879:12885   */\n      dup3\n        /* \"#utility.yul\":12875:12889   */\n      add\n        /* \"#utility.yul\":12868:12922   */\n      mstore\n        /* \"#utility.yul\":12751:12929   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12935:13301   */\n    tag_260:\n        /* \"#utility.yul\":13077:13080   */\n      0x00\n        /* \"#utility.yul\":13098:13165   */\n      tag_399\n        /* \"#utility.yul\":13162:13164   */\n      0x1c\n        /* \"#utility.yul\":13157:13160   */\n      dup4\n        /* \"#utility.yul\":13098:13165   */\n      tag_229\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":13091:13165   */\n      swap2\n      pop\n        /* \"#utility.yul\":13174:13267   */\n      tag_400\n        /* \"#utility.yul\":13263:13266   */\n      dup3\n        /* \"#utility.yul\":13174:13267   */\n      tag_259\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13292:13294   */\n      0x20\n        /* \"#utility.yul\":13287:13290   */\n      dup3\n        /* \"#utility.yul\":13283:13295   */\n      add\n        /* \"#utility.yul\":13276:13295   */\n      swap1\n      pop\n        /* \"#utility.yul\":12935:13301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13307:13726   */\n    tag_176:\n        /* \"#utility.yul\":13473:13477   */\n      0x00\n        /* \"#utility.yul\":13511:13513   */\n      0x20\n        /* \"#utility.yul\":13500:13509   */\n      dup3\n        /* \"#utility.yul\":13496:13514   */\n      add\n        /* \"#utility.yul\":13488:13514   */\n      swap1\n      pop\n        /* \"#utility.yul\":13560:13569   */\n      dup2\n        /* \"#utility.yul\":13554:13558   */\n      dup2\n        /* \"#utility.yul\":13550:13570   */\n      sub\n        /* \"#utility.yul\":13546:13547   */\n      0x00\n        /* \"#utility.yul\":13535:13544   */\n      dup4\n        /* \"#utility.yul\":13531:13548   */\n      add\n        /* \"#utility.yul\":13524:13571   */\n      mstore\n        /* \"#utility.yul\":13588:13719   */\n      tag_402\n        /* \"#utility.yul\":13714:13718   */\n      dup2\n        /* \"#utility.yul\":13588:13719   */\n      tag_260\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13580:13719   */\n      swap1\n      pop\n        /* \"#utility.yul\":13307:13726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13732:14174   */\n    tag_201:\n        /* \"#utility.yul\":13881:13885   */\n      0x00\n        /* \"#utility.yul\":13919:13921   */\n      0x60\n        /* \"#utility.yul\":13908:13917   */\n      dup3\n        /* \"#utility.yul\":13904:13922   */\n      add\n        /* \"#utility.yul\":13896:13922   */\n      swap1\n      pop\n        /* \"#utility.yul\":13932:14003   */\n      tag_404\n        /* \"#utility.yul\":14000:14001   */\n      0x00\n        /* \"#utility.yul\":13989:13998   */\n      dup4\n        /* \"#utility.yul\":13985:14002   */\n      add\n        /* \"#utility.yul\":13976:13982   */\n      dup7\n        /* \"#utility.yul\":13932:14003   */\n      tag_248\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":14013:14085   */\n      tag_405\n        /* \"#utility.yul\":14081:14083   */\n      0x20\n        /* \"#utility.yul\":14070:14079   */\n      dup4\n        /* \"#utility.yul\":14066:14084   */\n      add\n        /* \"#utility.yul\":14057:14063   */\n      dup6\n        /* \"#utility.yul\":14013:14085   */\n      tag_245\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":14095:14167   */\n      tag_406\n        /* \"#utility.yul\":14163:14165   */\n      0x40\n        /* \"#utility.yul\":14152:14161   */\n      dup4\n        /* \"#utility.yul\":14148:14166   */\n      add\n        /* \"#utility.yul\":14139:14145   */\n      dup5\n        /* \"#utility.yul\":14095:14167   */\n      tag_245\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13732:14174   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ffddef9cbd7a3cbffb3180d31ecf8eccf12b1b0ecf2009b2d18b1cee57ba19fa64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6975:6",
										"nodeType": "YulBlock",
										"src": "0:6975:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "608:80:6",
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nativeSrc": "618:22:6",
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nativeSrc": "627:13:6",
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nativeSrc": "649:33:6",
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nativeSrc": "649:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:6",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:6",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:6",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nativeSrc": "856:972:6",
													"nodeType": "YulBlock",
													"src": "856:972:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "903:83:6",
																"nodeType": "YulBlock",
																"src": "903:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "905:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "905:77:6"
																			},
																			"nativeSrc": "905:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "905:79:6"
																		},
																		"nativeSrc": "905:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "905:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "877:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "877:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "886:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "886:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "873:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "873:3:6"
																		},
																		"nativeSrc": "873:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "873:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "898:3:6",
																		"nodeType": "YulLiteral",
																		"src": "898:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "869:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "869:3:6"
																},
																"nativeSrc": "869:33:6",
																"nodeType": "YulFunctionCall",
																"src": "869:33:6"
															},
															"nativeSrc": "866:120:6",
															"nodeType": "YulIf",
															"src": "866:120:6"
														},
														{
															"nativeSrc": "996:128:6",
															"nodeType": "YulBlock",
															"src": "996:128:6",
															"statements": [
																{
																	"nativeSrc": "1011:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1011:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1025:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1025:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1015:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1015:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1040:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1040:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1086:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1086:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1097:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1097:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1082:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1082:3:6"
																				},
																				"nativeSrc": "1082:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1082:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1106:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1106:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1050:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1050:31:6"
																		},
																		"nativeSrc": "1050:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1050:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1040:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1040:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1134:129:6",
															"nodeType": "YulBlock",
															"src": "1134:129:6",
															"statements": [
																{
																	"nativeSrc": "1149:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1149:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1163:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1153:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1153:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1179:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1179:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1225:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1225:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1236:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1236:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1221:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1221:3:6"
																				},
																				"nativeSrc": "1221:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1221:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1245:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1245:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1189:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1189:31:6"
																		},
																		"nativeSrc": "1189:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1189:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1179:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1179:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1273:129:6",
															"nodeType": "YulBlock",
															"src": "1273:129:6",
															"statements": [
																{
																	"nativeSrc": "1288:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1288:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1302:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1302:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1292:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1292:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1318:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1318:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1364:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1364:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1375:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1375:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1360:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1360:3:6"
																				},
																				"nativeSrc": "1360:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1360:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1384:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1384:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1328:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1328:31:6"
																		},
																		"nativeSrc": "1328:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1318:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1318:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1412:129:6",
															"nodeType": "YulBlock",
															"src": "1412:129:6",
															"statements": [
																{
																	"nativeSrc": "1427:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1427:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1441:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1441:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1431:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1431:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1457:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1457:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1503:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1503:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1514:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1514:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1499:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1499:3:6"
																				},
																				"nativeSrc": "1499:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1499:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1523:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1523:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1467:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1467:31:6"
																		},
																		"nativeSrc": "1467:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1457:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1457:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1551:130:6",
															"nodeType": "YulBlock",
															"src": "1551:130:6",
															"statements": [
																{
																	"nativeSrc": "1566:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1566:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1580:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1580:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1570:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1570:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1597:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1597:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1643:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1654:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1639:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:6"
																				},
																				"nativeSrc": "1639:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1663:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1607:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1607:31:6"
																		},
																		"nativeSrc": "1607:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "1597:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1597:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1691:130:6",
															"nodeType": "YulBlock",
															"src": "1691:130:6",
															"statements": [
																{
																	"nativeSrc": "1706:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1720:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1720:3:6",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1710:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1737:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1737:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1783:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1794:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1779:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:6"
																				},
																				"nativeSrc": "1779:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1803:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1747:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1747:31:6"
																		},
																		"nativeSrc": "1747:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1747:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "1737:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1737:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:1134:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "786:9:6",
														"nodeType": "YulTypedName",
														"src": "786:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "797:7:6",
														"nodeType": "YulTypedName",
														"src": "797:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "809:6:6",
														"nodeType": "YulTypedName",
														"src": "809:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "817:6:6",
														"nodeType": "YulTypedName",
														"src": "817:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "825:6:6",
														"nodeType": "YulTypedName",
														"src": "825:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "833:6:6",
														"nodeType": "YulTypedName",
														"src": "833:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "841:6:6",
														"nodeType": "YulTypedName",
														"src": "841:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "849:6:6",
														"nodeType": "YulTypedName",
														"src": "849:6:6",
														"type": ""
													}
												],
												"src": "694:1134:6"
											},
											{
												"body": {
													"nativeSrc": "1893:40:6",
													"nodeType": "YulBlock",
													"src": "1893:40:6",
													"statements": [
														{
															"nativeSrc": "1904:22:6",
															"nodeType": "YulAssignment",
															"src": "1904:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1920:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1920:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1914:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1914:5:6"
																},
																"nativeSrc": "1914:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1914:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1904:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1834:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1876:5:6",
														"nodeType": "YulTypedName",
														"src": "1876:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1886:6:6",
														"nodeType": "YulTypedName",
														"src": "1886:6:6",
														"type": ""
													}
												],
												"src": "1834:99:6"
											},
											{
												"body": {
													"nativeSrc": "1967:152:6",
													"nodeType": "YulBlock",
													"src": "1967:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1984:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1984:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1987:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1987:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1977:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:6"
																},
																"nativeSrc": "1977:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1977:88:6"
															},
															"nativeSrc": "1977:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1977:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2081:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2081:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2084:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2084:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2074:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:6"
																},
																"nativeSrc": "2074:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2074:15:6"
															},
															"nativeSrc": "2074:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2074:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2105:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2105:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2108:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2108:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2098:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2098:6:6"
																},
																"nativeSrc": "2098:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2098:15:6"
															},
															"nativeSrc": "2098:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2098:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1939:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1939:180:6"
											},
											{
												"body": {
													"nativeSrc": "2153:152:6",
													"nodeType": "YulBlock",
													"src": "2153:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2170:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2170:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2173:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2173:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2163:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2163:6:6"
																},
																"nativeSrc": "2163:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2163:88:6"
															},
															"nativeSrc": "2163:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2163:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2267:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2267:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2270:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2260:6:6"
																},
																"nativeSrc": "2260:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2260:15:6"
															},
															"nativeSrc": "2260:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2260:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2291:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2291:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2294:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2294:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2284:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:6"
																},
																"nativeSrc": "2284:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2284:15:6"
															},
															"nativeSrc": "2284:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2284:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2125:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2125:180:6"
											},
											{
												"body": {
													"nativeSrc": "2362:269:6",
													"nodeType": "YulBlock",
													"src": "2362:269:6",
													"statements": [
														{
															"nativeSrc": "2372:22:6",
															"nodeType": "YulAssignment",
															"src": "2372:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2386:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2386:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2392:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2382:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2382:3:6"
																},
																"nativeSrc": "2382:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2382:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2372:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:6"
																}
															]
														},
														{
															"nativeSrc": "2403:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2403:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2433:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2433:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2439:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2439:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2429:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2429:3:6"
																},
																"nativeSrc": "2429:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2429:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2407:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2407:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2480:51:6",
																"nodeType": "YulBlock",
																"src": "2480:51:6",
																"statements": [
																	{
																		"nativeSrc": "2494:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2494:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2508:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2508:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2516:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2516:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2504:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2504:3:6"
																			},
																			"nativeSrc": "2504:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2504:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2494:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2494:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2460:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2460:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2453:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2453:6:6"
																},
																"nativeSrc": "2453:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2453:26:6"
															},
															"nativeSrc": "2450:81:6",
															"nodeType": "YulIf",
															"src": "2450:81:6"
														},
														{
															"body": {
																"nativeSrc": "2583:42:6",
																"nodeType": "YulBlock",
																"src": "2583:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2597:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2597:16:6"
																			},
																			"nativeSrc": "2597:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2597:18:6"
																		},
																		"nativeSrc": "2597:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2597:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2547:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2547:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2570:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2570:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2578:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2578:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2567:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2567:2:6"
																		},
																		"nativeSrc": "2567:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2567:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2544:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2544:2:6"
																},
																"nativeSrc": "2544:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2544:38:6"
															},
															"nativeSrc": "2541:84:6",
															"nodeType": "YulIf",
															"src": "2541:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2311:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2346:4:6",
														"nodeType": "YulTypedName",
														"src": "2346:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2355:6:6",
														"nodeType": "YulTypedName",
														"src": "2355:6:6",
														"type": ""
													}
												],
												"src": "2311:320:6"
											},
											{
												"body": {
													"nativeSrc": "2691:87:6",
													"nodeType": "YulBlock",
													"src": "2691:87:6",
													"statements": [
														{
															"nativeSrc": "2701:11:6",
															"nodeType": "YulAssignment",
															"src": "2701:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "2709:3:6",
																"nodeType": "YulIdentifier",
																"src": "2709:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2701:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2701:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2729:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2729:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2732:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2732:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2722:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:6"
																},
																"nativeSrc": "2722:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2722:14:6"
															},
															"nativeSrc": "2722:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2722:14:6"
														},
														{
															"nativeSrc": "2745:26:6",
															"nodeType": "YulAssignment",
															"src": "2745:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2763:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2763:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2766:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2766:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2753:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2753:9:6"
																},
																"nativeSrc": "2753:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2753:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2745:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2745:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2637:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2678:3:6",
														"nodeType": "YulTypedName",
														"src": "2678:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2686:4:6",
														"nodeType": "YulTypedName",
														"src": "2686:4:6",
														"type": ""
													}
												],
												"src": "2637:141:6"
											},
											{
												"body": {
													"nativeSrc": "2828:49:6",
													"nodeType": "YulBlock",
													"src": "2828:49:6",
													"statements": [
														{
															"nativeSrc": "2838:33:6",
															"nodeType": "YulAssignment",
															"src": "2838:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2856:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2856:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2863:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2863:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2852:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:6"
																		},
																		"nativeSrc": "2852:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2868:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2868:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2848:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:6"
																},
																"nativeSrc": "2848:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2848:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2838:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2838:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2784:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2811:5:6",
														"nodeType": "YulTypedName",
														"src": "2811:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2821:6:6",
														"nodeType": "YulTypedName",
														"src": "2821:6:6",
														"type": ""
													}
												],
												"src": "2784:93:6"
											},
											{
												"body": {
													"nativeSrc": "2936:54:6",
													"nodeType": "YulBlock",
													"src": "2936:54:6",
													"statements": [
														{
															"nativeSrc": "2946:37:6",
															"nodeType": "YulAssignment",
															"src": "2946:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2971:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2971:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2977:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2977:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2967:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2967:3:6"
																},
																"nativeSrc": "2967:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2967:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2946:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2946:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2883:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2911:4:6",
														"nodeType": "YulTypedName",
														"src": "2911:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2917:5:6",
														"nodeType": "YulTypedName",
														"src": "2917:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2927:8:6",
														"nodeType": "YulTypedName",
														"src": "2927:8:6",
														"type": ""
													}
												],
												"src": "2883:107:6"
											},
											{
												"body": {
													"nativeSrc": "3072:317:6",
													"nodeType": "YulBlock",
													"src": "3072:317:6",
													"statements": [
														{
															"nativeSrc": "3082:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3082:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3103:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "3103:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3115:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3115:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3099:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3099:3:6"
																},
																"nativeSrc": "3099:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3099:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3086:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3086:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3126:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3126:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3157:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3157:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3168:66:6",
																		"nodeType": "YulLiteral",
																		"src": "3168:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3138:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3138:18:6"
																},
																"nativeSrc": "3138:97:6",
																"nodeType": "YulFunctionCall",
																"src": "3138:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3130:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3130:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3244:51:6",
															"nodeType": "YulAssignment",
															"src": "3244:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3275:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3275:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3286:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3286:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3256:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3256:18:6"
																},
																"nativeSrc": "3256:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3256:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3244:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3244:8:6"
																}
															]
														},
														{
															"nativeSrc": "3304:30:6",
															"nodeType": "YulAssignment",
															"src": "3304:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3317:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3317:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3328:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3328:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3324:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3324:3:6"
																		},
																		"nativeSrc": "3324:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3324:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3313:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3313:3:6"
																},
																"nativeSrc": "3313:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3313:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3304:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3304:5:6"
																}
															]
														},
														{
															"nativeSrc": "3343:40:6",
															"nodeType": "YulAssignment",
															"src": "3343:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3356:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3356:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3367:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3367:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3377:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3377:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3363:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:6"
																		},
																		"nativeSrc": "3363:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3353:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3353:2:6"
																},
																"nativeSrc": "3353:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3353:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3343:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2996:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3033:5:6",
														"nodeType": "YulTypedName",
														"src": "3033:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3040:10:6",
														"nodeType": "YulTypedName",
														"src": "3040:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3052:8:6",
														"nodeType": "YulTypedName",
														"src": "3052:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3065:6:6",
														"nodeType": "YulTypedName",
														"src": "3065:6:6",
														"type": ""
													}
												],
												"src": "2996:393:6"
											},
											{
												"body": {
													"nativeSrc": "3427:28:6",
													"nodeType": "YulBlock",
													"src": "3427:28:6",
													"statements": [
														{
															"nativeSrc": "3437:12:6",
															"nodeType": "YulAssignment",
															"src": "3437:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3444:5:6",
																"nodeType": "YulIdentifier",
																"src": "3444:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3437:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3437:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3395:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3413:5:6",
														"nodeType": "YulTypedName",
														"src": "3413:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3423:3:6",
														"nodeType": "YulTypedName",
														"src": "3423:3:6",
														"type": ""
													}
												],
												"src": "3395:60:6"
											},
											{
												"body": {
													"nativeSrc": "3521:82:6",
													"nodeType": "YulBlock",
													"src": "3521:82:6",
													"statements": [
														{
															"nativeSrc": "3531:66:6",
															"nodeType": "YulAssignment",
															"src": "3531:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3589:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3589:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3571:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3571:17:6"
																				},
																				"nativeSrc": "3571:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3562:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3562:8:6"
																		},
																		"nativeSrc": "3562:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3544:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3544:17:6"
																},
																"nativeSrc": "3544:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3544:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3531:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3531:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3461:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3501:5:6",
														"nodeType": "YulTypedName",
														"src": "3501:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3511:9:6",
														"nodeType": "YulTypedName",
														"src": "3511:9:6",
														"type": ""
													}
												],
												"src": "3461:142:6"
											},
											{
												"body": {
													"nativeSrc": "3656:28:6",
													"nodeType": "YulBlock",
													"src": "3656:28:6",
													"statements": [
														{
															"nativeSrc": "3666:12:6",
															"nodeType": "YulAssignment",
															"src": "3666:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3673:5:6",
																"nodeType": "YulIdentifier",
																"src": "3673:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3666:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3666:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3609:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3642:5:6",
														"nodeType": "YulTypedName",
														"src": "3642:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3652:3:6",
														"nodeType": "YulTypedName",
														"src": "3652:3:6",
														"type": ""
													}
												],
												"src": "3609:75:6"
											},
											{
												"body": {
													"nativeSrc": "3766:193:6",
													"nodeType": "YulBlock",
													"src": "3766:193:6",
													"statements": [
														{
															"nativeSrc": "3776:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3776:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3831:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3831:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3800:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3800:30:6"
																},
																"nativeSrc": "3800:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3800:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3780:16:6",
																	"nodeType": "YulTypedName",
																	"src": "3780:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3855:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3855:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3895:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3895:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3889:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3889:5:6"
																				},
																				"nativeSrc": "3889:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3889:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3902:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3902:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3934:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "3934:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3910:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "3910:23:6"
																				},
																				"nativeSrc": "3910:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3910:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3861:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "3861:27:6"
																		},
																		"nativeSrc": "3861:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3848:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3848:6:6"
																},
																"nativeSrc": "3848:105:6",
																"nodeType": "YulFunctionCall",
																"src": "3848:105:6"
															},
															"nativeSrc": "3848:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "3848:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3690:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3743:4:6",
														"nodeType": "YulTypedName",
														"src": "3743:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3749:6:6",
														"nodeType": "YulTypedName",
														"src": "3749:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3757:7:6",
														"nodeType": "YulTypedName",
														"src": "3757:7:6",
														"type": ""
													}
												],
												"src": "3690:269:6"
											},
											{
												"body": {
													"nativeSrc": "4014:24:6",
													"nodeType": "YulBlock",
													"src": "4014:24:6",
													"statements": [
														{
															"nativeSrc": "4024:8:6",
															"nodeType": "YulAssignment",
															"src": "4024:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4031:1:6",
																"nodeType": "YulLiteral",
																"src": "4031:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4024:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4024:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3965:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4010:3:6",
														"nodeType": "YulTypedName",
														"src": "4010:3:6",
														"type": ""
													}
												],
												"src": "3965:73:6"
											},
											{
												"body": {
													"nativeSrc": "4097:136:6",
													"nodeType": "YulBlock",
													"src": "4097:136:6",
													"statements": [
														{
															"nativeSrc": "4107:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4107:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4121:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4121:30:6"
																},
																"nativeSrc": "4121:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4121:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4111:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4111:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4206:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4206:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4212:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4212:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4220:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4220:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4162:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4162:43:6"
																},
																"nativeSrc": "4162:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4162:65:6"
															},
															"nativeSrc": "4162:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4162:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4044:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4083:4:6",
														"nodeType": "YulTypedName",
														"src": "4083:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4089:6:6",
														"nodeType": "YulTypedName",
														"src": "4089:6:6",
														"type": ""
													}
												],
												"src": "4044:189:6"
											},
											{
												"body": {
													"nativeSrc": "4289:136:6",
													"nodeType": "YulBlock",
													"src": "4289:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4356:63:6",
																"nodeType": "YulBlock",
																"src": "4356:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4400:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4400:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4407:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4407:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4370:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "4370:29:6"
																			},
																			"nativeSrc": "4370:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4370:39:6"
																		},
																		"nativeSrc": "4370:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4370:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4309:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4309:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4316:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4316:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4306:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4306:2:6"
																},
																"nativeSrc": "4306:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4306:14:6"
															},
															"nativeSrc": "4299:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4321:26:6",
																"nodeType": "YulBlock",
																"src": "4321:26:6",
																"statements": [
																	{
																		"nativeSrc": "4323:22:6",
																		"nodeType": "YulAssignment",
																		"src": "4323:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4336:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4336:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4343:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4343:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4332:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4332:3:6"
																			},
																			"nativeSrc": "4332:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4332:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4323:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4323:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4303:2:6",
																"nodeType": "YulBlock",
																"src": "4303:2:6",
																"statements": []
															},
															"src": "4299:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4239:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4277:5:6",
														"nodeType": "YulTypedName",
														"src": "4277:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4284:3:6",
														"nodeType": "YulTypedName",
														"src": "4284:3:6",
														"type": ""
													}
												],
												"src": "4239:186:6"
											},
											{
												"body": {
													"nativeSrc": "4510:464:6",
													"nodeType": "YulBlock",
													"src": "4510:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4536:431:6",
																"nodeType": "YulBlock",
																"src": "4536:431:6",
																"statements": [
																	{
																		"nativeSrc": "4550:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4550:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4598:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4598:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4566:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "4566:31:6"
																			},
																			"nativeSrc": "4566:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4566:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4554:8:6",
																				"nodeType": "YulTypedName",
																				"src": "4554:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4617:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4617:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4640:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4640:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4668:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "4668:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4650:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "4650:17:6"
																					},
																					"nativeSrc": "4650:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4650:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4636:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4636:3:6"
																			},
																			"nativeSrc": "4636:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4636:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4621:11:6",
																				"nodeType": "YulTypedName",
																				"src": "4621:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4837:27:6",
																			"nodeType": "YulBlock",
																			"src": "4837:27:6",
																			"statements": [
																				{
																					"nativeSrc": "4839:23:6",
																					"nodeType": "YulAssignment",
																					"src": "4839:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4854:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4854:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4839:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "4839:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4821:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "4821:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4833:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4833:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4818:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4818:2:6"
																			},
																			"nativeSrc": "4818:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4818:18:6"
																		},
																		"nativeSrc": "4815:49:6",
																		"nodeType": "YulIf",
																		"src": "4815:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4906:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "4906:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4923:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4923:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4951:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4951:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4933:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "4933:17:6"
																							},
																							"nativeSrc": "4933:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4933:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4919:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4919:3:6"
																					},
																					"nativeSrc": "4919:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4919:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4877:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "4877:28:6"
																			},
																			"nativeSrc": "4877:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4877:80:6"
																		},
																		"nativeSrc": "4877:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4877:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4527:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4527:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4532:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4532:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4524:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4524:2:6"
																},
																"nativeSrc": "4524:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4524:11:6"
															},
															"nativeSrc": "4521:446:6",
															"nodeType": "YulIf",
															"src": "4521:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4431:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4486:5:6",
														"nodeType": "YulTypedName",
														"src": "4486:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4493:3:6",
														"nodeType": "YulTypedName",
														"src": "4493:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4498:10:6",
														"nodeType": "YulTypedName",
														"src": "4498:10:6",
														"type": ""
													}
												],
												"src": "4431:543:6"
											},
											{
												"body": {
													"nativeSrc": "5043:54:6",
													"nodeType": "YulBlock",
													"src": "5043:54:6",
													"statements": [
														{
															"nativeSrc": "5053:37:6",
															"nodeType": "YulAssignment",
															"src": "5053:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5078:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5078:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5084:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5084:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5074:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5074:3:6"
																},
																"nativeSrc": "5074:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5074:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5053:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5053:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4980:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5018:4:6",
														"nodeType": "YulTypedName",
														"src": "5018:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5024:5:6",
														"nodeType": "YulTypedName",
														"src": "5024:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5034:8:6",
														"nodeType": "YulTypedName",
														"src": "5034:8:6",
														"type": ""
													}
												],
												"src": "4980:117:6"
											},
											{
												"body": {
													"nativeSrc": "5154:118:6",
													"nodeType": "YulBlock",
													"src": "5154:118:6",
													"statements": [
														{
															"nativeSrc": "5164:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5164:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5213:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5213:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5216:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5216:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5209:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5209:3:6"
																				},
																				"nativeSrc": "5209:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5209:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5228:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5228:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5224:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5224:3:6"
																				},
																				"nativeSrc": "5224:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5224:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5180:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "5180:28:6"
																		},
																		"nativeSrc": "5180:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5180:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5176:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:6"
																},
																"nativeSrc": "5176:56:6",
																"nodeType": "YulFunctionCall",
																"src": "5176:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5168:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5168:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5241:25:6",
															"nodeType": "YulAssignment",
															"src": "5241:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5255:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5255:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5261:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5261:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5251:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5251:3:6"
																},
																"nativeSrc": "5251:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5251:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5241:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5103:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5131:4:6",
														"nodeType": "YulTypedName",
														"src": "5131:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5137:5:6",
														"nodeType": "YulTypedName",
														"src": "5137:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5147:6:6",
														"nodeType": "YulTypedName",
														"src": "5147:6:6",
														"type": ""
													}
												],
												"src": "5103:169:6"
											},
											{
												"body": {
													"nativeSrc": "5358:214:6",
													"nodeType": "YulBlock",
													"src": "5358:214:6",
													"statements": [
														{
															"nativeSrc": "5491:37:6",
															"nodeType": "YulAssignment",
															"src": "5491:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5518:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5518:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5524:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5524:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5499:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5499:18:6"
																},
																"nativeSrc": "5499:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5499:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5491:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5491:4:6"
																}
															]
														},
														{
															"nativeSrc": "5537:29:6",
															"nodeType": "YulAssignment",
															"src": "5537:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5548:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5548:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5558:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5558:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5561:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5561:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5554:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5554:3:6"
																		},
																		"nativeSrc": "5554:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5545:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5545:2:6"
																},
																"nativeSrc": "5545:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5545:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5537:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5277:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5339:4:6",
														"nodeType": "YulTypedName",
														"src": "5339:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5345:3:6",
														"nodeType": "YulTypedName",
														"src": "5345:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5353:4:6",
														"nodeType": "YulTypedName",
														"src": "5353:4:6",
														"type": ""
													}
												],
												"src": "5277:295:6"
											},
											{
												"body": {
													"nativeSrc": "5669:1303:6",
													"nodeType": "YulBlock",
													"src": "5669:1303:6",
													"statements": [
														{
															"nativeSrc": "5680:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5680:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5727:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5727:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5694:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "5694:32:6"
																},
																"nativeSrc": "5694:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5694:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5684:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5684:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5816:22:6",
																"nodeType": "YulBlock",
																"src": "5816:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5818:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5818:16:6"
																			},
																			"nativeSrc": "5818:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5818:18:6"
																		},
																		"nativeSrc": "5818:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5818:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5788:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5788:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5796:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5796:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5785:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5785:2:6"
																},
																"nativeSrc": "5785:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5785:30:6"
															},
															"nativeSrc": "5782:56:6",
															"nodeType": "YulIf",
															"src": "5782:56:6"
														},
														{
															"nativeSrc": "5848:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5848:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5894:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5894:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5888:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5888:5:6"
																		},
																		"nativeSrc": "5888:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5888:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5862:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5862:25:6"
																},
																"nativeSrc": "5862:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5862:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5852:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5852:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5993:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5993:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5999:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5999:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6007:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6007:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5947:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "5947:45:6"
																},
																"nativeSrc": "5947:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5947:67:6"
															},
															"nativeSrc": "5947:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5947:67:6"
														},
														{
															"nativeSrc": "6024:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6024:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6041:1:6",
																"nodeType": "YulLiteral",
																"src": "6041:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6028:9:6",
																	"nodeType": "YulTypedName",
																	"src": "6028:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6052:17:6",
															"nodeType": "YulAssignment",
															"src": "6052:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6065:4:6",
																"nodeType": "YulLiteral",
																"src": "6065:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6052:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6052:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6116:611:6",
																		"nodeType": "YulBlock",
																		"src": "6116:611:6",
																		"statements": [
																			{
																				"nativeSrc": "6130:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6130:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6149:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6149:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6161:4:6",
																									"nodeType": "YulLiteral",
																									"src": "6161:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6157:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6157:3:6"
																							},
																							"nativeSrc": "6157:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6157:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6145:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6145:3:6"
																					},
																					"nativeSrc": "6145:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6145:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6134:7:6",
																						"nodeType": "YulTypedName",
																						"src": "6134:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6181:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6181:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6227:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6227:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6195:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "6195:31:6"
																					},
																					"nativeSrc": "6195:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6195:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6185:6:6",
																						"nodeType": "YulTypedName",
																						"src": "6185:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6245:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6245:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6254:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6254:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6249:1:6",
																						"nodeType": "YulTypedName",
																						"src": "6249:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6313:163:6",
																					"nodeType": "YulBlock",
																					"src": "6313:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6338:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6338:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6356:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "6356:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6361:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "6361:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6352:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6352:3:6"
																												},
																												"nativeSrc": "6352:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6352:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6346:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "6346:5:6"
																										},
																										"nativeSrc": "6346:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6346:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6331:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6331:6:6"
																								},
																								"nativeSrc": "6331:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6331:42:6"
																							},
																							"nativeSrc": "6331:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6331:42:6"
																						},
																						{
																							"nativeSrc": "6390:24:6",
																							"nodeType": "YulAssignment",
																							"src": "6390:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6404:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6404:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6412:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6412:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6400:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6400:3:6"
																								},
																								"nativeSrc": "6400:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6400:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6390:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6390:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6431:31:6",
																							"nodeType": "YulAssignment",
																							"src": "6431:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6448:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "6448:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6459:2:6",
																										"nodeType": "YulLiteral",
																										"src": "6459:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6444:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6444:3:6"
																								},
																								"nativeSrc": "6444:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6444:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6431:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "6431:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6279:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "6279:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6282:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6282:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6276:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6276:2:6"
																					},
																					"nativeSrc": "6276:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6276:14:6"
																				},
																				"nativeSrc": "6268:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6291:21:6",
																					"nodeType": "YulBlock",
																					"src": "6291:21:6",
																					"statements": [
																						{
																							"nativeSrc": "6293:17:6",
																							"nodeType": "YulAssignment",
																							"src": "6293:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6302:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "6302:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6305:4:6",
																										"nodeType": "YulLiteral",
																										"src": "6305:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6298:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6298:3:6"
																								},
																								"nativeSrc": "6298:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6298:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6293:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "6293:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6272:3:6",
																					"nodeType": "YulBlock",
																					"src": "6272:3:6",
																					"statements": []
																				},
																				"src": "6268:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "6512:156:6",
																					"nodeType": "YulBlock",
																					"src": "6512:156:6",
																					"statements": [
																						{
																							"nativeSrc": "6530:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6530:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6557:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6557:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6562:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6562:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6553:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6553:3:6"
																										},
																										"nativeSrc": "6553:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6553:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6547:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6547:5:6"
																								},
																								"nativeSrc": "6547:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6547:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6534:9:6",
																									"nodeType": "YulTypedName",
																									"src": "6534:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6597:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6597:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6624:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6624:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6639:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "6639:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6647:4:6",
																														"nodeType": "YulLiteral",
																														"src": "6647:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6635:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6635:3:6"
																												},
																												"nativeSrc": "6635:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6635:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6605:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "6605:18:6"
																										},
																										"nativeSrc": "6605:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6605:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6590:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6590:6:6"
																								},
																								"nativeSrc": "6590:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6590:64:6"
																							},
																							"nativeSrc": "6590:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6590:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6495:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6495:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6504:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6504:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6492:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6492:2:6"
																					},
																					"nativeSrc": "6492:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6492:19:6"
																				},
																				"nativeSrc": "6489:179:6",
																				"nodeType": "YulIf",
																				"src": "6489:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6688:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6688:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6702:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "6702:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6710:1:6",
																											"nodeType": "YulLiteral",
																											"src": "6710:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6698:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6698:3:6"
																									},
																									"nativeSrc": "6698:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "6698:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6714:1:6",
																									"nodeType": "YulLiteral",
																									"src": "6714:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6694:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6694:3:6"
																							},
																							"nativeSrc": "6694:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6694:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6681:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6681:6:6"
																					},
																					"nativeSrc": "6681:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6681:36:6"
																				},
																				"nativeSrc": "6681:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6681:36:6"
																			}
																		]
																	},
																	"nativeSrc": "6109:618:6",
																	"nodeType": "YulCase",
																	"src": "6109:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6114:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6114:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6744:222:6",
																		"nodeType": "YulBlock",
																		"src": "6744:222:6",
																		"statements": [
																			{
																				"nativeSrc": "6758:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6758:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6771:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6771:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6762:5:6",
																						"nodeType": "YulTypedName",
																						"src": "6762:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6795:67:6",
																					"nodeType": "YulBlock",
																					"src": "6795:67:6",
																					"statements": [
																						{
																							"nativeSrc": "6813:35:6",
																							"nodeType": "YulAssignment",
																							"src": "6813:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6832:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6832:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6837:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6837:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6828:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6828:3:6"
																										},
																										"nativeSrc": "6828:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6828:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6822:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6822:5:6"
																								},
																								"nativeSrc": "6822:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6822:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6813:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6813:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6788:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6788:6:6"
																				},
																				"nativeSrc": "6785:77:6",
																				"nodeType": "YulIf",
																				"src": "6785:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6882:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6882:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6941:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6941:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6948:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6948:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6888:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "6888:52:6"
																							},
																							"nativeSrc": "6888:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6888:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6875:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6875:6:6"
																					},
																					"nativeSrc": "6875:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6875:81:6"
																				},
																				"nativeSrc": "6875:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6875:81:6"
																			}
																		]
																	},
																	"nativeSrc": "6736:230:6",
																	"nodeType": "YulCase",
																	"src": "6736:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6089:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6089:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6097:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6097:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6086:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6086:2:6"
																},
																"nativeSrc": "6086:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6086:14:6"
															},
															"nativeSrc": "6079:887:6",
															"nodeType": "YulSwitch",
															"src": "6079:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5577:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5658:4:6",
														"nodeType": "YulTypedName",
														"src": "5658:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5664:3:6",
														"nodeType": "YulTypedName",
														"src": "5664:3:6",
														"type": ""
													}
												],
												"src": "5577:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620022743803806200227483398181016040528101906200003691906200017a565b6040518060400160405280600681526020017f52546f6b656e00000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f52540000000000000000000000000000000000000000000000000000000000008152508160039081620000b391906200046d565b508060049081620000c591906200046d565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560068190555084600781905550836008819055508260098190555081600a8190555080600b8190555050505050505062000551565b5f80fd5b5f819050919050565b620001568162000142565b811462000161575f80fd5b50565b5f8151905062000174816200014b565b92915050565b5f805f805f8060c087890312156200019757620001966200013e565b5b5f620001a689828a0162000164565b9650506020620001b989828a0162000164565b9550506040620001cc89828a0162000164565b9450506060620001df89828a0162000164565b9350506080620001f289828a0162000164565b92505060a06200020589828a0162000164565b9150509295509295509295565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200028e57607f821691505b602082108103620002a457620002a362000249565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002cb565b620003148683620002cb565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620003556200034f620003498462000142565b6200032c565b62000142565b9050919050565b5f819050919050565b620003708362000335565b620003886200037f826200035c565b848454620002d7565b825550505050565b5f90565b6200039e62000390565b620003ab81848462000365565b505050565b5b81811015620003d257620003c65f8262000394565b600181019050620003b1565b5050565b601f8211156200042157620003eb81620002aa565b620003f684620002bc565b8101602085101562000406578190505b6200041e6200041585620002bc565b830182620003b0565b50505b505050565b5f82821c905092915050565b5f620004435f198460080262000426565b1980831691505092915050565b5f6200045d838362000432565b9150826002028217905092915050565b620004788262000212565b67ffffffffffffffff8111156200049457620004936200021c565b5b620004a0825462000276565b620004ad828285620003d6565b5f60209050601f831160018114620004e3575f8415620004ce578287015190505b620004da858262000450565b86555062000549565b601f198416620004f386620002aa565b5f5b828110156200051c57848901518255600182019150602085019450602081019050620004f5565b868310156200053c578489015162000538601f89168262000432565b8355505b6001600288020188555050505b505050505050565b611d15806200055f5f395ff3fe608060405234801561000f575f80fd5b5060043610610140575f3560e01c806370a08231116100b65780639af8a5eb1161007a5780639af8a5eb1461036c578063a9059cbb1461038a578063b620b8cb146103ba578063dd62ed3e146103d6578063e7b4cac614610406578063f7b2a7be1461043c57610140565b806370a08231146102c257806378e97925146102f25780638da5cb5b146103105780638ea286c21461032e57806395d89b411461034e57610140565b8063313ce56711610108578063313ce567146101fe5780633197cbb61461021c5780634fd7d76a1461023a578063563a6c7a14610258578063589af69c1461028857806363a411c0146102a657610140565b806306fdde0314610144578063095ea7b31461016257806318160ddd14610192578063217f4353146101b057806323b872dd146101ce575b5f80fd5b61014c61045a565b60405161015991906115ff565b60405180910390f35b61017c600480360381019061017791906116b0565b6104ea565b6040516101899190611708565b60405180910390f35b61019a61050c565b6040516101a79190611730565b60405180910390f35b6101b8610515565b6040516101c59190611730565b60405180910390f35b6101e860048036038101906101e39190611749565b61051b565b6040516101f59190611708565b60405180910390f35b610206610549565b60405161021391906117b4565b60405180910390f35b610224610551565b6040516102319190611730565b60405180910390f35b610242610557565b60405161024f9190611730565b60405180910390f35b610272600480360381019061026d91906117cd565b61055d565b60405161027f9190611730565b60405180910390f35b61029061058a565b60405161029d9190611730565b60405180910390f35b6102c060048036038101906102bb9190611831565b610590565b005b6102dc60048036038101906102d79190611831565b61075b565b6040516102e99190611730565b60405180910390f35b6102fa6107a0565b6040516103079190611730565b60405180910390f35b6103186107a6565b604051610325919061186b565b60405180910390f35b6103366107cb565b604051610345939291906118f7565b60405180910390f35b6103566109d2565b60405161036391906115ff565b60405180910390f35b610374610a62565b6040516103819190611730565b60405180910390f35b6103a4600480360381019061039f91906116b0565b610a68565b6040516103b19190611708565b60405180910390f35b6103d460048036038101906103cf919061192c565b610a8a565b005b6103f060048036038101906103eb919061196a565b610ed1565b6040516103fd9190611730565b60405180910390f35b610420600480360381019061041b9190611831565b610f53565b60405161043397969594939291906119a8565b60405180910390f35b610444610fc9565b6040516104519190611730565b60405180910390f35b60606003805461046990611a42565b80601f016020809104026020016040519081016040528092919081815260200182805461049590611a42565b80156104e05780601f106104b7576101008083540402835291602001916104e0565b820191905f5260205f20905b8154815290600101906020018083116104c357829003601f168201915b5050505050905090565b5f806104f4610fcf565b9050610501818585610fd6565b600191505092915050565b5f600254905090565b60085481565b5f80610525610fcf565b9050610532858285610fe8565b61053d85858561107a565b60019150509392505050565b5f6012905090565b600a5481565b60065481565b5f818461056a9190611a9f565b83866105769190611a9f565b6105809190611ad2565b9050949350505050565b60075481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e8575f80fd5b600d5f8154809291906105fa90611b05565b91905055506040518060e001604052805f81526020015f81526020015f600381111561062957610628611884565b5b81526020018273ffffffffffffffffffffffffffffffffffffffff1681526020014281526020015f815260200160011515815250600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548160ff021916908360038111156106d6576106d5611884565b5b021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a0820151816004015560c0820151816005015f6101000a81548160ff02191690831515021790555090505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8073ffffffffffffffffffffffffffffffffffffffff16600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361089c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089390611b96565b60405180910390fd5b5f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060e00160405290815f820154815260200160018201548152602001600282015f9054906101000a900460ff16600381111561091c5761091b611884565b5b600381111561092e5761092d611884565b5b81526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015f9054906101000a900460ff1615151515815250509050805f01518160200151826040015193509350935050909192565b6060600480546109e190611a42565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0d90611a42565b8015610a585780601f10610a2f57610100808354040283529160200191610a58565b820191905f5260205f20905b815481529060010190602001808311610a3b57829003601f168201915b5050505050905090565b600d5481565b5f80610a72610fcf565b9050610a7f81858561107a565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff16600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f90611b96565b60405180910390fd5b600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206005015f9054906101000a900460ff16610be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdb90611c24565b60405180910390fd5b600954421015610c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2090611c8c565b60405180910390fd5b600a54421115610d3e575f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206005015f6101000a81548160ff021916908315150217905550600b54600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600401819055506003600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015f6101000a81548160ff02191690836003811115610d3457610d33611884565b5b0217905550610ecd565b610d48828261116a565b15610e0e57600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f815480929190610d9c90611b05565b91905055506001600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015f6101000a81548160ff02191690836003811115610e0457610e03611884565b5b0217905550610ecc565b600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f815480929190610e5e90611b05565b91905055506002600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015f6101000a81548160ff02191690836003811115610ec657610ec5611884565b5b02179055505b5b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600c602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015490806005015f9054906101000a900460ff16905087565b600b5481565b5f33905090565b610fe3838383600161118d565b505050565b5f610ff38484610ed1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110745781811015611065578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161105c93929190611caa565b60405180910390fd5b61107384848484035f61118d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110ea575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110e1919061186b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361115a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611151919061186b565b60405180910390fd5b61116583838361135c565b505050565b5f8061117c600654600754868661055d565b905060085481111591505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111fd575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111f4919061186b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361126d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611264919061186b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611356578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161134d9190611730565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113ac578060025f8282546113a09190611ad2565b9250508190555061147a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611435578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161142c93929190611caa565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114c1578060025f828254039250508190555061150b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115689190611730565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156115ac578082015181840152602081019050611591565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6115d182611575565b6115db818561157f565b93506115eb81856020860161158f565b6115f4816115b7565b840191505092915050565b5f6020820190508181035f83015261161781846115c7565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61164c82611623565b9050919050565b61165c81611642565b8114611666575f80fd5b50565b5f8135905061167781611653565b92915050565b5f819050919050565b61168f8161167d565b8114611699575f80fd5b50565b5f813590506116aa81611686565b92915050565b5f80604083850312156116c6576116c561161f565b5b5f6116d385828601611669565b92505060206116e48582860161169c565b9150509250929050565b5f8115159050919050565b611702816116ee565b82525050565b5f60208201905061171b5f8301846116f9565b92915050565b61172a8161167d565b82525050565b5f6020820190506117435f830184611721565b92915050565b5f805f606084860312156117605761175f61161f565b5b5f61176d86828701611669565b935050602061177e86828701611669565b925050604061178f8682870161169c565b9150509250925092565b5f60ff82169050919050565b6117ae81611799565b82525050565b5f6020820190506117c75f8301846117a5565b92915050565b5f805f80608085870312156117e5576117e461161f565b5b5f6117f28782880161169c565b94505060206118038782880161169c565b93505060406118148782880161169c565b92505060606118258782880161169c565b91505092959194509250565b5f602082840312156118465761184561161f565b5b5f61185384828501611669565b91505092915050565b61186581611642565b82525050565b5f60208201905061187e5f83018461185c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600481106118c2576118c1611884565b5b50565b5f8190506118d2826118b1565b919050565b5f6118e1826118c5565b9050919050565b6118f1816118d7565b82525050565b5f60608201905061190a5f830186611721565b6119176020830185611721565b61192460408301846118e8565b949350505050565b5f80604083850312156119425761194161161f565b5b5f61194f8582860161169c565b92505060206119608582860161169c565b9150509250929050565b5f80604083850312156119805761197f61161f565b5b5f61198d85828601611669565b925050602061199e85828601611669565b9150509250929050565b5f60e0820190506119bb5f83018a611721565b6119c86020830189611721565b6119d560408301886118e8565b6119e2606083018761185c565b6119ef6080830186611721565b6119fc60a0830185611721565b611a0960c08301846116f9565b98975050505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a5957607f821691505b602082108103611a6c57611a6b611a15565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611aa98261167d565b9150611ab48361167d565b9250828203905081811115611acc57611acb611a72565b5b92915050565b5f611adc8261167d565b9150611ae78361167d565b9250828201905080821115611aff57611afe611a72565b5b92915050565b5f611b0f8261167d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b4157611b40611a72565b5b600182019050919050565b7f446576696365206e6f74207265676973746572656400000000000000000000005f82015250565b5f611b8060158361157f565b9150611b8b82611b4c565b602082019050919050565b5f6020820190508181035f830152611bad81611b74565b9050919050565b7f7468652064657669636520436f6e7472616374206973206e6f742061637469765f8201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b5f611c0e60218361157f565b9150611c1982611bb4565b604082019050919050565b5f6020820190508181035f830152611c3b81611c02565b9050919050565b7f436f6e747261637420686173206e6f74207374617274656420796574000000005f82015250565b5f611c76601c8361157f565b9150611c8182611c42565b602082019050919050565b5f6020820190508181035f830152611ca381611c6a565b9050919050565b5f606082019050611cbd5f83018661185c565b611cca6020830185611721565b611cd76040830184611721565b94935050505056fea2646970667358221220ffddef9cbd7a3cbffb3180d31ecf8eccf12b1b0ecf2009b2d18b1cee57ba19fa64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2274 CODESIZE SUB DUP1 PUSH3 0x2274 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52546F6B656E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5254000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x46D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x46D JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x551 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x156 DUP2 PUSH3 0x142 JUMP JUMPDEST DUP2 EQ PUSH3 0x161 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x174 DUP2 PUSH3 0x14B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x197 JUMPI PUSH3 0x196 PUSH3 0x13E JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x1A6 DUP10 DUP3 DUP11 ADD PUSH3 0x164 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x1B9 DUP10 DUP3 DUP11 ADD PUSH3 0x164 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x1CC DUP10 DUP3 DUP11 ADD PUSH3 0x164 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x1DF DUP10 DUP3 DUP11 ADD PUSH3 0x164 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x1F2 DUP10 DUP3 DUP11 ADD PUSH3 0x164 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x205 DUP10 DUP3 DUP11 ADD PUSH3 0x164 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x28E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2A4 JUMPI PUSH3 0x2A3 PUSH3 0x249 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x308 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2CB JUMP JUMPDEST PUSH3 0x314 DUP7 DUP4 PUSH3 0x2CB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x355 PUSH3 0x34F PUSH3 0x349 DUP5 PUSH3 0x142 JUMP JUMPDEST PUSH3 0x32C JUMP JUMPDEST PUSH3 0x142 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x370 DUP4 PUSH3 0x335 JUMP JUMPDEST PUSH3 0x388 PUSH3 0x37F DUP3 PUSH3 0x35C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2D7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x39E PUSH3 0x390 JUMP JUMPDEST PUSH3 0x3AB DUP2 DUP5 DUP5 PUSH3 0x365 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D2 JUMPI PUSH3 0x3C6 PUSH0 DUP3 PUSH3 0x394 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x421 JUMPI PUSH3 0x3EB DUP2 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x3F6 DUP5 PUSH3 0x2BC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x406 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x41E PUSH3 0x415 DUP6 PUSH3 0x2BC JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x443 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x426 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x45D DUP4 DUP4 PUSH3 0x432 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x478 DUP3 PUSH3 0x212 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x494 JUMPI PUSH3 0x493 PUSH3 0x21C JUMP JUMPDEST JUMPDEST PUSH3 0x4A0 DUP3 SLOAD PUSH3 0x276 JUMP JUMPDEST PUSH3 0x4AD DUP3 DUP3 DUP6 PUSH3 0x3D6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4E3 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x4CE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4DA DUP6 DUP3 PUSH3 0x450 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x549 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4F3 DUP7 PUSH3 0x2AA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x51C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4F5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x53C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x538 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x432 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D15 DUP1 PUSH3 0x55F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9AF8A5EB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x9AF8A5EB EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xB620B8CB EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xE7B4CAC6 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x43C JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x8EA286C2 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x4FD7D76A EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x563A6C7A EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x589AF69C EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x63A411C0 EQ PUSH2 0x2A6 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x217F4353 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x495 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4F4 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH2 0x501 DUP2 DUP6 DUP6 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x525 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH2 0x532 DUP6 DUP3 DUP6 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x53D DUP6 DUP6 DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 DUP5 PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST DUP4 DUP7 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5FA SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x629 JUMPI PUSH2 0x628 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x893 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x1884 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x92E JUMPI PUSH2 0x92D PUSH2 0x1884 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9E1 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA0D SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA58 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA58 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA3B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA72 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH2 0xA7F DUP2 DUP6 DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4F SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDB SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC20 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD TIMESTAMP GT ISZERO PUSH2 0xD3E JUMPI PUSH0 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD33 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xECD JUMP JUMPDEST PUSH2 0xD48 DUP3 DUP3 PUSH2 0x116A JUMP JUMPDEST ISZERO PUSH2 0xE0E JUMPI PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD9C SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xECC JUMP JUMPDEST PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE5E SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEC6 JUMPI PUSH2 0xEC5 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFE3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFF3 DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1074 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1065 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1073 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x118D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x115A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1165 DUP4 DUP4 DUP4 PUSH2 0x135C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x117C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP7 DUP7 PUSH2 0x55D JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 GT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1356 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13AC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x147A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x150B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15AC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1591 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15D1 DUP3 PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x15DB DUP2 DUP6 PUSH2 0x157F JUMP JUMPDEST SWAP4 POP PUSH2 0x15EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x158F JUMP JUMPDEST PUSH2 0x15F4 DUP2 PUSH2 0x15B7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1617 DUP2 DUP5 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x164C DUP3 PUSH2 0x1623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165C DUP2 PUSH2 0x1642 JUMP JUMPDEST DUP2 EQ PUSH2 0x1666 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1677 DUP2 PUSH2 0x1653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168F DUP2 PUSH2 0x167D JUMP JUMPDEST DUP2 EQ PUSH2 0x1699 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16AA DUP2 PUSH2 0x1686 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C6 JUMPI PUSH2 0x16C5 PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16E4 DUP6 DUP3 DUP7 ADD PUSH2 0x169C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1702 DUP2 PUSH2 0x16EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172A DUP2 PUSH2 0x167D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1743 PUSH0 DUP4 ADD DUP5 PUSH2 0x1721 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1760 JUMPI PUSH2 0x175F PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176D DUP7 DUP3 DUP8 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x177E DUP7 DUP3 DUP8 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x178F DUP7 DUP3 DUP8 ADD PUSH2 0x169C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AE DUP2 PUSH2 0x1799 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17E5 JUMPI PUSH2 0x17E4 PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F2 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1803 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1814 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1825 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1846 JUMPI PUSH2 0x1845 PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1853 DUP5 DUP3 DUP6 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1865 DUP2 PUSH2 0x1642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x187E PUSH0 DUP4 ADD DUP5 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x18C2 JUMPI PUSH2 0x18C1 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x18D2 DUP3 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18E1 DUP3 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F1 DUP2 PUSH2 0x18D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x190A PUSH0 DUP4 ADD DUP7 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1917 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1924 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18E8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1942 JUMPI PUSH2 0x1941 PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194F DUP6 DUP3 DUP7 ADD PUSH2 0x169C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1960 DUP6 DUP3 DUP7 ADD PUSH2 0x169C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198D DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199E DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x19BB PUSH0 DUP4 ADD DUP11 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x19C8 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x19D5 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x19E2 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x19EF PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x19FC PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1A09 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A59 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A6C JUMPI PUSH2 0x1A6B PUSH2 0x1A15 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AA9 DUP3 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB4 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1ACC JUMPI PUSH2 0x1ACB PUSH2 0x1A72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ADC DUP3 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE7 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x1A72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B0F DUP3 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x1A72 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446576696365206E6F7420726567697374657265640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B80 PUSH1 0x15 DUP4 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8B DUP3 PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BAD DUP2 PUSH2 0x1B74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468652064657669636520436F6E7472616374206973206E6F74206163746976 PUSH0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0E PUSH1 0x21 DUP4 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP3 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C3B DUP2 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747261637420686173206E6F7420737461727465642079657400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C76 PUSH1 0x1C DUP4 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C81 DUP3 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA3 DUP2 PUSH2 0x1C6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CBD PUSH0 DUP4 ADD DUP7 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x1CCA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1CD7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1721 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xDD 0xEF SWAP13 0xBD PUSH27 0x3CBFFB3180D31ECF8ECCF12B1B0ECF2009B2D18B1CEE57BA19FA64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "81:3242:2:-:0;;;770:408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1899:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:5;1965;:13;;;;;;:::i;:::-;;1998:7;1988;:17;;;;;;:::i;:::-;;1899:113;;975:10:2::1;967:5;;:18;;;;;;;;;;;;;;;;;;1006:9;995:8;:20;;;;1037:10;1025:9;:22;;;;1066:7;1057:6;:16;;;;1095:10;1083:9;:22;;;;1125:8;1115:7;:18;;;;1158:13;1143:12;:28;;;;770:408:::0;;;;;;81:3242;;88:117:6;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:1134::-;809:6;817;825;833;841;849;898:3;886:9;877:7;873:23;869:33;866:120;;;905:79;;:::i;:::-;866:120;1025:1;1050:64;1106:7;1097:6;1086:9;1082:22;1050:64;:::i;:::-;1040:74;;996:128;1163:2;1189:64;1245:7;1236:6;1225:9;1221:22;1189:64;:::i;:::-;1179:74;;1134:129;1302:2;1328:64;1384:7;1375:6;1364:9;1360:22;1328:64;:::i;:::-;1318:74;;1273:129;1441:2;1467:64;1523:7;1514:6;1503:9;1499:22;1467:64;:::i;:::-;1457:74;;1412:129;1580:3;1607:64;1663:7;1654:6;1643:9;1639:22;1607:64;:::i;:::-;1597:74;;1551:130;1720:3;1747:64;1803:7;1794:6;1783:9;1779:22;1747:64;:::i;:::-;1737:74;;1691:130;694:1134;;;;;;;;:::o;1834:99::-;1886:6;1920:5;1914:12;1904:22;;1834:99;;;:::o;1939:180::-;1987:77;1984:1;1977:88;2084:4;2081:1;2074:15;2108:4;2105:1;2098:15;2125:180;2173:77;2170:1;2163:88;2270:4;2267:1;2260:15;2294:4;2291:1;2284:15;2311:320;2355:6;2392:1;2386:4;2382:12;2372:22;;2439:1;2433:4;2429:12;2460:18;2450:81;;2516:4;2508:6;2504:17;2494:27;;2450:81;2578:2;2570:6;2567:14;2547:18;2544:38;2541:84;;2597:18;;:::i;:::-;2541:84;2362:269;2311:320;;;:::o;2637:141::-;2686:4;2709:3;2701:11;;2732:3;2729:1;2722:14;2766:4;2763:1;2753:18;2745:26;;2637:141;;;:::o;2784:93::-;2821:6;2868:2;2863;2856:5;2852:14;2848:23;2838:33;;2784:93;;;:::o;2883:107::-;2927:8;2977:5;2971:4;2967:16;2946:37;;2883:107;;;;:::o;2996:393::-;3065:6;3115:1;3103:10;3099:18;3138:97;3168:66;3157:9;3138:97;:::i;:::-;3256:39;3286:8;3275:9;3256:39;:::i;:::-;3244:51;;3328:4;3324:9;3317:5;3313:21;3304:30;;3377:4;3367:8;3363:19;3356:5;3353:30;3343:40;;3072:317;;2996:393;;;;;:::o;3395:60::-;3423:3;3444:5;3437:12;;3395:60;;;:::o;3461:142::-;3511:9;3544:53;3562:34;3571:24;3589:5;3571:24;:::i;:::-;3562:34;:::i;:::-;3544:53;:::i;:::-;3531:66;;3461:142;;;:::o;3609:75::-;3652:3;3673:5;3666:12;;3609:75;;;:::o;3690:269::-;3800:39;3831:7;3800:39;:::i;:::-;3861:91;3910:41;3934:16;3910:41;:::i;:::-;3902:6;3895:4;3889:11;3861:91;:::i;:::-;3855:4;3848:105;3766:193;3690:269;;;:::o;3965:73::-;4010:3;3965:73;:::o;4044:189::-;4121:32;;:::i;:::-;4162:65;4220:6;4212;4206:4;4162:65;:::i;:::-;4097:136;4044:189;;:::o;4239:186::-;4299:120;4316:3;4309:5;4306:14;4299:120;;;4370:39;4407:1;4400:5;4370:39;:::i;:::-;4343:1;4336:5;4332:13;4323:22;;4299:120;;;4239:186;;:::o;4431:543::-;4532:2;4527:3;4524:11;4521:446;;;4566:38;4598:5;4566:38;:::i;:::-;4650:29;4668:10;4650:29;:::i;:::-;4640:8;4636:44;4833:2;4821:10;4818:18;4815:49;;;4854:8;4839:23;;4815:49;4877:80;4933:22;4951:3;4933:22;:::i;:::-;4923:8;4919:37;4906:11;4877:80;:::i;:::-;4536:431;;4521:446;4431:543;;;:::o;4980:117::-;5034:8;5084:5;5078:4;5074:16;5053:37;;4980:117;;;;:::o;5103:169::-;5147:6;5180:51;5228:1;5224:6;5216:5;5213:1;5209:13;5180:51;:::i;:::-;5176:56;5261:4;5255;5251:15;5241:25;;5154:118;5103:169;;;;:::o;5277:295::-;5353:4;5499:29;5524:3;5518:4;5499:29;:::i;:::-;5491:37;;5561:3;5558:1;5554:11;5548:4;5545:21;5537:29;;5277:295;;;;:::o;5577:1395::-;5694:37;5727:3;5694:37;:::i;:::-;5796:18;5788:6;5785:30;5782:56;;;5818:18;;:::i;:::-;5782:56;5862:38;5894:4;5888:11;5862:38;:::i;:::-;5947:67;6007:6;5999;5993:4;5947:67;:::i;:::-;6041:1;6065:4;6052:17;;6097:2;6089:6;6086:14;6114:1;6109:618;;;;6771:1;6788:6;6785:77;;;6837:9;6832:3;6828:19;6822:26;6813:35;;6785:77;6888:67;6948:6;6941:5;6888:67;:::i;:::-;6882:4;6875:81;6744:222;6079:887;;6109:618;6161:4;6157:9;6149:6;6145:22;6195:37;6227:4;6195:37;:::i;:::-;6254:1;6268:208;6282:7;6279:1;6276:14;6268:208;;;6361:9;6356:3;6352:19;6346:26;6338:6;6331:42;6412:1;6404:6;6400:14;6390:24;;6459:2;6448:9;6444:18;6431:31;;6305:4;6302:1;6298:12;6293:17;;6268:208;;;6504:6;6495:7;6492:19;6489:179;;;6562:9;6557:3;6553:19;6547:26;6605:48;6647:4;6639:6;6635:17;6624:9;6605:48;:::i;:::-;6597:6;6590:64;6512:156;6489:179;6714:1;6710;6702:6;6698:14;6694:22;6688:4;6681:36;6116:611;;;6079:887;;5669:1303;;;5577:1395;;:::o;81:3242:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DeviceCount_639": {
									"entryPoint": 2658,
									"id": 639,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_405": {
									"entryPoint": 4054,
									"id": 405,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_465": {
									"entryPoint": 4493,
									"id": 465,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_calculateDistance_885": {
									"entryPoint": 1373,
									"id": 885,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_isWithinArea_861": {
									"entryPoint": 4458,
									"id": 861,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1120": {
									"entryPoint": 4047,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_513": {
									"entryPoint": 4072,
									"id": 513,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_244": {
									"entryPoint": 4218,
									"id": 244,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_321": {
									"entryPoint": 4956,
									"id": 321,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addDriver_726": {
									"entryPoint": 1424,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 3793,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_165": {
									"entryPoint": 1258,
									"id": 165,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_100": {
									"entryPoint": 1883,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_78": {
									"entryPoint": 1353,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@devices_637": {
									"entryPoint": 3923,
									"id": 637,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endTime_609": {
									"entryPoint": 1361,
									"id": 609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDevice_944": {
									"entryPoint": 1995,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@latitude_601": {
									"entryPoint": 1367,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@longitude_603": {
									"entryPoint": 1418,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_60": {
									"entryPoint": 1114,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@optIn_838": {
									"entryPoint": 2698,
									"id": 838,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_599": {
									"entryPoint": 1958,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@radius_605": {
									"entryPoint": 1301,
									"id": 605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_611": {
									"entryPoint": 4041,
									"id": 611,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTime_607": {
									"entryPoint": 1952,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_69": {
									"entryPoint": 2514,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_87": {
									"entryPoint": 1292,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_197": {
									"entryPoint": 1307,
									"id": 197,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_124": {
									"entryPoint": 2664,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_DeviceState_$616_to_t_uint8_fromStack": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_enum$_DeviceState_$616__to_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 6391,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_enum$_DeviceState_$616_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint8_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_DeviceState_$616": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_DeviceState_$616_to_t_uint8": {
									"entryPoint": 6359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66": {
									"entryPoint": 6988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_DeviceState_$616": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14177:6",
										"nodeType": "YulBlock",
										"src": "0:14177:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:184:6",
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nativeSrc": "359:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:6",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:6",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:6",
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nativeSrc": "449:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nativeSrc": "468:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nativeSrc": "462:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nativeSrc": "442:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nativeSrc": "442:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nativeSrc": "386:13:6",
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nativeSrc": "378:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:6",
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nativeSrc": "402:15:6",
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:6",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nativeSrc": "407:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:6",
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nativeSrc": "507:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:6",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nativeSrc": "500:27:6",
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nativeSrc": "500:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nativeSrc": "587:54:6",
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nativeSrc": "597:38:6",
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:6",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nativeSrc": "611:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:6",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nativeSrc": "627:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nativeSrc": "607:28:6",
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:6",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:6",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nativeSrc": "739:285:6",
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nativeSrc": "749:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nativeSrc": "763:39:6",
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:6",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:6",
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nativeSrc": "818:71:6",
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:6",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nativeSrc": "933:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nativeSrc": "898:65:6",
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nativeSrc": "898:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nativeSrc": "972:46:6",
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nativeSrc": "988:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nativeSrc": "979:39:6",
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:6",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:6",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:6",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nativeSrc": "1148:195:6",
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nativeSrc": "1158:26:6",
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nativeSrc": "1166:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nativeSrc": "1201:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nativeSrc": "1220:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nativeSrc": "1194:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nativeSrc": "1194:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nativeSrc": "1250:86:6",
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nativeSrc": "1258:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:6",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:6",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nativeSrc": "1389:35:6",
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nativeSrc": "1399:19:6",
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nativeSrc": "1409:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:6",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nativeSrc": "1519:28:6",
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nativeSrc": "1529:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nativeSrc": "1529:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nativeSrc": "1642:28:6",
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nativeSrc": "1652:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nativeSrc": "1652:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nativeSrc": "1721:81:6",
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nativeSrc": "1731:65:6",
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nativeSrc": "1742:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:6",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:6",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nativeSrc": "1853:51:6",
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nativeSrc": "1863:35:6",
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nativeSrc": "1874:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:6",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:6",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nativeSrc": "1953:79:6",
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:6",
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nativeSrc": "2012:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nativeSrc": "2012:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nativeSrc": "1983:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nativeSrc": "1973:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nativeSrc": "1966:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nativeSrc": "1963:63:6",
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:6",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nativeSrc": "2090:87:6",
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nativeSrc": "2100:29:6",
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nativeSrc": "2109:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nativeSrc": "2138:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nativeSrc": "2138:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:6",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:6",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:6",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nativeSrc": "2228:32:6",
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nativeSrc": "2238:16:6",
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:6",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:6",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:6",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nativeSrc": "2309:79:6",
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:6",
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nativeSrc": "2368:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nativeSrc": "2368:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nativeSrc": "2339:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nativeSrc": "2329:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nativeSrc": "2322:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nativeSrc": "2319:63:6",
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:6",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nativeSrc": "2446:87:6",
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nativeSrc": "2456:29:6",
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nativeSrc": "2465:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nativeSrc": "2494:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nativeSrc": "2494:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:6",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:6",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:6",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nativeSrc": "2622:391:6",
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:6",
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nativeSrc": "2670:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nativeSrc": "2670:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nativeSrc": "2639:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nativeSrc": "2635:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nativeSrc": "2632:119:6",
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nativeSrc": "2761:117:6",
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nativeSrc": "2776:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nativeSrc": "2836:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nativeSrc": "2815:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:6",
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nativeSrc": "2903:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nativeSrc": "2964:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nativeSrc": "2943:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:6",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:6",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:6",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:6",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nativeSrc": "3061:48:6",
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nativeSrc": "3071:32:6",
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nativeSrc": "3089:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nativeSrc": "3082:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:6",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:6",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nativeSrc": "3174:50:6",
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nativeSrc": "3196:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nativeSrc": "3184:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nativeSrc": "3184:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:6",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:6",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nativeSrc": "3322:118:6",
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nativeSrc": "3332:26:6",
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nativeSrc": "3340:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nativeSrc": "3415:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nativeSrc": "3368:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nativeSrc": "3368:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:6",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:6",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:6",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nativeSrc": "3511:53:6",
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nativeSrc": "3533:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nativeSrc": "3521:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nativeSrc": "3521:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:6",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:6",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nativeSrc": "3668:124:6",
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nativeSrc": "3678:26:6",
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nativeSrc": "3686:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nativeSrc": "3767:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nativeSrc": "3714:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nativeSrc": "3714:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:6",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:6",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:6",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nativeSrc": "3898:519:6",
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:6",
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nativeSrc": "3946:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nativeSrc": "3946:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nativeSrc": "3915:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nativeSrc": "3911:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nativeSrc": "3908:119:6",
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nativeSrc": "4037:117:6",
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nativeSrc": "4052:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nativeSrc": "4112:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nativeSrc": "4091:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:6",
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nativeSrc": "4179:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nativeSrc": "4240:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nativeSrc": "4219:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:6",
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nativeSrc": "4307:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nativeSrc": "4368:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nativeSrc": "4347:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:6",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:6",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:6",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:6",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:6",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nativeSrc": "4466:43:6",
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nativeSrc": "4476:27:6",
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nativeSrc": "4487:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:6",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:6",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nativeSrc": "4576:51:6",
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nativeSrc": "4598:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nativeSrc": "4586:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nativeSrc": "4586:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:6",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:6",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nativeSrc": "4727:120:6",
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nativeSrc": "4737:26:6",
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nativeSrc": "4745:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nativeSrc": "4822:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nativeSrc": "4773:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nativeSrc": "4773:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:6",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:6",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:6",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nativeSrc": "4970:648:6",
													"nodeType": "YulBlock",
													"src": "4970:648:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5017:83:6",
																"nodeType": "YulBlock",
																"src": "5017:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5019:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5019:77:6"
																			},
																			"nativeSrc": "5019:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5019:79:6"
																		},
																		"nativeSrc": "5019:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5019:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4991:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4991:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5000:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5000:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4987:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4987:3:6"
																		},
																		"nativeSrc": "4987:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4987:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5012:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5012:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4983:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4983:3:6"
																},
																"nativeSrc": "4983:33:6",
																"nodeType": "YulFunctionCall",
																"src": "4983:33:6"
															},
															"nativeSrc": "4980:120:6",
															"nodeType": "YulIf",
															"src": "4980:120:6"
														},
														{
															"nativeSrc": "5110:117:6",
															"nodeType": "YulBlock",
															"src": "5110:117:6",
															"statements": [
																{
																	"nativeSrc": "5125:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5125:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5139:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5139:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5129:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5129:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5154:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5154:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5189:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5189:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5200:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5200:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5185:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5185:3:6"
																				},
																				"nativeSrc": "5185:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5185:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5209:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5209:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5164:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5164:20:6"
																		},
																		"nativeSrc": "5164:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5154:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5154:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5237:118:6",
															"nodeType": "YulBlock",
															"src": "5237:118:6",
															"statements": [
																{
																	"nativeSrc": "5252:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5252:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5266:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5266:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5256:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5256:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5282:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5282:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5317:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5317:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5328:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5328:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5313:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5313:3:6"
																				},
																				"nativeSrc": "5313:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5313:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5337:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5337:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5292:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5292:20:6"
																		},
																		"nativeSrc": "5292:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5292:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5282:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5282:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5365:118:6",
															"nodeType": "YulBlock",
															"src": "5365:118:6",
															"statements": [
																{
																	"nativeSrc": "5380:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5380:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5394:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5384:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5384:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5410:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5410:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5445:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5445:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5456:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5456:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5441:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5441:3:6"
																				},
																				"nativeSrc": "5441:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5441:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5465:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5465:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5420:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5420:20:6"
																		},
																		"nativeSrc": "5420:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5420:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5410:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5410:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5493:118:6",
															"nodeType": "YulBlock",
															"src": "5493:118:6",
															"statements": [
																{
																	"nativeSrc": "5508:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5522:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5522:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5512:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5538:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5538:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5573:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5573:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5584:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5584:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5569:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5569:3:6"
																				},
																				"nativeSrc": "5569:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5569:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5593:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5593:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5548:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5548:20:6"
																		},
																		"nativeSrc": "5548:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5548:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5538:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5538:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "4853:765:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4916:9:6",
														"nodeType": "YulTypedName",
														"src": "4916:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4927:7:6",
														"nodeType": "YulTypedName",
														"src": "4927:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4939:6:6",
														"nodeType": "YulTypedName",
														"src": "4939:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4947:6:6",
														"nodeType": "YulTypedName",
														"src": "4947:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4955:6:6",
														"nodeType": "YulTypedName",
														"src": "4955:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4963:6:6",
														"nodeType": "YulTypedName",
														"src": "4963:6:6",
														"type": ""
													}
												],
												"src": "4853:765:6"
											},
											{
												"body": {
													"nativeSrc": "5690:263:6",
													"nodeType": "YulBlock",
													"src": "5690:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5736:83:6",
																"nodeType": "YulBlock",
																"src": "5736:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5738:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5738:77:6"
																			},
																			"nativeSrc": "5738:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5738:79:6"
																		},
																		"nativeSrc": "5738:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5738:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5711:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5711:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5720:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5720:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5707:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5707:3:6"
																		},
																		"nativeSrc": "5707:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5707:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5732:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5732:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5703:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5703:3:6"
																},
																"nativeSrc": "5703:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5703:32:6"
															},
															"nativeSrc": "5700:119:6",
															"nodeType": "YulIf",
															"src": "5700:119:6"
														},
														{
															"nativeSrc": "5829:117:6",
															"nodeType": "YulBlock",
															"src": "5829:117:6",
															"statements": [
																{
																	"nativeSrc": "5844:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5844:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5858:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5858:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5848:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5848:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5873:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5873:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5908:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5908:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5919:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5919:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5904:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5904:3:6"
																				},
																				"nativeSrc": "5904:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5904:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5928:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5883:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5883:20:6"
																		},
																		"nativeSrc": "5883:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5883:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5873:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5873:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5624:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5660:9:6",
														"nodeType": "YulTypedName",
														"src": "5660:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5671:7:6",
														"nodeType": "YulTypedName",
														"src": "5671:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5683:6:6",
														"nodeType": "YulTypedName",
														"src": "5683:6:6",
														"type": ""
													}
												],
												"src": "5624:329:6"
											},
											{
												"body": {
													"nativeSrc": "6024:53:6",
													"nodeType": "YulBlock",
													"src": "6024:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6041:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6041:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6064:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6064:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6046:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6046:17:6"
																		},
																		"nativeSrc": "6046:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6046:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6034:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6034:6:6"
																},
																"nativeSrc": "6034:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6034:37:6"
															},
															"nativeSrc": "6034:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6034:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5959:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6012:5:6",
														"nodeType": "YulTypedName",
														"src": "6012:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6019:3:6",
														"nodeType": "YulTypedName",
														"src": "6019:3:6",
														"type": ""
													}
												],
												"src": "5959:118:6"
											},
											{
												"body": {
													"nativeSrc": "6181:124:6",
													"nodeType": "YulBlock",
													"src": "6181:124:6",
													"statements": [
														{
															"nativeSrc": "6191:26:6",
															"nodeType": "YulAssignment",
															"src": "6191:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6203:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6203:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6214:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6199:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6199:3:6"
																},
																"nativeSrc": "6199:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6199:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6191:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6191:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6271:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6284:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6284:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6295:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6295:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6280:3:6"
																		},
																		"nativeSrc": "6280:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6280:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6227:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6227:43:6"
																},
																"nativeSrc": "6227:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6227:71:6"
															},
															"nativeSrc": "6227:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6227:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6083:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6153:9:6",
														"nodeType": "YulTypedName",
														"src": "6153:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6165:6:6",
														"nodeType": "YulTypedName",
														"src": "6165:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6176:4:6",
														"nodeType": "YulTypedName",
														"src": "6176:4:6",
														"type": ""
													}
												],
												"src": "6083:222:6"
											},
											{
												"body": {
													"nativeSrc": "6339:152:6",
													"nodeType": "YulBlock",
													"src": "6339:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6356:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6356:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6359:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6359:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6349:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:6"
																},
																"nativeSrc": "6349:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6349:88:6"
															},
															"nativeSrc": "6349:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6349:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6453:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6453:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6456:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6456:4:6",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6446:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6446:6:6"
																},
																"nativeSrc": "6446:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6446:15:6"
															},
															"nativeSrc": "6446:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6446:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6477:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6477:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6480:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6480:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6470:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6470:6:6"
																},
																"nativeSrc": "6470:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6470:15:6"
															},
															"nativeSrc": "6470:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6470:15:6"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "6311:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6311:180:6"
											},
											{
												"body": {
													"nativeSrc": "6555:62:6",
													"nodeType": "YulBlock",
													"src": "6555:62:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:22:6",
																"nodeType": "YulBlock",
																"src": "6589:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "6591:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6591:16:6"
																			},
																			"nativeSrc": "6591:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:18:6"
																		},
																		"nativeSrc": "6591:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6578:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6578:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6585:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6585:1:6",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6575:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6575:2:6"
																		},
																		"nativeSrc": "6575:12:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6575:12:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6568:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6568:6:6"
																},
																"nativeSrc": "6568:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6568:20:6"
															},
															"nativeSrc": "6565:46:6",
															"nodeType": "YulIf",
															"src": "6565:46:6"
														}
													]
												},
												"name": "validator_assert_t_enum$_DeviceState_$616",
												"nativeSrc": "6497:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6548:5:6",
														"nodeType": "YulTypedName",
														"src": "6548:5:6",
														"type": ""
													}
												],
												"src": "6497:120:6"
											},
											{
												"body": {
													"nativeSrc": "6683:81:6",
													"nodeType": "YulBlock",
													"src": "6683:81:6",
													"statements": [
														{
															"nativeSrc": "6693:16:6",
															"nodeType": "YulAssignment",
															"src": "6693:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "6704:5:6",
																"nodeType": "YulIdentifier",
																"src": "6704:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6693:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6693:7:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6752:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6752:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_DeviceState_$616",
																	"nativeSrc": "6710:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "6710:41:6"
																},
																"nativeSrc": "6710:48:6",
																"nodeType": "YulFunctionCall",
																"src": "6710:48:6"
															},
															"nativeSrc": "6710:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "6710:48:6"
														}
													]
												},
												"name": "cleanup_t_enum$_DeviceState_$616",
												"nativeSrc": "6623:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6665:5:6",
														"nodeType": "YulTypedName",
														"src": "6665:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6675:7:6",
														"nodeType": "YulTypedName",
														"src": "6675:7:6",
														"type": ""
													}
												],
												"src": "6623:141:6"
											},
											{
												"body": {
													"nativeSrc": "6843:68:6",
													"nodeType": "YulBlock",
													"src": "6843:68:6",
													"statements": [
														{
															"nativeSrc": "6853:52:6",
															"nodeType": "YulAssignment",
															"src": "6853:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6899:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6899:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_DeviceState_$616",
																	"nativeSrc": "6866:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "6866:32:6"
																},
																"nativeSrc": "6866:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6866:39:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6853:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6853:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_DeviceState_$616_to_t_uint8",
												"nativeSrc": "6770:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6823:5:6",
														"nodeType": "YulTypedName",
														"src": "6823:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6833:9:6",
														"nodeType": "YulTypedName",
														"src": "6833:9:6",
														"type": ""
													}
												],
												"src": "6770:141:6"
											},
											{
												"body": {
													"nativeSrc": "6995:79:6",
													"nodeType": "YulBlock",
													"src": "6995:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7012:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7012:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7061:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7061:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_DeviceState_$616_to_t_uint8",
																			"nativeSrc": "7017:43:6",
																			"nodeType": "YulIdentifier",
																			"src": "7017:43:6"
																		},
																		"nativeSrc": "7017:50:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7017:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7005:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7005:6:6"
																},
																"nativeSrc": "7005:63:6",
																"nodeType": "YulFunctionCall",
																"src": "7005:63:6"
															},
															"nativeSrc": "7005:63:6",
															"nodeType": "YulExpressionStatement",
															"src": "7005:63:6"
														}
													]
												},
												"name": "abi_encode_t_enum$_DeviceState_$616_to_t_uint8_fromStack",
												"nativeSrc": "6917:157:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6983:5:6",
														"nodeType": "YulTypedName",
														"src": "6983:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6990:3:6",
														"nodeType": "YulTypedName",
														"src": "6990:3:6",
														"type": ""
													}
												],
												"src": "6917:157:6"
											},
											{
												"body": {
													"nativeSrc": "7247:301:6",
													"nodeType": "YulBlock",
													"src": "7247:301:6",
													"statements": [
														{
															"nativeSrc": "7257:26:6",
															"nodeType": "YulAssignment",
															"src": "7257:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7269:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7269:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7280:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7280:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7265:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7265:3:6"
																},
																"nativeSrc": "7265:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7265:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7257:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7257:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7337:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7350:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7350:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7361:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7361:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7346:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7346:3:6"
																		},
																		"nativeSrc": "7346:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7346:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7293:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7293:43:6"
																},
																"nativeSrc": "7293:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7293:71:6"
															},
															"nativeSrc": "7293:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7293:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7418:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7418:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7431:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7431:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7442:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7442:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7427:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7427:3:6"
																		},
																		"nativeSrc": "7427:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7427:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7374:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7374:43:6"
																},
																"nativeSrc": "7374:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7374:72:6"
															},
															"nativeSrc": "7374:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7374:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7513:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7513:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7526:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7526:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7537:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7537:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7522:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7522:3:6"
																		},
																		"nativeSrc": "7522:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7522:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_DeviceState_$616_to_t_uint8_fromStack",
																	"nativeSrc": "7456:56:6",
																	"nodeType": "YulIdentifier",
																	"src": "7456:56:6"
																},
																"nativeSrc": "7456:85:6",
																"nodeType": "YulFunctionCall",
																"src": "7456:85:6"
															},
															"nativeSrc": "7456:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "7456:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_enum$_DeviceState_$616__to_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "7080:468:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7203:9:6",
														"nodeType": "YulTypedName",
														"src": "7203:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7215:6:6",
														"nodeType": "YulTypedName",
														"src": "7215:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7223:6:6",
														"nodeType": "YulTypedName",
														"src": "7223:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7231:6:6",
														"nodeType": "YulTypedName",
														"src": "7231:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7242:4:6",
														"nodeType": "YulTypedName",
														"src": "7242:4:6",
														"type": ""
													}
												],
												"src": "7080:468:6"
											},
											{
												"body": {
													"nativeSrc": "7637:391:6",
													"nodeType": "YulBlock",
													"src": "7637:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7683:83:6",
																"nodeType": "YulBlock",
																"src": "7683:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7685:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7685:77:6"
																			},
																			"nativeSrc": "7685:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7685:79:6"
																		},
																		"nativeSrc": "7685:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7685:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7658:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7658:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7667:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7667:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7654:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7654:3:6"
																		},
																		"nativeSrc": "7654:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7654:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7679:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7679:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7650:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7650:3:6"
																},
																"nativeSrc": "7650:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7650:32:6"
															},
															"nativeSrc": "7647:119:6",
															"nodeType": "YulIf",
															"src": "7647:119:6"
														},
														{
															"nativeSrc": "7776:117:6",
															"nodeType": "YulBlock",
															"src": "7776:117:6",
															"statements": [
																{
																	"nativeSrc": "7791:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7791:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7805:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7805:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7795:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7795:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7820:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7820:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7855:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7855:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7866:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7866:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7851:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7851:3:6"
																				},
																				"nativeSrc": "7851:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7851:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7875:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7875:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7830:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7830:20:6"
																		},
																		"nativeSrc": "7830:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7830:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7820:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7820:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7903:118:6",
															"nodeType": "YulBlock",
															"src": "7903:118:6",
															"statements": [
																{
																	"nativeSrc": "7918:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7918:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7932:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7932:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7922:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7922:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7948:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7948:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7983:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7983:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7994:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7994:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7979:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7979:3:6"
																				},
																				"nativeSrc": "7979:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7979:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8003:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8003:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7958:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7958:20:6"
																		},
																		"nativeSrc": "7958:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7958:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7948:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7948:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "7554:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7599:9:6",
														"nodeType": "YulTypedName",
														"src": "7599:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7610:7:6",
														"nodeType": "YulTypedName",
														"src": "7610:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7622:6:6",
														"nodeType": "YulTypedName",
														"src": "7622:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7630:6:6",
														"nodeType": "YulTypedName",
														"src": "7630:6:6",
														"type": ""
													}
												],
												"src": "7554:474:6"
											},
											{
												"body": {
													"nativeSrc": "8117:391:6",
													"nodeType": "YulBlock",
													"src": "8117:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8163:83:6",
																"nodeType": "YulBlock",
																"src": "8163:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8165:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8165:77:6"
																			},
																			"nativeSrc": "8165:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8165:79:6"
																		},
																		"nativeSrc": "8165:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8165:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8138:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8138:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8147:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8147:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8134:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8134:3:6"
																		},
																		"nativeSrc": "8134:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8134:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8159:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8159:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8130:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8130:3:6"
																},
																"nativeSrc": "8130:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8130:32:6"
															},
															"nativeSrc": "8127:119:6",
															"nodeType": "YulIf",
															"src": "8127:119:6"
														},
														{
															"nativeSrc": "8256:117:6",
															"nodeType": "YulBlock",
															"src": "8256:117:6",
															"statements": [
																{
																	"nativeSrc": "8271:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8271:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8285:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8285:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8275:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8275:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8300:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8300:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8335:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8335:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8346:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8346:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8331:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8331:3:6"
																				},
																				"nativeSrc": "8331:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8331:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8355:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8355:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8310:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8310:20:6"
																		},
																		"nativeSrc": "8310:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8310:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8300:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8300:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8383:118:6",
															"nodeType": "YulBlock",
															"src": "8383:118:6",
															"statements": [
																{
																	"nativeSrc": "8398:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8398:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8412:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8402:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8402:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8428:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8428:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8463:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8463:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8474:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8459:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8459:3:6"
																				},
																				"nativeSrc": "8459:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8459:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8483:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8483:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8438:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8438:20:6"
																		},
																		"nativeSrc": "8438:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8438:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8428:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8428:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8034:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8079:9:6",
														"nodeType": "YulTypedName",
														"src": "8079:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8090:7:6",
														"nodeType": "YulTypedName",
														"src": "8090:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8102:6:6",
														"nodeType": "YulTypedName",
														"src": "8102:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8110:6:6",
														"nodeType": "YulTypedName",
														"src": "8110:6:6",
														"type": ""
													}
												],
												"src": "8034:474:6"
											},
											{
												"body": {
													"nativeSrc": "8787:627:6",
													"nodeType": "YulBlock",
													"src": "8787:627:6",
													"statements": [
														{
															"nativeSrc": "8797:27:6",
															"nodeType": "YulAssignment",
															"src": "8797:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8809:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8809:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8820:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8820:3:6",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8805:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8805:3:6"
																},
																"nativeSrc": "8805:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8805:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8797:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8797:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8878:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8878:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8891:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8891:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8902:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8902:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8887:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8887:3:6"
																		},
																		"nativeSrc": "8887:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8887:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8834:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8834:43:6"
																},
																"nativeSrc": "8834:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8834:71:6"
															},
															"nativeSrc": "8834:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8834:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8959:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8959:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8972:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8972:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8983:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8983:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8968:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8968:3:6"
																		},
																		"nativeSrc": "8968:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8968:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8915:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8915:43:6"
																},
																"nativeSrc": "8915:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8915:72:6"
															},
															"nativeSrc": "8915:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8915:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9054:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9054:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9067:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9067:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9078:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9078:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9063:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9063:3:6"
																		},
																		"nativeSrc": "9063:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9063:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_DeviceState_$616_to_t_uint8_fromStack",
																	"nativeSrc": "8997:56:6",
																	"nodeType": "YulIdentifier",
																	"src": "8997:56:6"
																},
																"nativeSrc": "8997:85:6",
																"nodeType": "YulFunctionCall",
																"src": "8997:85:6"
															},
															"nativeSrc": "8997:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "8997:85:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9136:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9149:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9149:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9160:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9160:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9145:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:6"
																		},
																		"nativeSrc": "9145:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9145:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9092:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9092:43:6"
																},
																"nativeSrc": "9092:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9092:72:6"
															},
															"nativeSrc": "9092:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9092:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9218:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9218:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9231:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9231:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9242:3:6",
																				"nodeType": "YulLiteral",
																				"src": "9242:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9227:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9227:3:6"
																		},
																		"nativeSrc": "9227:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9174:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9174:43:6"
																},
																"nativeSrc": "9174:73:6",
																"nodeType": "YulFunctionCall",
																"src": "9174:73:6"
															},
															"nativeSrc": "9174:73:6",
															"nodeType": "YulExpressionStatement",
															"src": "9174:73:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "9301:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9301:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9314:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9314:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9325:3:6",
																				"nodeType": "YulLiteral",
																				"src": "9325:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9310:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9310:3:6"
																		},
																		"nativeSrc": "9310:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9310:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9257:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9257:43:6"
																},
																"nativeSrc": "9257:73:6",
																"nodeType": "YulFunctionCall",
																"src": "9257:73:6"
															},
															"nativeSrc": "9257:73:6",
															"nodeType": "YulExpressionStatement",
															"src": "9257:73:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "9378:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9378:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9391:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9391:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9402:3:6",
																				"nodeType": "YulLiteral",
																				"src": "9402:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9387:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9387:3:6"
																		},
																		"nativeSrc": "9387:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9387:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9340:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "9340:37:6"
																},
																"nativeSrc": "9340:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9340:67:6"
															},
															"nativeSrc": "9340:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "9340:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_enum$_DeviceState_$616_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint8_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "8514:900:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8711:9:6",
														"nodeType": "YulTypedName",
														"src": "8711:9:6",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "8723:6:6",
														"nodeType": "YulTypedName",
														"src": "8723:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8731:6:6",
														"nodeType": "YulTypedName",
														"src": "8731:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8739:6:6",
														"nodeType": "YulTypedName",
														"src": "8739:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8747:6:6",
														"nodeType": "YulTypedName",
														"src": "8747:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8755:6:6",
														"nodeType": "YulTypedName",
														"src": "8755:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8763:6:6",
														"nodeType": "YulTypedName",
														"src": "8763:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8771:6:6",
														"nodeType": "YulTypedName",
														"src": "8771:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8782:4:6",
														"nodeType": "YulTypedName",
														"src": "8782:4:6",
														"type": ""
													}
												],
												"src": "8514:900:6"
											},
											{
												"body": {
													"nativeSrc": "9448:152:6",
													"nodeType": "YulBlock",
													"src": "9448:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9465:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9465:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9468:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9468:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9458:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9458:6:6"
																},
																"nativeSrc": "9458:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9458:88:6"
															},
															"nativeSrc": "9458:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9458:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9562:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9562:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9565:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9565:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9555:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9555:6:6"
																},
																"nativeSrc": "9555:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9555:15:6"
															},
															"nativeSrc": "9555:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9555:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9586:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9586:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9589:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9589:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9579:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9579:6:6"
																},
																"nativeSrc": "9579:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9579:15:6"
															},
															"nativeSrc": "9579:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9579:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9420:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9420:180:6"
											},
											{
												"body": {
													"nativeSrc": "9657:269:6",
													"nodeType": "YulBlock",
													"src": "9657:269:6",
													"statements": [
														{
															"nativeSrc": "9667:22:6",
															"nodeType": "YulAssignment",
															"src": "9667:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9681:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9681:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9687:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9687:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9677:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9677:3:6"
																},
																"nativeSrc": "9677:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9677:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:6"
																}
															]
														},
														{
															"nativeSrc": "9698:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9698:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9728:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9728:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9734:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9734:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9724:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9724:3:6"
																},
																"nativeSrc": "9724:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9724:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9702:18:6",
																	"nodeType": "YulTypedName",
																	"src": "9702:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9775:51:6",
																"nodeType": "YulBlock",
																"src": "9775:51:6",
																"statements": [
																	{
																		"nativeSrc": "9789:27:6",
																		"nodeType": "YulAssignment",
																		"src": "9789:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9803:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9803:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9811:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9811:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9799:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "9799:3:6"
																			},
																			"nativeSrc": "9799:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9799:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9789:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9789:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9755:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "9755:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9748:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9748:6:6"
																},
																"nativeSrc": "9748:26:6",
																"nodeType": "YulFunctionCall",
																"src": "9748:26:6"
															},
															"nativeSrc": "9745:81:6",
															"nodeType": "YulIf",
															"src": "9745:81:6"
														},
														{
															"body": {
																"nativeSrc": "9878:42:6",
																"nodeType": "YulBlock",
																"src": "9878:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9892:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9892:16:6"
																			},
																			"nativeSrc": "9892:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9892:18:6"
																		},
																		"nativeSrc": "9892:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9892:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9842:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "9842:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9865:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9873:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9873:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9862:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9862:2:6"
																		},
																		"nativeSrc": "9862:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9862:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9839:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9839:2:6"
																},
																"nativeSrc": "9839:38:6",
																"nodeType": "YulFunctionCall",
																"src": "9839:38:6"
															},
															"nativeSrc": "9836:84:6",
															"nodeType": "YulIf",
															"src": "9836:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9606:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9641:4:6",
														"nodeType": "YulTypedName",
														"src": "9641:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9650:6:6",
														"nodeType": "YulTypedName",
														"src": "9650:6:6",
														"type": ""
													}
												],
												"src": "9606:320:6"
											},
											{
												"body": {
													"nativeSrc": "9960:152:6",
													"nodeType": "YulBlock",
													"src": "9960:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9977:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9977:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9980:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9980:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9970:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:6"
																},
																"nativeSrc": "9970:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9970:88:6"
															},
															"nativeSrc": "9970:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9970:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10074:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10074:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10077:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10077:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10067:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10067:6:6"
																},
																"nativeSrc": "10067:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10067:15:6"
															},
															"nativeSrc": "10067:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10067:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10098:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10098:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10101:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10101:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10091:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10091:6:6"
																},
																"nativeSrc": "10091:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10091:15:6"
															},
															"nativeSrc": "10091:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10091:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9932:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9932:180:6"
											},
											{
												"body": {
													"nativeSrc": "10163:149:6",
													"nodeType": "YulBlock",
													"src": "10163:149:6",
													"statements": [
														{
															"nativeSrc": "10173:25:6",
															"nodeType": "YulAssignment",
															"src": "10173:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10196:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10196:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10178:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10178:17:6"
																},
																"nativeSrc": "10178:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10178:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10173:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10173:1:6"
																}
															]
														},
														{
															"nativeSrc": "10207:25:6",
															"nodeType": "YulAssignment",
															"src": "10207:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10230:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10230:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10212:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10212:17:6"
																},
																"nativeSrc": "10212:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10212:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10207:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10207:1:6"
																}
															]
														},
														{
															"nativeSrc": "10241:17:6",
															"nodeType": "YulAssignment",
															"src": "10241:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10253:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10253:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10256:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10256:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10249:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10249:3:6"
																},
																"nativeSrc": "10249:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10249:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10241:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10241:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10283:22:6",
																"nodeType": "YulBlock",
																"src": "10283:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10285:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10285:16:6"
																			},
																			"nativeSrc": "10285:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10285:18:6"
																		},
																		"nativeSrc": "10285:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10285:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10274:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10274:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10280:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10280:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10271:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10271:2:6"
																},
																"nativeSrc": "10271:11:6",
																"nodeType": "YulFunctionCall",
																"src": "10271:11:6"
															},
															"nativeSrc": "10268:37:6",
															"nodeType": "YulIf",
															"src": "10268:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10118:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10149:1:6",
														"nodeType": "YulTypedName",
														"src": "10149:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10152:1:6",
														"nodeType": "YulTypedName",
														"src": "10152:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10158:4:6",
														"nodeType": "YulTypedName",
														"src": "10158:4:6",
														"type": ""
													}
												],
												"src": "10118:194:6"
											},
											{
												"body": {
													"nativeSrc": "10362:147:6",
													"nodeType": "YulBlock",
													"src": "10362:147:6",
													"statements": [
														{
															"nativeSrc": "10372:25:6",
															"nodeType": "YulAssignment",
															"src": "10372:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10395:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10395:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10377:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10377:17:6"
																},
																"nativeSrc": "10377:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10377:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10372:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10372:1:6"
																}
															]
														},
														{
															"nativeSrc": "10406:25:6",
															"nodeType": "YulAssignment",
															"src": "10406:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10429:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10429:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10411:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10411:17:6"
																},
																"nativeSrc": "10411:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10411:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10406:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10406:1:6"
																}
															]
														},
														{
															"nativeSrc": "10440:16:6",
															"nodeType": "YulAssignment",
															"src": "10440:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10451:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10451:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10454:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10454:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10447:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10447:3:6"
																},
																"nativeSrc": "10447:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10447:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10440:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10440:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10480:22:6",
																"nodeType": "YulBlock",
																"src": "10480:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10482:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10482:16:6"
																			},
																			"nativeSrc": "10482:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10482:18:6"
																		},
																		"nativeSrc": "10482:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10482:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10472:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10472:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10475:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10475:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10469:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10469:2:6"
																},
																"nativeSrc": "10469:10:6",
																"nodeType": "YulFunctionCall",
																"src": "10469:10:6"
															},
															"nativeSrc": "10466:36:6",
															"nodeType": "YulIf",
															"src": "10466:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10318:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10349:1:6",
														"nodeType": "YulTypedName",
														"src": "10349:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10352:1:6",
														"nodeType": "YulTypedName",
														"src": "10352:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10358:3:6",
														"nodeType": "YulTypedName",
														"src": "10358:3:6",
														"type": ""
													}
												],
												"src": "10318:191:6"
											},
											{
												"body": {
													"nativeSrc": "10558:190:6",
													"nodeType": "YulBlock",
													"src": "10558:190:6",
													"statements": [
														{
															"nativeSrc": "10568:33:6",
															"nodeType": "YulAssignment",
															"src": "10568:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10595:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10595:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10577:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10577:17:6"
																},
																"nativeSrc": "10577:24:6",
																"nodeType": "YulFunctionCall",
																"src": "10577:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10568:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10568:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10691:22:6",
																"nodeType": "YulBlock",
																"src": "10691:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10693:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10693:16:6"
																			},
																			"nativeSrc": "10693:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10693:18:6"
																		},
																		"nativeSrc": "10693:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10693:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10616:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10616:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10623:66:6",
																		"nodeType": "YulLiteral",
																		"src": "10623:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10613:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10613:2:6"
																},
																"nativeSrc": "10613:77:6",
																"nodeType": "YulFunctionCall",
																"src": "10613:77:6"
															},
															"nativeSrc": "10610:103:6",
															"nodeType": "YulIf",
															"src": "10610:103:6"
														},
														{
															"nativeSrc": "10722:20:6",
															"nodeType": "YulAssignment",
															"src": "10722:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10733:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10733:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10740:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10729:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10729:3:6"
																},
																"nativeSrc": "10729:13:6",
																"nodeType": "YulFunctionCall",
																"src": "10729:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10722:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10722:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10515:233:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10544:5:6",
														"nodeType": "YulTypedName",
														"src": "10544:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10554:3:6",
														"nodeType": "YulTypedName",
														"src": "10554:3:6",
														"type": ""
													}
												],
												"src": "10515:233:6"
											},
											{
												"body": {
													"nativeSrc": "10860:65:6",
													"nodeType": "YulBlock",
													"src": "10860:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10882:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10882:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10890:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10890:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10878:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10878:3:6"
																		},
																		"nativeSrc": "10878:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10878:14:6"
																	},
																	{
																		"hexValue": "446576696365206e6f742072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "10894:23:6",
																		"nodeType": "YulLiteral",
																		"src": "10894:23:6",
																		"type": "",
																		"value": "Device not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10871:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10871:6:6"
																},
																"nativeSrc": "10871:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10871:47:6"
															},
															"nativeSrc": "10871:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10871:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66",
												"nativeSrc": "10754:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10852:6:6",
														"nodeType": "YulTypedName",
														"src": "10852:6:6",
														"type": ""
													}
												],
												"src": "10754:171:6"
											},
											{
												"body": {
													"nativeSrc": "11077:220:6",
													"nodeType": "YulBlock",
													"src": "11077:220:6",
													"statements": [
														{
															"nativeSrc": "11087:74:6",
															"nodeType": "YulAssignment",
															"src": "11087:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11153:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11153:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11158:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11158:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11094:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11094:58:6"
																},
																"nativeSrc": "11094:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11094:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11087:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11087:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11259:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11259:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66",
																	"nativeSrc": "11170:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11170:88:6"
																},
																"nativeSrc": "11170:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11170:93:6"
															},
															"nativeSrc": "11170:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11170:93:6"
														},
														{
															"nativeSrc": "11272:19:6",
															"nodeType": "YulAssignment",
															"src": "11272:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11283:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11283:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11288:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11288:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11279:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11279:3:6"
																},
																"nativeSrc": "11279:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11279:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11272:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10931:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11065:3:6",
														"nodeType": "YulTypedName",
														"src": "11065:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11073:3:6",
														"nodeType": "YulTypedName",
														"src": "11073:3:6",
														"type": ""
													}
												],
												"src": "10931:366:6"
											},
											{
												"body": {
													"nativeSrc": "11474:248:6",
													"nodeType": "YulBlock",
													"src": "11474:248:6",
													"statements": [
														{
															"nativeSrc": "11484:26:6",
															"nodeType": "YulAssignment",
															"src": "11484:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11496:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11496:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11507:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11507:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11492:3:6"
																},
																"nativeSrc": "11492:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11492:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11484:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11484:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11531:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11531:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11542:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11542:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11527:3:6"
																		},
																		"nativeSrc": "11527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11527:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11550:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11550:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11556:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11556:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11546:3:6"
																		},
																		"nativeSrc": "11546:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11546:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11520:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11520:6:6"
																},
																"nativeSrc": "11520:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11520:47:6"
															},
															"nativeSrc": "11520:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11520:47:6"
														},
														{
															"nativeSrc": "11576:139:6",
															"nodeType": "YulAssignment",
															"src": "11576:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11710:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11710:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11584:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11584:124:6"
																},
																"nativeSrc": "11584:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11584:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11576:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11576:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11303:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11454:9:6",
														"nodeType": "YulTypedName",
														"src": "11454:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11469:4:6",
														"nodeType": "YulTypedName",
														"src": "11469:4:6",
														"type": ""
													}
												],
												"src": "11303:419:6"
											},
											{
												"body": {
													"nativeSrc": "11834:114:6",
													"nodeType": "YulBlock",
													"src": "11834:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11856:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11856:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11864:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11864:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11852:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11852:3:6"
																		},
																		"nativeSrc": "11852:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11852:14:6"
																	},
																	{
																		"hexValue": "7468652064657669636520436f6e7472616374206973206e6f74206163746976",
																		"kind": "string",
																		"nativeSrc": "11868:34:6",
																		"nodeType": "YulLiteral",
																		"src": "11868:34:6",
																		"type": "",
																		"value": "the device Contract is not activ"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11845:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11845:6:6"
																},
																"nativeSrc": "11845:58:6",
																"nodeType": "YulFunctionCall",
																"src": "11845:58:6"
															},
															"nativeSrc": "11845:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "11845:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11924:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11924:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11932:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11932:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11920:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11920:3:6"
																		},
																		"nativeSrc": "11920:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11920:15:6"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nativeSrc": "11937:3:6",
																		"nodeType": "YulLiteral",
																		"src": "11937:3:6",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11913:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11913:6:6"
																},
																"nativeSrc": "11913:28:6",
																"nodeType": "YulFunctionCall",
																"src": "11913:28:6"
															},
															"nativeSrc": "11913:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "11913:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc",
												"nativeSrc": "11728:220:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11826:6:6",
														"nodeType": "YulTypedName",
														"src": "11826:6:6",
														"type": ""
													}
												],
												"src": "11728:220:6"
											},
											{
												"body": {
													"nativeSrc": "12100:220:6",
													"nodeType": "YulBlock",
													"src": "12100:220:6",
													"statements": [
														{
															"nativeSrc": "12110:74:6",
															"nodeType": "YulAssignment",
															"src": "12110:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12176:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12176:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12181:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12181:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12117:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12117:58:6"
																},
																"nativeSrc": "12117:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12117:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12110:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12110:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12282:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12282:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc",
																	"nativeSrc": "12193:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12193:88:6"
																},
																"nativeSrc": "12193:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12193:93:6"
															},
															"nativeSrc": "12193:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12193:93:6"
														},
														{
															"nativeSrc": "12295:19:6",
															"nodeType": "YulAssignment",
															"src": "12295:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12306:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12306:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12311:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12311:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12302:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12302:3:6"
																},
																"nativeSrc": "12302:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12302:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12295:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12295:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11954:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12088:3:6",
														"nodeType": "YulTypedName",
														"src": "12088:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12096:3:6",
														"nodeType": "YulTypedName",
														"src": "12096:3:6",
														"type": ""
													}
												],
												"src": "11954:366:6"
											},
											{
												"body": {
													"nativeSrc": "12497:248:6",
													"nodeType": "YulBlock",
													"src": "12497:248:6",
													"statements": [
														{
															"nativeSrc": "12507:26:6",
															"nodeType": "YulAssignment",
															"src": "12507:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12519:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12519:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12530:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12530:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12515:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12515:3:6"
																},
																"nativeSrc": "12515:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12515:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12507:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12507:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12554:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12554:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12565:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12565:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12550:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12550:3:6"
																		},
																		"nativeSrc": "12550:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12550:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12573:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12573:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12579:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12579:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12569:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12569:3:6"
																		},
																		"nativeSrc": "12569:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12569:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12543:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12543:6:6"
																},
																"nativeSrc": "12543:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12543:47:6"
															},
															"nativeSrc": "12543:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12543:47:6"
														},
														{
															"nativeSrc": "12599:139:6",
															"nodeType": "YulAssignment",
															"src": "12599:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12733:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12733:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12607:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12607:124:6"
																},
																"nativeSrc": "12607:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12607:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12599:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12599:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12326:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12477:9:6",
														"nodeType": "YulTypedName",
														"src": "12477:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12492:4:6",
														"nodeType": "YulTypedName",
														"src": "12492:4:6",
														"type": ""
													}
												],
												"src": "12326:419:6"
											},
											{
												"body": {
													"nativeSrc": "12857:72:6",
													"nodeType": "YulBlock",
													"src": "12857:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12879:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12879:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12887:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12887:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12875:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:6"
																		},
																		"nativeSrc": "12875:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12875:14:6"
																	},
																	{
																		"hexValue": "436f6e747261637420686173206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "12891:30:6",
																		"nodeType": "YulLiteral",
																		"src": "12891:30:6",
																		"type": "",
																		"value": "Contract has not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12868:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12868:6:6"
																},
																"nativeSrc": "12868:54:6",
																"nodeType": "YulFunctionCall",
																"src": "12868:54:6"
															},
															"nativeSrc": "12868:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "12868:54:6"
														}
													]
												},
												"name": "store_literal_in_memory_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b",
												"nativeSrc": "12751:178:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12849:6:6",
														"nodeType": "YulTypedName",
														"src": "12849:6:6",
														"type": ""
													}
												],
												"src": "12751:178:6"
											},
											{
												"body": {
													"nativeSrc": "13081:220:6",
													"nodeType": "YulBlock",
													"src": "13081:220:6",
													"statements": [
														{
															"nativeSrc": "13091:74:6",
															"nodeType": "YulAssignment",
															"src": "13091:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13157:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13157:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13162:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13162:2:6",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13098:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13098:58:6"
																},
																"nativeSrc": "13098:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13098:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13091:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13091:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13263:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13263:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b",
																	"nativeSrc": "13174:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13174:88:6"
																},
																"nativeSrc": "13174:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13174:93:6"
															},
															"nativeSrc": "13174:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13174:93:6"
														},
														{
															"nativeSrc": "13276:19:6",
															"nodeType": "YulAssignment",
															"src": "13276:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13287:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13287:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13292:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13292:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13283:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13283:3:6"
																},
																"nativeSrc": "13283:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13283:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13276:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13276:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12935:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13069:3:6",
														"nodeType": "YulTypedName",
														"src": "13069:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13077:3:6",
														"nodeType": "YulTypedName",
														"src": "13077:3:6",
														"type": ""
													}
												],
												"src": "12935:366:6"
											},
											{
												"body": {
													"nativeSrc": "13478:248:6",
													"nodeType": "YulBlock",
													"src": "13478:248:6",
													"statements": [
														{
															"nativeSrc": "13488:26:6",
															"nodeType": "YulAssignment",
															"src": "13488:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13500:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13500:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13511:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13511:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13496:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13496:3:6"
																},
																"nativeSrc": "13496:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13496:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13488:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13488:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13535:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13535:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13546:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13546:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13531:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13531:3:6"
																		},
																		"nativeSrc": "13531:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13531:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13554:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13554:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13560:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13560:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13550:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13550:3:6"
																		},
																		"nativeSrc": "13550:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13550:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13524:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13524:6:6"
																},
																"nativeSrc": "13524:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13524:47:6"
															},
															"nativeSrc": "13524:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13524:47:6"
														},
														{
															"nativeSrc": "13580:139:6",
															"nodeType": "YulAssignment",
															"src": "13580:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13714:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13714:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13588:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13588:124:6"
																},
																"nativeSrc": "13588:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13588:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13580:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13580:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13307:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13458:9:6",
														"nodeType": "YulTypedName",
														"src": "13458:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13473:4:6",
														"nodeType": "YulTypedName",
														"src": "13473:4:6",
														"type": ""
													}
												],
												"src": "13307:419:6"
											},
											{
												"body": {
													"nativeSrc": "13886:288:6",
													"nodeType": "YulBlock",
													"src": "13886:288:6",
													"statements": [
														{
															"nativeSrc": "13896:26:6",
															"nodeType": "YulAssignment",
															"src": "13896:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13908:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13908:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13919:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13919:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13904:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13904:3:6"
																},
																"nativeSrc": "13904:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13904:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13896:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13896:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13976:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13976:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13989:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13989:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14000:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14000:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13985:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13985:3:6"
																		},
																		"nativeSrc": "13985:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13985:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13932:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13932:43:6"
																},
																"nativeSrc": "13932:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13932:71:6"
															},
															"nativeSrc": "13932:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13932:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14057:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14057:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14070:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14070:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14081:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14081:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14066:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14066:3:6"
																		},
																		"nativeSrc": "14066:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14066:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14013:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14013:43:6"
																},
																"nativeSrc": "14013:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14013:72:6"
															},
															"nativeSrc": "14013:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14013:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14139:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14139:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14152:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14152:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14163:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14163:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14148:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14148:3:6"
																		},
																		"nativeSrc": "14148:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14148:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14095:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14095:43:6"
																},
																"nativeSrc": "14095:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14095:72:6"
															},
															"nativeSrc": "14095:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14095:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13732:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13842:9:6",
														"nodeType": "YulTypedName",
														"src": "13842:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13854:6:6",
														"nodeType": "YulTypedName",
														"src": "13854:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13862:6:6",
														"nodeType": "YulTypedName",
														"src": "13862:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13870:6:6",
														"nodeType": "YulTypedName",
														"src": "13870:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13881:4:6",
														"nodeType": "YulTypedName",
														"src": "13881:4:6",
														"type": ""
													}
												],
												"src": "13732:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_DeviceState_$616(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_DeviceState_$616(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_DeviceState_$616(value)\n    }\n\n    function convert_t_enum$_DeviceState_$616_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_DeviceState_$616(value)\n    }\n\n    function abi_encode_t_enum$_DeviceState_$616_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_DeviceState_$616_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_enum$_DeviceState_$616__to_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_DeviceState_$616_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_enum$_DeviceState_$616_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint8_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_DeviceState_$616_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66(memPtr) {\n\n        mstore(add(memPtr, 0), \"Device not registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc(memPtr) {\n\n        mstore(add(memPtr, 0), \"the device Contract is not activ\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract has not started yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610140575f3560e01c806370a08231116100b65780639af8a5eb1161007a5780639af8a5eb1461036c578063a9059cbb1461038a578063b620b8cb146103ba578063dd62ed3e146103d6578063e7b4cac614610406578063f7b2a7be1461043c57610140565b806370a08231146102c257806378e97925146102f25780638da5cb5b146103105780638ea286c21461032e57806395d89b411461034e57610140565b8063313ce56711610108578063313ce567146101fe5780633197cbb61461021c5780634fd7d76a1461023a578063563a6c7a14610258578063589af69c1461028857806363a411c0146102a657610140565b806306fdde0314610144578063095ea7b31461016257806318160ddd14610192578063217f4353146101b057806323b872dd146101ce575b5f80fd5b61014c61045a565b60405161015991906115ff565b60405180910390f35b61017c600480360381019061017791906116b0565b6104ea565b6040516101899190611708565b60405180910390f35b61019a61050c565b6040516101a79190611730565b60405180910390f35b6101b8610515565b6040516101c59190611730565b60405180910390f35b6101e860048036038101906101e39190611749565b61051b565b6040516101f59190611708565b60405180910390f35b610206610549565b60405161021391906117b4565b60405180910390f35b610224610551565b6040516102319190611730565b60405180910390f35b610242610557565b60405161024f9190611730565b60405180910390f35b610272600480360381019061026d91906117cd565b61055d565b60405161027f9190611730565b60405180910390f35b61029061058a565b60405161029d9190611730565b60405180910390f35b6102c060048036038101906102bb9190611831565b610590565b005b6102dc60048036038101906102d79190611831565b61075b565b6040516102e99190611730565b60405180910390f35b6102fa6107a0565b6040516103079190611730565b60405180910390f35b6103186107a6565b604051610325919061186b565b60405180910390f35b6103366107cb565b604051610345939291906118f7565b60405180910390f35b6103566109d2565b60405161036391906115ff565b60405180910390f35b610374610a62565b6040516103819190611730565b60405180910390f35b6103a4600480360381019061039f91906116b0565b610a68565b6040516103b19190611708565b60405180910390f35b6103d460048036038101906103cf919061192c565b610a8a565b005b6103f060048036038101906103eb919061196a565b610ed1565b6040516103fd9190611730565b60405180910390f35b610420600480360381019061041b9190611831565b610f53565b60405161043397969594939291906119a8565b60405180910390f35b610444610fc9565b6040516104519190611730565b60405180910390f35b60606003805461046990611a42565b80601f016020809104026020016040519081016040528092919081815260200182805461049590611a42565b80156104e05780601f106104b7576101008083540402835291602001916104e0565b820191905f5260205f20905b8154815290600101906020018083116104c357829003601f168201915b5050505050905090565b5f806104f4610fcf565b9050610501818585610fd6565b600191505092915050565b5f600254905090565b60085481565b5f80610525610fcf565b9050610532858285610fe8565b61053d85858561107a565b60019150509392505050565b5f6012905090565b600a5481565b60065481565b5f818461056a9190611a9f565b83866105769190611a9f565b6105809190611ad2565b9050949350505050565b60075481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e8575f80fd5b600d5f8154809291906105fa90611b05565b91905055506040518060e001604052805f81526020015f81526020015f600381111561062957610628611884565b5b81526020018273ffffffffffffffffffffffffffffffffffffffff1681526020014281526020015f815260200160011515815250600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548160ff021916908360038111156106d6576106d5611884565b5b021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a0820151816004015560c0820151816005015f6101000a81548160ff02191690831515021790555090505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8073ffffffffffffffffffffffffffffffffffffffff16600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361089c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089390611b96565b60405180910390fd5b5f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060e00160405290815f820154815260200160018201548152602001600282015f9054906101000a900460ff16600381111561091c5761091b611884565b5b600381111561092e5761092d611884565b5b81526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015f9054906101000a900460ff1615151515815250509050805f01518160200151826040015193509350935050909192565b6060600480546109e190611a42565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0d90611a42565b8015610a585780601f10610a2f57610100808354040283529160200191610a58565b820191905f5260205f20905b815481529060010190602001808311610a3b57829003601f168201915b5050505050905090565b600d5481565b5f80610a72610fcf565b9050610a7f81858561107a565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff16600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f90611b96565b60405180910390fd5b600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206005015f9054906101000a900460ff16610be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdb90611c24565b60405180910390fd5b600954421015610c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2090611c8c565b60405180910390fd5b600a54421115610d3e575f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206005015f6101000a81548160ff021916908315150217905550600b54600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600401819055506003600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015f6101000a81548160ff02191690836003811115610d3457610d33611884565b5b0217905550610ecd565b610d48828261116a565b15610e0e57600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f815480929190610d9c90611b05565b91905055506001600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015f6101000a81548160ff02191690836003811115610e0457610e03611884565b5b0217905550610ecc565b600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f815480929190610e5e90611b05565b91905055506002600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002015f6101000a81548160ff02191690836003811115610ec657610ec5611884565b5b02179055505b5b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600c602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015490806005015f9054906101000a900460ff16905087565b600b5481565b5f33905090565b610fe3838383600161118d565b505050565b5f610ff38484610ed1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110745781811015611065578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161105c93929190611caa565b60405180910390fd5b61107384848484035f61118d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110ea575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110e1919061186b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361115a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611151919061186b565b60405180910390fd5b61116583838361135c565b505050565b5f8061117c600654600754868661055d565b905060085481111591505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111fd575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111f4919061186b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361126d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611264919061186b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611356578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161134d9190611730565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113ac578060025f8282546113a09190611ad2565b9250508190555061147a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611435578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161142c93929190611caa565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114c1578060025f828254039250508190555061150b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115689190611730565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156115ac578082015181840152602081019050611591565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6115d182611575565b6115db818561157f565b93506115eb81856020860161158f565b6115f4816115b7565b840191505092915050565b5f6020820190508181035f83015261161781846115c7565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61164c82611623565b9050919050565b61165c81611642565b8114611666575f80fd5b50565b5f8135905061167781611653565b92915050565b5f819050919050565b61168f8161167d565b8114611699575f80fd5b50565b5f813590506116aa81611686565b92915050565b5f80604083850312156116c6576116c561161f565b5b5f6116d385828601611669565b92505060206116e48582860161169c565b9150509250929050565b5f8115159050919050565b611702816116ee565b82525050565b5f60208201905061171b5f8301846116f9565b92915050565b61172a8161167d565b82525050565b5f6020820190506117435f830184611721565b92915050565b5f805f606084860312156117605761175f61161f565b5b5f61176d86828701611669565b935050602061177e86828701611669565b925050604061178f8682870161169c565b9150509250925092565b5f60ff82169050919050565b6117ae81611799565b82525050565b5f6020820190506117c75f8301846117a5565b92915050565b5f805f80608085870312156117e5576117e461161f565b5b5f6117f28782880161169c565b94505060206118038782880161169c565b93505060406118148782880161169c565b92505060606118258782880161169c565b91505092959194509250565b5f602082840312156118465761184561161f565b5b5f61185384828501611669565b91505092915050565b61186581611642565b82525050565b5f60208201905061187e5f83018461185c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600481106118c2576118c1611884565b5b50565b5f8190506118d2826118b1565b919050565b5f6118e1826118c5565b9050919050565b6118f1816118d7565b82525050565b5f60608201905061190a5f830186611721565b6119176020830185611721565b61192460408301846118e8565b949350505050565b5f80604083850312156119425761194161161f565b5b5f61194f8582860161169c565b92505060206119608582860161169c565b9150509250929050565b5f80604083850312156119805761197f61161f565b5b5f61198d85828601611669565b925050602061199e85828601611669565b9150509250929050565b5f60e0820190506119bb5f83018a611721565b6119c86020830189611721565b6119d560408301886118e8565b6119e2606083018761185c565b6119ef6080830186611721565b6119fc60a0830185611721565b611a0960c08301846116f9565b98975050505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a5957607f821691505b602082108103611a6c57611a6b611a15565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611aa98261167d565b9150611ab48361167d565b9250828203905081811115611acc57611acb611a72565b5b92915050565b5f611adc8261167d565b9150611ae78361167d565b9250828201905080821115611aff57611afe611a72565b5b92915050565b5f611b0f8261167d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b4157611b40611a72565b5b600182019050919050565b7f446576696365206e6f74207265676973746572656400000000000000000000005f82015250565b5f611b8060158361157f565b9150611b8b82611b4c565b602082019050919050565b5f6020820190508181035f830152611bad81611b74565b9050919050565b7f7468652064657669636520436f6e7472616374206973206e6f742061637469765f8201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b5f611c0e60218361157f565b9150611c1982611bb4565b604082019050919050565b5f6020820190508181035f830152611c3b81611c02565b9050919050565b7f436f6e747261637420686173206e6f74207374617274656420796574000000005f82015250565b5f611c76601c8361157f565b9150611c8182611c42565b602082019050919050565b5f6020820190508181035f830152611ca381611c6a565b9050919050565b5f606082019050611cbd5f83018661185c565b611cca6020830185611721565b611cd76040830184611721565b94935050505056fea2646970667358221220ffddef9cbd7a3cbffb3180d31ecf8eccf12b1b0ecf2009b2d18b1cee57ba19fa64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9AF8A5EB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x9AF8A5EB EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xB620B8CB EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xE7B4CAC6 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x43C JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x8EA286C2 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x4FD7D76A EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x563A6C7A EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x589AF69C EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x63A411C0 EQ PUSH2 0x2A6 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x217F4353 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x16B0 JUMP JUMPDEST PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x451 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x495 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4F4 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH2 0x501 DUP2 DUP6 DUP6 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x525 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH2 0x532 DUP6 DUP3 DUP6 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x53D DUP6 DUP6 DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 DUP5 PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST DUP4 DUP7 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5FA SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x629 JUMPI PUSH2 0x628 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x893 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x1884 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x92E JUMPI PUSH2 0x92D PUSH2 0x1884 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9E1 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA0D SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA58 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA58 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA3B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA72 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH2 0xA7F DUP2 DUP6 DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4F SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDB SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC20 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD TIMESTAMP GT ISZERO PUSH2 0xD3E JUMPI PUSH0 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD33 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xECD JUMP JUMPDEST PUSH2 0xD48 DUP3 DUP3 PUSH2 0x116A JUMP JUMPDEST ISZERO PUSH2 0xE0E JUMPI PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD9C SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE04 JUMPI PUSH2 0xE03 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xECC JUMP JUMPDEST PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE5E SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEC6 JUMPI PUSH2 0xEC5 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFE3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFF3 DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1074 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1065 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1073 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x118D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x115A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1165 DUP4 DUP4 DUP4 PUSH2 0x135C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x117C PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP7 DUP7 PUSH2 0x55D JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 GT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP2 SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1356 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13AC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x147A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x150B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15AC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1591 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15D1 DUP3 PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x15DB DUP2 DUP6 PUSH2 0x157F JUMP JUMPDEST SWAP4 POP PUSH2 0x15EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x158F JUMP JUMPDEST PUSH2 0x15F4 DUP2 PUSH2 0x15B7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1617 DUP2 DUP5 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x164C DUP3 PUSH2 0x1623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165C DUP2 PUSH2 0x1642 JUMP JUMPDEST DUP2 EQ PUSH2 0x1666 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1677 DUP2 PUSH2 0x1653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168F DUP2 PUSH2 0x167D JUMP JUMPDEST DUP2 EQ PUSH2 0x1699 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16AA DUP2 PUSH2 0x1686 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C6 JUMPI PUSH2 0x16C5 PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16E4 DUP6 DUP3 DUP7 ADD PUSH2 0x169C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1702 DUP2 PUSH2 0x16EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172A DUP2 PUSH2 0x167D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1743 PUSH0 DUP4 ADD DUP5 PUSH2 0x1721 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1760 JUMPI PUSH2 0x175F PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176D DUP7 DUP3 DUP8 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x177E DUP7 DUP3 DUP8 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x178F DUP7 DUP3 DUP8 ADD PUSH2 0x169C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AE DUP2 PUSH2 0x1799 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17E5 JUMPI PUSH2 0x17E4 PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F2 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1803 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1814 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1825 DUP8 DUP3 DUP9 ADD PUSH2 0x169C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1846 JUMPI PUSH2 0x1845 PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1853 DUP5 DUP3 DUP6 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1865 DUP2 PUSH2 0x1642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x187E PUSH0 DUP4 ADD DUP5 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x18C2 JUMPI PUSH2 0x18C1 PUSH2 0x1884 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x18D2 DUP3 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18E1 DUP3 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F1 DUP2 PUSH2 0x18D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x190A PUSH0 DUP4 ADD DUP7 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1917 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1924 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18E8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1942 JUMPI PUSH2 0x1941 PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194F DUP6 DUP3 DUP7 ADD PUSH2 0x169C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1960 DUP6 DUP3 DUP7 ADD PUSH2 0x169C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x161F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198D DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199E DUP6 DUP3 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x19BB PUSH0 DUP4 ADD DUP11 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x19C8 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x19D5 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x19E2 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x19EF PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x19FC PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1A09 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A59 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A6C JUMPI PUSH2 0x1A6B PUSH2 0x1A15 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AA9 DUP3 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB4 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1ACC JUMPI PUSH2 0x1ACB PUSH2 0x1A72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ADC DUP3 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE7 DUP4 PUSH2 0x167D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x1A72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B0F DUP3 PUSH2 0x167D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x1A72 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446576696365206E6F7420726567697374657265640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B80 PUSH1 0x15 DUP4 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8B DUP3 PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BAD DUP2 PUSH2 0x1B74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468652064657669636520436F6E7472616374206973206E6F74206163746976 PUSH0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0E PUSH1 0x21 DUP4 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP3 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C3B DUP2 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747261637420686173206E6F7420737461727465642079657400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C76 PUSH1 0x1C DUP4 PUSH2 0x157F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C81 DUP3 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA3 DUP2 PUSH2 0x1C6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CBD PUSH0 DUP4 ADD DUP7 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x1CCA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1CD7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1721 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xDD 0xEF SWAP13 0xBD PUSH27 0x3CBFFB3180D31ECF8ECCF12B1B0ECF2009B2D18B1CEE57BA19FA64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "81:3242:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:89:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4296:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3147:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;195:18:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5042:244:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3005:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;246:19:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;142:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2592:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;168:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1184:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3302:116:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;219:21:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;116:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2955:365;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2279:93:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;648:23:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3613:178:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1397:888:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3849:140:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;601:41:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;271:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2077:89:0;2122:13;2154:5;2147:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:89;:::o;4296:186::-;4369:4;4385:13;4401:12;:10;:12::i;:::-;4385:28;;4423:31;4432:5;4439:7;4448:5;4423:8;:31::i;:::-;4471:4;4464:11;;;4296:186;;;;:::o;3147:97::-;3199:7;3225:12;;3218:19;;3147:97;:::o;195:18:2:-;;;;:::o;5042:244:0:-;5129:4;5145:15;5163:12;:10;:12::i;:::-;5145:30;;5185:37;5201:4;5207:7;5216:5;5185:15;:37::i;:::-;5232:26;5242:4;5248:2;5252:5;5232:9;:26::i;:::-;5275:4;5268:11;;;5042:244;;;;;:::o;3005:82::-;3054:5;3078:2;3071:9;;3005:82;:::o;246:19:2:-;;;;:::o;142:20::-;;;;:::o;2592:152::-;2685:4;2732;2725;:11;;;;:::i;:::-;2716:4;2709;:11;;;;:::i;:::-;2708:29;;;;:::i;:::-;2701:36;;2592:152;;;;;;:::o;168:21::-;;;;:::o;1184:207::-;736:5;;;;;;;;;;;722:19;;:10;:19;;;714:28;;;;;;1257:11:::1;;:14;;;;;;;;;:::i;:::-;;;;;;1308:76;;;;;;;;1315:1;1308:76;;;;1318:1;1308:76;;;;1321:19;1308:76;;;;;;;;:::i;:::-;;;;;;1342:15;1308:76;;;;;;1359:15;1308:76;;;;1376:1;1308:76;;;;1379:4;1308:76;;;;::::0;1281:7:::1;:24;1289:15;1281:24;;;;;;;;;;;;;;;:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1184:207:::0;:::o;3302:116:0:-;3367:7;3393:9;:18;3403:7;3393:18;;;;;;;;;;;;;;;;3386:25;;3302:116;;;:::o;219:21:2:-;;;;:::o;116:20::-;;;;;;;;;;;;;:::o;2955:365::-;2997:20;3019:23;3044;3133:1;3087:48;;:7;:19;3095:10;3087:19;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;3079:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3171:23;3197:7;:19;3205:10;3197:19;;;;;;;;;;;;;;;3171:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3234:9;:25;;;3261:9;:28;;;3291:9;:21;;;3226:87;;;;;;;2955:365;;;:::o;2279:93:0:-;2326:13;2358:7;2351:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:93;:::o;648:23:2:-;;;;:::o;3613:178:0:-;3682:4;3698:13;3714:12;:10;:12::i;:::-;3698:28;;3736:27;3746:5;3753:2;3757:5;3736:9;:27::i;:::-;3780:4;3773:11;;;3613:178;;;;:::o;1397:888:2:-;1515:1;1469:48;;:7;:19;1477:10;1469:19;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;1461:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1557:7;:19;1565:10;1557:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1549:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1656:9;;1638:15;:27;1634:351;;;1677:38;;;;;;;;;;:::i;:::-;;;;;;;;1634:351;1750:7;;1732:15;:25;1728:257;;;1801:5;1770:7;:19;1778:10;1770:19;;;;;;;;;;;;;;;:28;;;:36;;;;;;;;;;;;;;;;;;1885:12;;1851:7;:19;1859:10;1851:19;;;;;;;;;;;;;;;:31;;:46;;;;1941:21;1907:7;:19;1915:10;1907:19;;;;;;;;;;;;;;;:31;;;:55;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1972:7;;1728:257;1999:36;2013:9;2024:10;1999:13;:36::i;:::-;1995:284;;;2047:7;:19;2055:10;2047:19;;;;;;;;;;;;;;;:35;;;:37;;;;;;;;;:::i;:::-;;;;;;2128:18;2094:7;:19;2102:10;2094:19;;;;;;;;;;;;;;;:31;;;:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1995:284;;;2169:7;:19;2177:10;2169:19;;;;;;;;;;;;;;;:38;;;:40;;;;;;;;;:::i;:::-;;;;;;2253:19;2219:7;:19;2227:10;2219:19;;;;;;;;;;;;;;;:31;;;:53;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1995:284;1397:888;;;:::o;3849:140:0:-;3929:7;3955:11;:18;3967:5;3955:18;;;;;;;;;;;;;;;:27;3974:7;3955:27;;;;;;;;;;;;;;;;3948:34;;3849:140;;;;:::o;601:41:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;271:24::-;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8992:128:0:-;9076:37;9085:5;9092:7;9101:5;9108:4;9076:8;:37::i;:::-;8992:128;;;:::o;10666:477::-;10765:24;10792:25;10802:5;10809:7;10792:9;:25::i;:::-;10765:52;;10851:17;10831:16;:37;10827:310;;10907:5;10888:16;:24;10884:130;;;10966:7;10975:16;10993:5;10939:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10884:130;11055:57;11064:5;11071:7;11099:5;11080:16;:24;11106:5;11055:8;:57::i;:::-;10827:310;10755:388;10666:477;;;:::o;5659:300::-;5758:1;5742:18;;:4;:18;;;5738:86;;5810:1;5783:30;;;;;;;;;;;:::i;:::-;;;;;;;;5738:86;5851:1;5837:16;;:2;:16;;;5833:86;;5905:1;5876:32;;;;;;;;;;;:::i;:::-;;;;;;;;5833:86;5928:24;5936:4;5942:2;5946:5;5928:7;:24::i;:::-;5659:300;;;:::o;2291:295:2:-;2369:4;2466:13;2482:62;2501:8;;2511:9;;2522;2533:10;2482:18;:62::i;:::-;2466:78;;2573:6;;2561:8;:18;;2554:25;;;2291:295;;;;:::o;9952:432:0:-;10081:1;10064:19;;:5;:19;;;10060:89;;10135:1;10106:32;;;;;;;;;;;:::i;:::-;;;;;;;;10060:89;10181:1;10162:21;;:7;:21;;;10158:90;;10234:1;10206:31;;;;;;;;;;;:::i;:::-;;;;;;;;10158:90;10287:5;10257:11;:18;10269:5;10257:18;;;;;;;;;;;;;;;:27;10276:7;10257:27;;;;;;;;;;;;;;;:35;;;;10306:9;10302:76;;;10352:7;10336:31;;10345:5;10336:31;;;10361:5;10336:31;;;;;;:::i;:::-;;;;;;;;10302:76;9952:432;;;;:::o;6274:1107::-;6379:1;6363:18;;:4;:18;;;6359:540;;6515:5;6499:12;;:21;;;;;;;:::i;:::-;;;;;;;;6359:540;;;6551:19;6573:9;:15;6583:4;6573:15;;;;;;;;;;;;;;;;6551:37;;6620:5;6606:11;:19;6602:115;;;6677:4;6683:11;6696:5;6652:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6602:115;6869:5;6855:11;:19;6837:9;:15;6847:4;6837:15;;;;;;;;;;;;;;;:37;;;;6537:362;6359:540;6927:1;6913:16;;:2;:16;;;6909:425;;7092:5;7076:12;;:21;;;;;;;;;;;6909:425;;;7304:5;7287:9;:13;7297:2;7287:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6909:425;7364:2;7349:25;;7358:4;7349:25;;;7368:5;7349:25;;;;;;:::i;:::-;;;;;;;;6274:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:765::-;4939:6;4947;4955;4963;5012:3;5000:9;4991:7;4987:23;4983:33;4980:120;;;5019:79;;:::i;:::-;4980:120;5139:1;5164:53;5209:7;5200:6;5189:9;5185:22;5164:53;:::i;:::-;5154:63;;5110:117;5266:2;5292:53;5337:7;5328:6;5317:9;5313:22;5292:53;:::i;:::-;5282:63;;5237:118;5394:2;5420:53;5465:7;5456:6;5445:9;5441:22;5420:53;:::i;:::-;5410:63;;5365:118;5522:2;5548:53;5593:7;5584:6;5573:9;5569:22;5548:53;:::i;:::-;5538:63;;5493:118;4853:765;;;;;;;:::o;5624:329::-;5683:6;5732:2;5720:9;5711:7;5707:23;5703:32;5700:119;;;5738:79;;:::i;:::-;5700:119;5858:1;5883:53;5928:7;5919:6;5908:9;5904:22;5883:53;:::i;:::-;5873:63;;5829:117;5624:329;;;;:::o;5959:118::-;6046:24;6064:5;6046:24;:::i;:::-;6041:3;6034:37;5959:118;;:::o;6083:222::-;6176:4;6214:2;6203:9;6199:18;6191:26;;6227:71;6295:1;6284:9;6280:17;6271:6;6227:71;:::i;:::-;6083:222;;;;:::o;6311:180::-;6359:77;6356:1;6349:88;6456:4;6453:1;6446:15;6480:4;6477:1;6470:15;6497:120;6585:1;6578:5;6575:12;6565:46;;6591:18;;:::i;:::-;6565:46;6497:120;:::o;6623:141::-;6675:7;6704:5;6693:16;;6710:48;6752:5;6710:48;:::i;:::-;6623:141;;;:::o;6770:::-;6833:9;6866:39;6899:5;6866:39;:::i;:::-;6853:52;;6770:141;;;:::o;6917:157::-;7017:50;7061:5;7017:50;:::i;:::-;7012:3;7005:63;6917:157;;:::o;7080:468::-;7242:4;7280:2;7269:9;7265:18;7257:26;;7293:71;7361:1;7350:9;7346:17;7337:6;7293:71;:::i;:::-;7374:72;7442:2;7431:9;7427:18;7418:6;7374:72;:::i;:::-;7456:85;7537:2;7526:9;7522:18;7513:6;7456:85;:::i;:::-;7080:468;;;;;;:::o;7554:474::-;7622:6;7630;7679:2;7667:9;7658:7;7654:23;7650:32;7647:119;;;7685:79;;:::i;:::-;7647:119;7805:1;7830:53;7875:7;7866:6;7855:9;7851:22;7830:53;:::i;:::-;7820:63;;7776:117;7932:2;7958:53;8003:7;7994:6;7983:9;7979:22;7958:53;:::i;:::-;7948:63;;7903:118;7554:474;;;;;:::o;8034:::-;8102:6;8110;8159:2;8147:9;8138:7;8134:23;8130:32;8127:119;;;8165:79;;:::i;:::-;8127:119;8285:1;8310:53;8355:7;8346:6;8335:9;8331:22;8310:53;:::i;:::-;8300:63;;8256:117;8412:2;8438:53;8483:7;8474:6;8463:9;8459:22;8438:53;:::i;:::-;8428:63;;8383:118;8034:474;;;;;:::o;8514:900::-;8782:4;8820:3;8809:9;8805:19;8797:27;;8834:71;8902:1;8891:9;8887:17;8878:6;8834:71;:::i;:::-;8915:72;8983:2;8972:9;8968:18;8959:6;8915:72;:::i;:::-;8997:85;9078:2;9067:9;9063:18;9054:6;8997:85;:::i;:::-;9092:72;9160:2;9149:9;9145:18;9136:6;9092:72;:::i;:::-;9174:73;9242:3;9231:9;9227:19;9218:6;9174:73;:::i;:::-;9257;9325:3;9314:9;9310:19;9301:6;9257:73;:::i;:::-;9340:67;9402:3;9391:9;9387:19;9378:6;9340:67;:::i;:::-;8514:900;;;;;;;;;;:::o;9420:180::-;9468:77;9465:1;9458:88;9565:4;9562:1;9555:15;9589:4;9586:1;9579:15;9606:320;9650:6;9687:1;9681:4;9677:12;9667:22;;9734:1;9728:4;9724:12;9755:18;9745:81;;9811:4;9803:6;9799:17;9789:27;;9745:81;9873:2;9865:6;9862:14;9842:18;9839:38;9836:84;;9892:18;;:::i;:::-;9836:84;9657:269;9606:320;;;:::o;9932:180::-;9980:77;9977:1;9970:88;10077:4;10074:1;10067:15;10101:4;10098:1;10091:15;10118:194;10158:4;10178:20;10196:1;10178:20;:::i;:::-;10173:25;;10212:20;10230:1;10212:20;:::i;:::-;10207:25;;10256:1;10253;10249:9;10241:17;;10280:1;10274:4;10271:11;10268:37;;;10285:18;;:::i;:::-;10268:37;10118:194;;;;:::o;10318:191::-;10358:3;10377:20;10395:1;10377:20;:::i;:::-;10372:25;;10411:20;10429:1;10411:20;:::i;:::-;10406:25;;10454:1;10451;10447:9;10440:16;;10475:3;10472:1;10469:10;10466:36;;;10482:18;;:::i;:::-;10466:36;10318:191;;;;:::o;10515:233::-;10554:3;10577:24;10595:5;10577:24;:::i;:::-;10568:33;;10623:66;10616:5;10613:77;10610:103;;10693:18;;:::i;:::-;10610:103;10740:1;10733:5;10729:13;10722:20;;10515:233;;;:::o;10754:171::-;10894:23;10890:1;10882:6;10878:14;10871:47;10754:171;:::o;10931:366::-;11073:3;11094:67;11158:2;11153:3;11094:67;:::i;:::-;11087:74;;11170:93;11259:3;11170:93;:::i;:::-;11288:2;11283:3;11279:12;11272:19;;10931:366;;;:::o;11303:419::-;11469:4;11507:2;11496:9;11492:18;11484:26;;11556:9;11550:4;11546:20;11542:1;11531:9;11527:17;11520:47;11584:131;11710:4;11584:131;:::i;:::-;11576:139;;11303:419;;;:::o;11728:220::-;11868:34;11864:1;11856:6;11852:14;11845:58;11937:3;11932:2;11924:6;11920:15;11913:28;11728:220;:::o;11954:366::-;12096:3;12117:67;12181:2;12176:3;12117:67;:::i;:::-;12110:74;;12193:93;12282:3;12193:93;:::i;:::-;12311:2;12306:3;12302:12;12295:19;;11954:366;;;:::o;12326:419::-;12492:4;12530:2;12519:9;12515:18;12507:26;;12579:9;12573:4;12569:20;12565:1;12554:9;12550:17;12543:47;12607:131;12733:4;12607:131;:::i;:::-;12599:139;;12326:419;;;:::o;12751:178::-;12891:30;12887:1;12879:6;12875:14;12868:54;12751:178;:::o;12935:366::-;13077:3;13098:67;13162:2;13157:3;13098:67;:::i;:::-;13091:74;;13174:93;13263:3;13174:93;:::i;:::-;13292:2;13287:3;13283:12;13276:19;;12935:366;;;:::o;13307:419::-;13473:4;13511:2;13500:9;13496:18;13488:26;;13560:9;13554:4;13550:20;13546:1;13535:9;13531:17;13524:47;13588:131;13714:4;13588:131;:::i;:::-;13580:139;;13307:419;;;:::o;13732:442::-;13881:4;13919:2;13908:9;13904:18;13896:26;;13932:71;14000:1;13989:9;13985:17;13976:6;13932:71;:::i;:::-;14013:72;14081:2;14070:9;14066:18;14057:6;14013:72;:::i;:::-;14095;14163:2;14152:9;14148:18;14139:6;14095:72;:::i;:::-;13732:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1489000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DeviceCount()": "2447",
								"_calculateDistance(uint256,uint256,uint256,uint256)": "infinite",
								"addDriver(address)": "137481",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"decimals()": "361",
								"devices(address)": "infinite",
								"endTime()": "2470",
								"getDevice()": "infinite",
								"latitude()": "2492",
								"longitude()": "2536",
								"name()": "infinite",
								"optIn(uint256,uint256)": "infinite",
								"owner()": "2575",
								"radius()": "2515",
								"rewardAmount()": "2557",
								"startTime()": "2470",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_isWithinArea(uint256,uint256)": "infinite",
								"_payReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 770,
									"end": 1178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "52546F6B656E0000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "5254000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1973,
									"end": 1978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1970,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1965,
									"end": 1978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1998,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1988,
									"end": 1995,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1988,
									"end": 2005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1899,
									"end": 2012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 975,
									"end": 985,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 967,
									"end": 972,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 967,
									"end": 972,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 967,
									"end": 985,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1006,
									"end": 1015,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 995,
									"end": 1003,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 995,
									"end": 1015,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 995,
									"end": 1015,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 995,
									"end": 1015,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 995,
									"end": 1015,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1037,
									"end": 1047,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1034,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1025,
									"end": 1047,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1047,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1047,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1047,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1066,
									"end": 1073,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1057,
									"end": 1063,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1057,
									"end": 1073,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1057,
									"end": 1073,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1057,
									"end": 1073,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1057,
									"end": 1073,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1095,
									"end": 1105,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1083,
									"end": 1092,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1083,
									"end": 1105,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1083,
									"end": 1105,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1083,
									"end": 1105,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1083,
									"end": 1105,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1125,
									"end": 1133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1122,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1115,
									"end": 1133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1133,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1133,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1133,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1158,
									"end": 1171,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1155,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1143,
									"end": 1171,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1171,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1171,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1171,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 1178,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 809,
									"end": 815,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 823,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 825,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 839,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 841,
									"end": 847,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 849,
									"end": 855,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 898,
									"end": 901,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 886,
									"end": 895,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 877,
									"end": 884,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 873,
									"end": 896,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 869,
									"end": 902,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 866,
									"end": 986,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 866,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 866,
									"end": 986,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 905,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 905,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 905,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 905,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 905,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 866,
									"end": 986,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 866,
									"end": 986,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1026,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1050,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1106,
									"end": 1113,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1103,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1095,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1104,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1050,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1050,
									"end": 1114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1050,
									"end": 1114,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1050,
									"end": 1114,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1114,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 996,
									"end": 1124,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1163,
									"end": 1165,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1189,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1245,
									"end": 1252,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1225,
									"end": 1234,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1243,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1189,
									"end": 1253,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1253,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1189,
									"end": 1253,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1253,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1253,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1263,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1304,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1328,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1384,
									"end": 1391,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1375,
									"end": 1381,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1373,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1382,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1328,
									"end": 1392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1392,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1328,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1392,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1392,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1273,
									"end": 1402,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1443,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1467,
									"end": 1531,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1523,
									"end": 1530,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1503,
									"end": 1512,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1499,
									"end": 1521,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1531,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1467,
									"end": 1531,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1531,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1467,
									"end": 1531,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1531,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1531,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1412,
									"end": 1541,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1583,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1607,
									"end": 1671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1663,
									"end": 1670,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 1660,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1643,
									"end": 1652,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1661,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1607,
									"end": 1671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1671,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1607,
									"end": 1671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1597,
									"end": 1671,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1597,
									"end": 1671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1551,
									"end": 1681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1723,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1747,
									"end": 1811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1803,
									"end": 1810,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1800,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1783,
									"end": 1792,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1801,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1747,
									"end": 1811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1747,
									"end": 1811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1747,
									"end": 1811,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1747,
									"end": 1811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1811,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1821,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1933,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1834,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1886,
									"end": 1892,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1925,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1914,
									"end": 1926,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1926,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1904,
									"end": 1926,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1933,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1933,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1933,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1933,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1939,
									"end": 2119,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1939,
									"end": 2119,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1987,
									"end": 2064,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1984,
									"end": 1985,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1977,
									"end": 2065,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2084,
									"end": 2088,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2081,
									"end": 2082,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2074,
									"end": 2089,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2112,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2105,
									"end": 2106,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2305,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2125,
									"end": 2305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2173,
									"end": 2250,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2170,
									"end": 2171,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2163,
									"end": 2251,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2267,
									"end": 2268,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2260,
									"end": 2275,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2294,
									"end": 2298,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2284,
									"end": 2299,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2311,
									"end": 2631,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2311,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2393,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2386,
									"end": 2390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2382,
									"end": 2394,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2372,
									"end": 2394,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2372,
									"end": 2394,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2439,
									"end": 2440,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2433,
									"end": 2437,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2429,
									"end": 2441,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2460,
									"end": 2478,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2450,
									"end": 2531,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2450,
									"end": 2531,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2516,
									"end": 2520,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2508,
									"end": 2514,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2504,
									"end": 2521,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2521,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2450,
									"end": 2531,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2450,
									"end": 2531,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2578,
									"end": 2580,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2570,
									"end": 2576,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2567,
									"end": 2581,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2547,
									"end": 2565,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2582,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2541,
									"end": 2625,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2541,
									"end": 2625,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2597,
									"end": 2615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2597,
									"end": 2615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2597,
									"end": 2615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2597,
									"end": 2615,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2597,
									"end": 2615,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2541,
									"end": 2625,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2541,
									"end": 2625,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2362,
									"end": 2631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2311,
									"end": 2631,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2311,
									"end": 2631,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2311,
									"end": 2631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2311,
									"end": 2631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2637,
									"end": 2778,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2637,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2690,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2712,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2712,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2729,
									"end": 2730,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2722,
									"end": 2736,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2766,
									"end": 2770,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2763,
									"end": 2764,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2771,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2745,
									"end": 2771,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2745,
									"end": 2771,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2637,
									"end": 2778,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2637,
									"end": 2778,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2637,
									"end": 2778,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2637,
									"end": 2778,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2877,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2784,
									"end": 2877,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2821,
									"end": 2827,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2868,
									"end": 2870,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2863,
									"end": 2865,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2856,
									"end": 2861,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2852,
									"end": 2866,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2848,
									"end": 2871,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2871,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2871,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2877,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2877,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2877,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2877,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2990,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2883,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2927,
									"end": 2935,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2977,
									"end": 2982,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 2975,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2967,
									"end": 2983,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2946,
									"end": 2983,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2946,
									"end": 2983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2990,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2990,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2990,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2990,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3389,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2996,
									"end": 3389,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3065,
									"end": 3071,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3115,
									"end": 3116,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3103,
									"end": 3113,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3099,
									"end": 3117,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3138,
									"end": 3235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 3168,
									"end": 3234,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3157,
									"end": 3166,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3138,
									"end": 3235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3138,
									"end": 3235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3138,
									"end": 3235,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 3138,
									"end": 3235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3256,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3286,
									"end": 3294,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3275,
									"end": 3284,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3256,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3256,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3256,
									"end": 3295,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3256,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3244,
									"end": 3295,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3244,
									"end": 3295,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3328,
									"end": 3332,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3324,
									"end": 3333,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3313,
									"end": 3334,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3304,
									"end": 3334,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3304,
									"end": 3334,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3377,
									"end": 3381,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3367,
									"end": 3375,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3363,
									"end": 3382,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3356,
									"end": 3361,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3353,
									"end": 3383,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3343,
									"end": 3383,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3343,
									"end": 3383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3389,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3389,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3455,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3395,
									"end": 3455,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3423,
									"end": 3426,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3444,
									"end": 3449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3437,
									"end": 3449,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3437,
									"end": 3449,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3455,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3455,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3455,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3395,
									"end": 3455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3461,
									"end": 3603,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3461,
									"end": 3603,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3511,
									"end": 3520,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3544,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3562,
									"end": 3596,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 3571,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3589,
									"end": 3594,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3571,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 3571,
									"end": 3595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3571,
									"end": 3595,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3571,
									"end": 3595,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3596,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3562,
									"end": 3596,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3596,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 3562,
									"end": 3596,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3544,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 3544,
									"end": 3597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3544,
									"end": 3597,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3544,
									"end": 3597,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3531,
									"end": 3597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3531,
									"end": 3597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3461,
									"end": 3603,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3461,
									"end": 3603,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3461,
									"end": 3603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3461,
									"end": 3603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3684,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3609,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3655,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3673,
									"end": 3678,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3666,
									"end": 3678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3666,
									"end": 3678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3684,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3684,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3684,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3690,
									"end": 3959,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3690,
									"end": 3959,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3800,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3831,
									"end": 3838,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3800,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3800,
									"end": 3839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3800,
									"end": 3839,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3800,
									"end": 3839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3910,
									"end": 3951,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3934,
									"end": 3950,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3910,
									"end": 3951,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3910,
									"end": 3951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3910,
									"end": 3951,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3910,
									"end": 3951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3902,
									"end": 3908,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3895,
									"end": 3899,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3889,
									"end": 3900,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3861,
									"end": 3952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 3952,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3861,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3855,
									"end": 3859,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3848,
									"end": 3953,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3766,
									"end": 3959,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3690,
									"end": 3959,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3690,
									"end": 3959,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3690,
									"end": 3959,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3690,
									"end": 3959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3965,
									"end": 4038,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3965,
									"end": 4038,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4013,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3965,
									"end": 4038,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3965,
									"end": 4038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 4233,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4044,
									"end": 4233,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4121,
									"end": 4153,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4121,
									"end": 4153,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4121,
									"end": 4153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4121,
									"end": 4153,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4121,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4162,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4220,
									"end": 4226,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4218,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4206,
									"end": 4210,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4162,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4162,
									"end": 4227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4162,
									"end": 4227,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4162,
									"end": 4227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4097,
									"end": 4233,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 4233,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 4233,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 4233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4239,
									"end": 4425,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4239,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4316,
									"end": 4319,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4309,
									"end": 4314,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4320,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4407,
									"end": 4408,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4400,
									"end": 4405,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4370,
									"end": 4409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4409,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4370,
									"end": 4409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4343,
									"end": 4344,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4336,
									"end": 4341,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4332,
									"end": 4345,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4323,
									"end": 4345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4299,
									"end": 4419,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4239,
									"end": 4425,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4239,
									"end": 4425,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4239,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4974,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4431,
									"end": 4974,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4534,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4527,
									"end": 4530,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4535,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4521,
									"end": 4967,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4521,
									"end": 4967,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4521,
									"end": 4967,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4566,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4598,
									"end": 4603,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4566,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4566,
									"end": 4604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4566,
									"end": 4604,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4566,
									"end": 4604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4668,
									"end": 4678,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 4650,
									"end": 4679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4679,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4650,
									"end": 4679,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4640,
									"end": 4648,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4636,
									"end": 4680,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4833,
									"end": 4835,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4821,
									"end": 4831,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4818,
									"end": 4836,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4864,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4864,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4815,
									"end": 4864,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4854,
									"end": 4862,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4839,
									"end": 4862,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4839,
									"end": 4862,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4864,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4815,
									"end": 4864,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4877,
									"end": 4957,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4933,
									"end": 4955,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4951,
									"end": 4954,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4933,
									"end": 4955,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 4933,
									"end": 4955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4933,
									"end": 4955,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4933,
									"end": 4955,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4923,
									"end": 4931,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4919,
									"end": 4956,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4906,
									"end": 4917,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4877,
									"end": 4957,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4877,
									"end": 4957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4877,
									"end": 4957,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4877,
									"end": 4957,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4536,
									"end": 4967,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4536,
									"end": 4967,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4521,
									"end": 4967,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4521,
									"end": 4967,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4974,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4974,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4974,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4974,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4980,
									"end": 5097,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4980,
									"end": 5097,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5034,
									"end": 5042,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5084,
									"end": 5089,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5082,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5074,
									"end": 5090,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 5053,
									"end": 5090,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5053,
									"end": 5090,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4980,
									"end": 5097,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4980,
									"end": 5097,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4980,
									"end": 5097,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4980,
									"end": 5097,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4980,
									"end": 5097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5103,
									"end": 5272,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5103,
									"end": 5272,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5147,
									"end": 5153,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5180,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 5228,
									"end": 5229,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5216,
									"end": 5221,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5213,
									"end": 5214,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5209,
									"end": 5222,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5180,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5180,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5180,
									"end": 5231,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 5180,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5176,
									"end": 5232,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5261,
									"end": 5265,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5255,
									"end": 5259,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5251,
									"end": 5266,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5241,
									"end": 5266,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5241,
									"end": 5266,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5154,
									"end": 5272,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5103,
									"end": 5272,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5103,
									"end": 5272,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5103,
									"end": 5272,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5103,
									"end": 5272,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5103,
									"end": 5272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5277,
									"end": 5572,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5277,
									"end": 5572,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5357,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5499,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5524,
									"end": 5527,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5518,
									"end": 5522,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5499,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5499,
									"end": 5528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5499,
									"end": 5528,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5499,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5491,
									"end": 5528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5491,
									"end": 5528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5561,
									"end": 5564,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5558,
									"end": 5559,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5554,
									"end": 5565,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5548,
									"end": 5552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5545,
									"end": 5566,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5277,
									"end": 5572,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5277,
									"end": 5572,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5277,
									"end": 5572,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5277,
									"end": 5572,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5277,
									"end": 5572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5577,
									"end": 6972,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5577,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5694,
									"end": 5731,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5727,
									"end": 5730,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5694,
									"end": 5731,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 5694,
									"end": 5731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5694,
									"end": 5731,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5694,
									"end": 5731,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5796,
									"end": 5814,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5788,
									"end": 5794,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5785,
									"end": 5815,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5838,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5782,
									"end": 5838,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5818,
									"end": 5836,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5818,
									"end": 5836,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 5818,
									"end": 5836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5818,
									"end": 5836,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5818,
									"end": 5836,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5838,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5782,
									"end": 5838,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5894,
									"end": 5898,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5888,
									"end": 5899,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 5862,
									"end": 5900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5900,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5862,
									"end": 5900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6014,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 6007,
									"end": 6013,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5999,
									"end": 6005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5993,
									"end": 5997,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6014,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5947,
									"end": 6014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6014,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5947,
									"end": 6014,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6041,
									"end": 6042,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6069,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6052,
									"end": 6069,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6052,
									"end": 6069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6097,
									"end": 6099,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6089,
									"end": 6095,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6086,
									"end": 6100,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6114,
									"end": 6115,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6109,
									"end": 6727,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6109,
									"end": 6727,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 6109,
									"end": 6727,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 6109,
									"end": 6727,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6771,
									"end": 6772,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6788,
									"end": 6794,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6785,
									"end": 6862,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6785,
									"end": 6862,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 6785,
									"end": 6862,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6837,
									"end": 6846,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6832,
									"end": 6835,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6828,
									"end": 6847,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6822,
									"end": 6848,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6813,
									"end": 6848,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6813,
									"end": 6848,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6785,
									"end": 6862,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 6785,
									"end": 6862,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6888,
									"end": 6955,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 6948,
									"end": 6954,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6941,
									"end": 6946,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6888,
									"end": 6955,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 6888,
									"end": 6955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6888,
									"end": 6955,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 6888,
									"end": 6955,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6882,
									"end": 6886,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6875,
									"end": 6956,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6744,
									"end": 6966,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6079,
									"end": 6966,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 6079,
									"end": 6966,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6109,
									"end": 6727,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 6109,
									"end": 6727,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6161,
									"end": 6165,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6157,
									"end": 6166,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6149,
									"end": 6155,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6232,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 6227,
									"end": 6231,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6232,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 6195,
									"end": 6232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6232,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 6195,
									"end": 6232,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6254,
									"end": 6255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6282,
									"end": 6289,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6279,
									"end": 6280,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6276,
									"end": 6290,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6361,
									"end": 6370,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6356,
									"end": 6359,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6352,
									"end": 6371,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6346,
									"end": 6372,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6338,
									"end": 6344,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6331,
									"end": 6373,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6412,
									"end": 6413,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6404,
									"end": 6410,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6400,
									"end": 6414,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6390,
									"end": 6414,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6390,
									"end": 6414,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6459,
									"end": 6461,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6448,
									"end": 6457,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6444,
									"end": 6462,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6431,
									"end": 6462,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6431,
									"end": 6462,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6305,
									"end": 6309,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6302,
									"end": 6303,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6298,
									"end": 6310,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6293,
									"end": 6310,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6293,
									"end": 6310,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 6268,
									"end": 6476,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6504,
									"end": 6510,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6495,
									"end": 6502,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6492,
									"end": 6511,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 6668,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 6668,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6489,
									"end": 6668,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6562,
									"end": 6571,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6557,
									"end": 6560,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6553,
									"end": 6572,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6573,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6605,
									"end": 6653,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6647,
									"end": 6651,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6635,
									"end": 6652,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6624,
									"end": 6633,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6605,
									"end": 6653,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 6605,
									"end": 6653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6605,
									"end": 6653,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6605,
									"end": 6653,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6597,
									"end": 6603,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6590,
									"end": 6654,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6512,
									"end": 6668,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 6668,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6489,
									"end": 6668,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6715,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6710,
									"end": 6711,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6702,
									"end": 6708,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6698,
									"end": 6712,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6694,
									"end": 6716,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6688,
									"end": 6692,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6681,
									"end": 6717,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6727,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6727,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6116,
									"end": 6727,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6079,
									"end": 6966,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 6079,
									"end": 6966,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6079,
									"end": 6966,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5669,
									"end": 6972,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5669,
									"end": 6972,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5669,
									"end": 6972,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5577,
									"end": 6972,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5577,
									"end": 6972,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5577,
									"end": 6972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 3323,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ffddef9cbd7a3cbffb3180d31ecf8eccf12b1b0ecf2009b2d18b1cee57ba19fa64736f6c63430008180033",
									".code": [
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "9AF8A5EB"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "9AF8A5EB"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "B620B8CB"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "E7B4CAC6"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "F7B2A7BE"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "78E97925"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "8EA286C2"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "3197CBB6"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "4FD7D76A"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "563A6C7A"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "589AF69C"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "63A411C0"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "217F4353"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 81,
											"end": 3323,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2077,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2077,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4296,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4296,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4296,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3147,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3147,
											"end": 3244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 195,
											"end": 213,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 195,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 195,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5042,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5042,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5042,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3005,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3005,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 246,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 246,
											"end": 265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 246,
											"end": 265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 142,
											"end": 162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 142,
											"end": 162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2592,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2592,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2592,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 168,
											"end": 189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 168,
											"end": 189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1184,
											"end": 1391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1184,
											"end": 1391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3302,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3302,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3302,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 219,
											"end": 240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 219,
											"end": 240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 116,
											"end": 136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2955,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2955,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2279,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2279,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 648,
											"end": 671,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 648,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 648,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3613,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3613,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3613,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1397,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1397,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3849,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3849,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3849,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 601,
											"end": 642,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 601,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 601,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 601,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 271,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 271,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2135,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2154,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2147,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2147,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4401,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4401,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4401,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4401,
											"end": 4413,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4401,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4432,
											"end": 4437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4453,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4423,
											"end": 4454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4423,
											"end": 4454,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4423,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4464,
											"end": 4475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3237,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3225,
											"end": 3237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 213,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 195,
											"end": 213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5163,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5163,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5201,
											"end": 5205,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5216,
											"end": 5221,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5185,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5242,
											"end": 5246,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5248,
											"end": 5250,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5252,
											"end": 5257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5232,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5258,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5232,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5275,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5268,
											"end": 5279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3080,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3071,
											"end": 3080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 265,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 142,
											"end": 162,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 142,
											"end": 162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2729,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2725,
											"end": 2736,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2725,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2736,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2725,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2713,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2709,
											"end": 2720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2709,
											"end": 2720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2720,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2709,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2708,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 189,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 736,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 722,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 722,
											"end": 732,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 722,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 722,
											"end": 741,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 714,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 714,
											"end": 742,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 714,
											"end": 742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 742,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 714,
											"end": 742,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 714,
											"end": 742,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 714,
											"end": 742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 1257,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1257,
											"end": 1271,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1308,
											"end": 1384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1357,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1376,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1305,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1281,
											"end": 1384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 219,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 116,
											"end": 136,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 116,
											"end": 136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2997,
											"end": 3017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3087,
											"end": 3135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3106,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3087,
											"end": 3135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3079,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3079,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3215,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3171,
											"end": 3216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3171,
											"end": 3216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3259,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3261,
											"end": 3289,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3261,
											"end": 3289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3261,
											"end": 3289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3313,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3313,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3313,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 2339,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2351,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2351,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 648,
											"end": 671,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3714,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3714,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3746,
											"end": 3751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3753,
											"end": 3755,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3736,
											"end": 3763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3763,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3736,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3773,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1487,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1503,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1461,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1461,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1575,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1576,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1549,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1549,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1665,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1656,
											"end": 1665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1653,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1665,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1634,
											"end": 1985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1677,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1715,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1985,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1634,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1757,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1750,
											"end": 1757,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1757,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1728,
											"end": 1985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1777,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1788,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1798,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1770,
											"end": 1798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1885,
											"end": 1897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1869,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1897,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1907,
											"end": 1914,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1925,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1907,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1972,
											"end": 1979,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1985,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1728,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1999,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2035,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1999,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2065,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2066,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2047,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2094,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2094,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2188,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2169,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2219,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2237,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2219,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2219,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1995,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 2285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3929,
											"end": 3936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 642,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 601,
											"end": 642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 601,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 271,
											"end": 295,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 271,
											"end": 295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9120,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8992,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9076,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9085,
											"end": 9090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9112,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9076,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9076,
											"end": 9113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9076,
											"end": 9113,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9076,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10666,
											"end": 11143,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10666,
											"end": 11143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10802,
											"end": 10807,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10809,
											"end": 10816,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10792,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10792,
											"end": 10817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10792,
											"end": 10817,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10792,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10851,
											"end": 10868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10831,
											"end": 10847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10831,
											"end": 10868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10827,
											"end": 11137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10907,
											"end": 10912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10888,
											"end": 10904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10888,
											"end": 10912,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10884,
											"end": 11014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10884,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10884,
											"end": 11014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 10973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10975,
											"end": 10991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10993,
											"end": 10998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 10939,
											"end": 10999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10939,
											"end": 10999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10884,
											"end": 11014,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10884,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11055,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11064,
											"end": 11069,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11071,
											"end": 11078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11099,
											"end": 11104,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11096,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11055,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11055,
											"end": 11112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11055,
											"end": 11112,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11055,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 11137,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10827,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 11143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10666,
											"end": 11143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10666,
											"end": 11143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10666,
											"end": 11143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10666,
											"end": 11143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5659,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5659,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5738,
											"end": 5824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5783,
											"end": 5813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5824,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 5738,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5837,
											"end": 5853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5837,
											"end": 5853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5833,
											"end": 5919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5876,
											"end": 5908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5919,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5833,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5936,
											"end": 5940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5942,
											"end": 5944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 5951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5928,
											"end": 5952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5952,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5928,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5659,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5659,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5659,
											"end": 5959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5659,
											"end": 5959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2586,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2291,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2543,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2482,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2544,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2482,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2586,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9952,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10081,
											"end": 10082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10064,
											"end": 10069,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10060,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10060,
											"end": 10149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10106,
											"end": 10138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10060,
											"end": 10149,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10060,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10162,
											"end": 10183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10162,
											"end": 10169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10162,
											"end": 10183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10162,
											"end": 10183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10162,
											"end": 10183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10158,
											"end": 10248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10234,
											"end": 10235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10206,
											"end": 10237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10237,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10248,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10158,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10268,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10269,
											"end": 10274,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10283,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10292,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10257,
											"end": 10292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 10302,
											"end": 10378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10352,
											"end": 10359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10345,
											"end": 10350,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10361,
											"end": 10366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10336,
											"end": 10367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10367,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10378,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 10302,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9952,
											"end": 10384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 7381,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6274,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6363,
											"end": 6367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6359,
											"end": 6899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6511,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6499,
											"end": 6511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6499,
											"end": 6520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6359,
											"end": 6899,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6899,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6359,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6587,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6551,
											"end": 6588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6551,
											"end": 6588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6620,
											"end": 6625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6625,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6602,
											"end": 6717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6683,
											"end": 6694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6652,
											"end": 6702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6702,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6717,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6602,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6851,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6852,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6874,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6899,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6359,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 6909,
											"end": 7334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7092,
											"end": 7097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7076,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 6909,
											"end": 7334,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 7334,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 6909,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7304,
											"end": 7309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7299,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 7334,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 6909,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7358,
											"end": 7362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7368,
											"end": 7373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7349,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 7381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 7381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 7381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 7381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5015,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 4998,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5016,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4980,
											"end": 5100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5019,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5019,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5019,
											"end": 5098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5019,
											"end": 5098,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5019,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5100,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 4980,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 5209,
											"end": 5216,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5206,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5198,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5164,
											"end": 5217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5217,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 5164,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5217,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5268,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5337,
											"end": 5344,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5292,
											"end": 5345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5345,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5292,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5345,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5394,
											"end": 5396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5465,
											"end": 5472,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5420,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5420,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5420,
											"end": 5473,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5420,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5473,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5524,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5548,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5593,
											"end": 5600,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5582,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5569,
											"end": 5591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5548,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5601,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5548,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5953,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5624,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5720,
											"end": 5729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5711,
											"end": 5718,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5730,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5700,
											"end": 5819,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5700,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 5700,
											"end": 5819,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5738,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5738,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5817,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5738,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5700,
											"end": 5819,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 5700,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 5928,
											"end": 5935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5919,
											"end": 5925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5908,
											"end": 5917,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5883,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5936,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 5883,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5953,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6077,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 5959,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6046,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 6064,
											"end": 6069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6046,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6046,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6046,
											"end": 6070,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 6046,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6305,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6083,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6216,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6203,
											"end": 6212,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6227,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 6293,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6227,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6227,
											"end": 6298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6227,
											"end": 6298,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 6227,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6305,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6305,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6311,
											"end": 6491,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6311,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6437,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6460,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6453,
											"end": 6454,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6446,
											"end": 6461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6484,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6470,
											"end": 6485,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6617,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6497,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6578,
											"end": 6583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6587,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 6565,
											"end": 6611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6591,
											"end": 6609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6611,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 6565,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6764,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6623,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 6682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 6752,
											"end": 6757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6710,
											"end": 6758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6758,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 6710,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6911,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6770,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6833,
											"end": 6842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 6899,
											"end": 6904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6866,
											"end": 6905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7074,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6917,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 7061,
											"end": 7066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7017,
											"end": 7067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7067,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 7017,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6917,
											"end": 7074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7548,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7080,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7282,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7269,
											"end": 7278,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7265,
											"end": 7283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7350,
											"end": 7359,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7293,
											"end": 7364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7364,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 7293,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7431,
											"end": 7440,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7374,
											"end": 7446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7446,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 7374,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7456,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 7537,
											"end": 7539,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7526,
											"end": 7535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7519,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7456,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7456,
											"end": 7541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7456,
											"end": 7541,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 7456,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7548,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7548,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 8028,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7554,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7679,
											"end": 7681,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 7665,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7654,
											"end": 7677,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7650,
											"end": 7682,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7647,
											"end": 7766,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7647,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 7647,
											"end": 7766,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7685,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 7685,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7685,
											"end": 7764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7685,
											"end": 7764,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 7685,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7647,
											"end": 7766,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 7647,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7830,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 7875,
											"end": 7882,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 7872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7864,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7830,
											"end": 7883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7883,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 7830,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7883,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7776,
											"end": 7893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7958,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 8003,
											"end": 8010,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7994,
											"end": 8000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7983,
											"end": 7992,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7958,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 8011,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 7958,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7948,
											"end": 8011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7948,
											"end": 8011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 8021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 8028,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 8028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 8028,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 8028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 8028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 8028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8508,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8034,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8110,
											"end": 8116,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8147,
											"end": 8156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8138,
											"end": 8145,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8157,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8130,
											"end": 8162,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 8165,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8165,
											"end": 8244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8244,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 8165,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 8127,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 8355,
											"end": 8362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8346,
											"end": 8352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8344,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8331,
											"end": 8353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8310,
											"end": 8363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8363,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 8310,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8363,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8438,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 8483,
											"end": 8490,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8474,
											"end": 8480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8463,
											"end": 8472,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8459,
											"end": 8481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8438,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8491,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 8438,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8383,
											"end": 8501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8820,
											"end": 8823,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8809,
											"end": 8818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8797,
											"end": 8824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8797,
											"end": 8824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8834,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 8902,
											"end": 8903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8900,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8878,
											"end": 8884,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8834,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8834,
											"end": 8905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8834,
											"end": 8905,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 8834,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8915,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 8983,
											"end": 8985,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8972,
											"end": 8981,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 8965,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8915,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8915,
											"end": 8987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8915,
											"end": 8987,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 8915,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 9078,
											"end": 9080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9067,
											"end": 9076,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9054,
											"end": 9060,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8997,
											"end": 9082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9082,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 8997,
											"end": 9082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9092,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 9160,
											"end": 9162,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9149,
											"end": 9158,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9136,
											"end": 9142,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9092,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9092,
											"end": 9164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9092,
											"end": 9164,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 9092,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 9242,
											"end": 9245,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9231,
											"end": 9240,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9227,
											"end": 9246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9224,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9174,
											"end": 9247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9247,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 9174,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9257,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 9325,
											"end": 9328,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 9314,
											"end": 9323,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9310,
											"end": 9329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9301,
											"end": 9307,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9257,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9257,
											"end": 9330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9257,
											"end": 9330,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 9257,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 9402,
											"end": 9405,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9378,
											"end": 9384,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 9340,
											"end": 9407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9407,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 9340,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 9414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9420,
											"end": 9600,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9420,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9468,
											"end": 9545,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9465,
											"end": 9466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9458,
											"end": 9546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9569,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9562,
											"end": 9563,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9555,
											"end": 9570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9593,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9586,
											"end": 9587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9594,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9926,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 9606,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9687,
											"end": 9688,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9681,
											"end": 9685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9677,
											"end": 9689,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9728,
											"end": 9732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9724,
											"end": 9736,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9745,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 9745,
											"end": 9826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9815,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9799,
											"end": 9816,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9789,
											"end": 9816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9789,
											"end": 9816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9745,
											"end": 9826,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 9745,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9873,
											"end": 9875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9865,
											"end": 9871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9839,
											"end": 9877,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9836,
											"end": 9920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9892,
											"end": 9910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9920,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 9836,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9932,
											"end": 10112,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9932,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10057,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9977,
											"end": 9978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 10058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10077,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 10074,
											"end": 10075,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10067,
											"end": 10082,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10101,
											"end": 10105,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10098,
											"end": 10099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10106,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10312,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10118,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10158,
											"end": 10162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10178,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 10196,
											"end": 10197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10178,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10178,
											"end": 10198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10178,
											"end": 10198,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 10178,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 10230,
											"end": 10231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10212,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10232,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 10212,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10207,
											"end": 10232,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10207,
											"end": 10232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10256,
											"end": 10257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10249,
											"end": 10258,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10280,
											"end": 10281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10282,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10268,
											"end": 10305,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10268,
											"end": 10305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 10268,
											"end": 10305,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 10285,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 10285,
											"end": 10303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10285,
											"end": 10303,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 10285,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10268,
											"end": 10305,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 10268,
											"end": 10305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10318,
											"end": 10509,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 10318,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10358,
											"end": 10361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10377,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 10395,
											"end": 10396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10377,
											"end": 10397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10397,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 10377,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10372,
											"end": 10397,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10372,
											"end": 10397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10411,
											"end": 10431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10431,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10451,
											"end": 10452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10475,
											"end": 10478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10472,
											"end": 10473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10469,
											"end": 10479,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 10482,
											"end": 10500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 10482,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 10466,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10318,
											"end": 10509,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10318,
											"end": 10509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10318,
											"end": 10509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10318,
											"end": 10509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10318,
											"end": 10509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10748,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 10515,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10554,
											"end": 10557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10577,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 10595,
											"end": 10600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10577,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10577,
											"end": 10601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10577,
											"end": 10601,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 10577,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10623,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10616,
											"end": 10621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10613,
											"end": 10690,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 10610,
											"end": 10713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 10693,
											"end": 10711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10713,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 10610,
											"end": 10713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10741,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10733,
											"end": 10738,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10729,
											"end": 10742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10722,
											"end": 10742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10722,
											"end": 10742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10748,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10925,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 10754,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10894,
											"end": 10917,
											"name": "PUSH",
											"source": 6,
											"value": "446576696365206E6F7420726567697374657265640000000000000000000000"
										},
										{
											"begin": 10890,
											"end": 10891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 10888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10878,
											"end": 10892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10871,
											"end": 10918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10931,
											"end": 11297,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10931,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11073,
											"end": 11076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11094,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 11158,
											"end": 11160,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 11153,
											"end": 11156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11094,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11094,
											"end": 11161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11094,
											"end": 11161,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 11094,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11087,
											"end": 11161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11087,
											"end": 11161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 11259,
											"end": 11262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 11170,
											"end": 11263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11263,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 11170,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11288,
											"end": 11290,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11283,
											"end": 11286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11279,
											"end": 11291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10931,
											"end": 11297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10931,
											"end": 11297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10931,
											"end": 11297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10931,
											"end": 11297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11303,
											"end": 11722,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 11303,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11469,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11507,
											"end": 11509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11496,
											"end": 11505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11492,
											"end": 11510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11556,
											"end": 11565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11546,
											"end": 11566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11531,
											"end": 11540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11527,
											"end": 11544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11520,
											"end": 11567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11584,
											"end": 11715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 11710,
											"end": 11714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11584,
											"end": 11715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 11584,
											"end": 11715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11584,
											"end": 11715,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 11584,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11576,
											"end": 11715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11576,
											"end": 11715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11303,
											"end": 11722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11303,
											"end": 11722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11303,
											"end": 11722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11303,
											"end": 11722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11948,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 11728,
											"end": 11948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11868,
											"end": 11902,
											"name": "PUSH",
											"source": 6,
											"value": "7468652064657669636520436F6E7472616374206973206E6F74206163746976"
										},
										{
											"begin": 11864,
											"end": 11865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11856,
											"end": 11862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 11866,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11845,
											"end": 11903,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11940,
											"name": "PUSH",
											"source": 6,
											"value": "6500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11932,
											"end": 11934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11924,
											"end": 11930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11920,
											"end": 11935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11954,
											"end": 12320,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 11954,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12096,
											"end": 12099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12117,
											"end": 12184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 12181,
											"end": 12183,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 12176,
											"end": 12179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12117,
											"end": 12184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 12117,
											"end": 12184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12117,
											"end": 12184,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 12117,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12110,
											"end": 12184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12110,
											"end": 12184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12193,
											"end": 12286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 12282,
											"end": 12285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12193,
											"end": 12286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 12193,
											"end": 12286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12193,
											"end": 12286,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 12193,
											"end": 12286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12311,
											"end": 12313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12306,
											"end": 12309,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12302,
											"end": 12314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11954,
											"end": 12320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11954,
											"end": 12320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11954,
											"end": 12320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11954,
											"end": 12320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12745,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 12326,
											"end": 12745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12492,
											"end": 12496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12530,
											"end": 12532,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12519,
											"end": 12528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12515,
											"end": 12533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12507,
											"end": 12533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12507,
											"end": 12533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12579,
											"end": 12588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12573,
											"end": 12577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12569,
											"end": 12589,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12565,
											"end": 12566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12554,
											"end": 12563,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12550,
											"end": 12567,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12543,
											"end": 12590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12607,
											"end": 12738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 12733,
											"end": 12737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12607,
											"end": 12738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 12607,
											"end": 12738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12607,
											"end": 12738,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 12607,
											"end": 12738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12599,
											"end": 12738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12599,
											"end": 12738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12751,
											"end": 12929,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 12751,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 12921,
											"name": "PUSH",
											"source": 6,
											"value": "436F6E747261637420686173206E6F7420737461727465642079657400000000"
										},
										{
											"begin": 12887,
											"end": 12888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12879,
											"end": 12885,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12875,
											"end": 12889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12868,
											"end": 12922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12751,
											"end": 12929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12751,
											"end": 12929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12935,
											"end": 13301,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 12935,
											"end": 13301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13077,
											"end": 13080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 13157,
											"end": 13160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 13098,
											"end": 13165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13174,
											"end": 13267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 13263,
											"end": 13266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13174,
											"end": 13267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 13174,
											"end": 13267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13174,
											"end": 13267,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 13174,
											"end": 13267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13292,
											"end": 13294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13287,
											"end": 13290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13283,
											"end": 13295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 13295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 13295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12935,
											"end": 13301,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12935,
											"end": 13301,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12935,
											"end": 13301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12935,
											"end": 13301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13726,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 13307,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13473,
											"end": 13477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13513,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13500,
											"end": 13509,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13488,
											"end": 13514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13488,
											"end": 13514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13560,
											"end": 13569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13554,
											"end": 13558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13570,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13535,
											"end": 13544,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13531,
											"end": 13548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13524,
											"end": 13571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13588,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 13714,
											"end": 13718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13588,
											"end": 13719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 13588,
											"end": 13719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13588,
											"end": 13719,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 13588,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13580,
											"end": 13719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13580,
											"end": 13719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13726,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 14174,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 13732,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13881,
											"end": 13885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13919,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13908,
											"end": 13917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13904,
											"end": 13922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13896,
											"end": 13922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13896,
											"end": 13922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13932,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 14000,
											"end": 14001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13989,
											"end": 13998,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14002,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13976,
											"end": 13982,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13932,
											"end": 14003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 13932,
											"end": 14003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13932,
											"end": 14003,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 13932,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14013,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 14081,
											"end": 14083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14070,
											"end": 14079,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14066,
											"end": 14084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14057,
											"end": 14063,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14013,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 14013,
											"end": 14085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14013,
											"end": 14085,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 14013,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14095,
											"end": 14167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14163,
											"end": 14165,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14152,
											"end": 14161,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14139,
											"end": 14145,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14095,
											"end": 14167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 14095,
											"end": 14167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14095,
											"end": 14167,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14095,
											"end": 14167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 14174,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 14174,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 14174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 14174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 14174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 14174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 14174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20.sol",
								"contracts/IERC20.sol",
								"contracts/location.sol",
								"extensions/IERC20Metadata.sol",
								"interfaces/draft-IERC6093.sol",
								"utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DeviceCount()": "9af8a5eb",
							"_calculateDistance(uint256,uint256,uint256,uint256)": "563a6c7a",
							"addDriver(address)": "63a411c0",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"devices(address)": "e7b4cac6",
							"endTime()": "3197cbb6",
							"getDevice()": "8ea286c2",
							"latitude()": "4fd7d76a",
							"longitude()": "589af69c",
							"name()": "06fdde03",
							"optIn(uint256,uint256)": "b620b8cb",
							"owner()": "8da5cb5b",
							"radius()": "217f4353",
							"rewardAmount()": "f7b2a7be",
							"startTime()": "78e97925",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_latitude\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_longitude\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_radius\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DeviceCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lat1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lon1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lat2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lon2\",\"type\":\"uint256\"}],\"name\":\"_calculateDistance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_public_address\",\"type\":\"address\"}],\"name\":\"addDriver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"devices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"complianceCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonComplianceCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Geologix.DeviceState\",\"name\":\"deviceState\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"public_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastRecorededTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDevice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"complianceCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonComplianceCount\",\"type\":\"uint256\"},{\"internalType\":\"enum Geologix.DeviceState\",\"name\":\"deviceState\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latitude\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longitude\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_latitude\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_longitude\",\"type\":\"uint256\"}],\"name\":\"optIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"radius\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the ERC. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/location.sol\":\"Geologix\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xd81d3cd11a5cc4e1acf9b5b7af53f279ea65df91de539db131e197774830ba7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffcb8bf996229e6dfbdc16054023528e10a53a39621451d344763c2fb047daeb\",\"dweb:/ipfs/QmWifyKuvhQBka64pJVZiwuvbLbrGnmxqYeFVdPL6Acmh9\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"contracts/location.sol\":{\"keccak256\":\"0x8fe8f85db262fd934bd0ae784dc9df3a6ddd173945425b8c75ed88f64047afd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b08a49045359ea050de21a01b8cf5354ee12d9739959844e3161e169017a2d9e\",\"dweb:/ipfs/QmaSe2XNRbS5hLYTwLzUfYFTcReNM9JQsb8B4wEYjvYtdC\"]},\"extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xc14a0988e51257843d3de5afaac0219b5ca5673a78173b73b17a71feaa896802\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1750255fc47dd13448c7ba0b40c15691159ccea47ffac0d70450ed081bcd199b\",\"dweb:/ipfs/QmZamWGFwXP55D2Jf5xr5gP1s3C3o5T9JnSeW6aPMhA9mc\"]},\"interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "contracts/location.sol:Geologix",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 28,
								"contract": "contracts/location.sol:Geologix",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 30,
								"contract": "contracts/location.sol:Geologix",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 32,
								"contract": "contracts/location.sol:Geologix",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 34,
								"contract": "contracts/location.sol:Geologix",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 599,
								"contract": "contracts/location.sol:Geologix",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 601,
								"contract": "contracts/location.sol:Geologix",
								"label": "latitude",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 603,
								"contract": "contracts/location.sol:Geologix",
								"label": "longitude",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 605,
								"contract": "contracts/location.sol:Geologix",
								"label": "radius",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 607,
								"contract": "contracts/location.sol:Geologix",
								"label": "startTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 609,
								"contract": "contracts/location.sol:Geologix",
								"label": "endTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 611,
								"contract": "contracts/location.sol:Geologix",
								"label": "rewardAmount",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 637,
								"contract": "contracts/location.sol:Geologix",
								"label": "devices",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_struct(Device)632_storage)"
							},
							{
								"astId": 639,
								"contract": "contracts/location.sol:Geologix",
								"label": "DeviceCount",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(DeviceState)616": {
								"encoding": "inplace",
								"label": "enum Geologix.DeviceState",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Device)632_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Geologix.Device)",
								"numberOfBytes": "32",
								"value": "t_struct(Device)632_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Device)632_storage": {
								"encoding": "inplace",
								"label": "struct Geologix.Device",
								"members": [
									{
										"astId": 618,
										"contract": "contracts/location.sol:Geologix",
										"label": "complianceCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 620,
										"contract": "contracts/location.sol:Geologix",
										"label": "nonComplianceCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 623,
										"contract": "contracts/location.sol:Geologix",
										"label": "deviceState",
										"offset": 0,
										"slot": "2",
										"type": "t_enum(DeviceState)616"
									},
									{
										"astId": 625,
										"contract": "contracts/location.sol:Geologix",
										"label": "public_address",
										"offset": 1,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 627,
										"contract": "contracts/location.sol:Geologix",
										"label": "lastRecorededTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 629,
										"contract": "contracts/location.sol:Geologix",
										"label": "payedAmount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 631,
										"contract": "contracts/location.sol:Geologix",
										"label": "isActive",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xc14a0988e51257843d3de5afaac0219b5ca5673a78173b73b17a71feaa896802\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1750255fc47dd13448c7ba0b40c15691159ccea47ffac0d70450ed081bcd199b\",\"dweb:/ipfs/QmZamWGFwXP55D2Jf5xr5gP1s3C3o5T9JnSeW6aPMhA9mc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1138
						],
						"ERC20": [
							514
						],
						"IERC20": [
							592
						],
						"IERC20Errors": [
							1013
						],
						"IERC20Metadata": [
							971
						]
					},
					"id": 515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:0"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 593,
							"src": "131:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 592,
										"src": "139:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "extensions/IERC20Metadata.sol",
							"file": "./../extensions/IERC20Metadata.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 972,
							"src": "168:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 971,
										"src": "176:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "utils/Context.sol",
							"file": "./../utils/Context.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 1139,
							"src": "235:47:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1138,
										"src": "243:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/draft-IERC6093.sol",
							"file": "./../interfaces/draft-IERC6093.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 1109,
							"src": "284:64:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1013,
										"src": "292:12:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Context",
										"nameLocations": [
											"1431:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1138,
										"src": "1431:7:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1431:7:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC20",
										"nameLocations": [
											"1440:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 592,
										"src": "1440:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "1440:6:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1448:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 971,
										"src": "1448:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "1448:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "IERC20Errors",
										"nameLocations": [
											"1464:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1013,
										"src": "1464:12:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "1464:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "350:1053:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the ERC may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								1013,
								971,
								592,
								1138
							],
							"name": "ERC20",
							"nameLocation": "1422:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1527:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1483:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 21,
										"keyName": "account",
										"keyNameLocation": "1499:7:0",
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1491:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1483:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1510:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1615:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1543:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 27,
										"keyName": "account",
										"keyNameLocation": "1559:7:0",
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1551:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1543:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"keyName": "spender",
											"keyNameLocation": "1586:7:0",
											"keyType": {
												"id": 24,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1578:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1570:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 25,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1597:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1649:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1633:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 29,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1633:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1683:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1668:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 31,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1668:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1709:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1694:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 33,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1694:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1955:57:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 42,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1965:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 43,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1973:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1965:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "1965:13:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 47,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1988:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1988:17:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1723:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1925:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 36,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1946:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1932:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 38,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1932:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:44:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1955:0:0"
									},
									"scope": 514,
									"src": "1899:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										958
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2137:29:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "2154:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "2147:12:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2018:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2086:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2122:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 54,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2122:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:15:0"
									},
									"scope": 514,
									"src": "2077:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										964
									],
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "2341:31:0",
										"statements": [
											{
												"expression": {
													"id": 66,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "2358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 65,
												"id": 67,
												"nodeType": "Return",
												"src": "2351:14:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2172:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2288:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2294:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2326:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:15:0"
									},
									"scope": 514,
									"src": "2279:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										970
									],
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "3061:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3078:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 74,
												"id": 76,
												"nodeType": "Return",
												"src": "3071:9:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2378:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3014:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3022:2:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3054:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3054:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:7:0"
									},
									"scope": 514,
									"src": "3005:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										541
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3208:36:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "3225:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "3218:19:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3093:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3167:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:9:0"
									},
									"scope": 514,
									"src": "3147:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										549
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "3376:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 95,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "3393:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 97,
													"indexExpression": {
														"id": 96,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "3403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3393:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 94,
												"id": 98,
												"nodeType": "Return",
												"src": "3386:25:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3250:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3311:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3329:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3321:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3320:17:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3367:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:9:0"
									},
									"scope": 514,
									"src": "3302:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										559
									],
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3688:103:0",
										"statements": [
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3706:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "3698:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 110,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3698:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 112,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "3714:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3698:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 116,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3746:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3753:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 118,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "3757:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 115,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "3736:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3736:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "3736:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 109,
												"id": 122,
												"nodeType": "Return",
												"src": "3773:11:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "3424:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3622:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3631:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3643:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:27:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3682:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3682:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:6:0"
									},
									"scope": 514,
									"src": "3613:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										569
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "3938:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "3955:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3955:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3955:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "3948:34:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3797:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3858:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3876:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:0"
									},
									"scope": 514,
									"src": "3849:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										579
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "4375:107:0",
										"statements": [
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4393:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "4385:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 151,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4385:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 153,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "4401:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4401:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4385:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4432:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4448:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 156,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															405,
															465
														],
														"referencedDeclaration": 405,
														"src": "4423:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4423:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "4423:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4471:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 150,
												"id": 163,
												"nodeType": "Return",
												"src": "4464:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "3995:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4305:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4321:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4313:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4338:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4330:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4312:32:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4369:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4369:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4368:6:0"
									},
									"scope": 514,
									"src": "4296:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										591
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "5135:151:0",
										"statements": [
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5153:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 196,
														"src": "5145:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 177,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5145:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 179,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "5163:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5163:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5145:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 183,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5201:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 184,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "5207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5216:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "5185:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5185:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5185:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5248:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5252:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 188,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "5232:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "5232:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 176,
												"id": 195,
												"nodeType": "Return",
												"src": "5268:11:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "4488:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the ERC. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5051:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5072:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5064:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5086:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5078:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5098:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5063:41:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5129:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5129:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5128:6:0"
									},
									"scope": 514,
									"src": "5042:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "5728:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 207,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "5742:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 208,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5750:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5750:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5742:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 221,
												"nodeType": "IfStatement",
												"src": "5738:86:0",
												"trueBody": {
													"id": 220,
													"nodeType": "Block",
													"src": "5762:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5810:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5802:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 214,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5802:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5802:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 213,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "5783:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5783:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 219,
															"nodeType": "RevertStatement",
															"src": "5776:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "5837:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5851:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5843:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5843:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5837:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "IfStatement",
												"src": "5833:86:0",
												"trueBody": {
													"id": 235,
													"nodeType": "Block",
													"src": "5855:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5905:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5897:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 229,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5897:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5897:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 228,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "5876:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5876:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 234,
															"nodeType": "RevertStatement",
															"src": "5869:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "5936:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "5942:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 240,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "5946:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "5928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5928:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "5928:24:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "5292:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5668:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5686:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5678:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5700:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5692:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5712:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5704:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5677:41:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5728:0:0"
									},
									"scope": 514,
									"src": "5659:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "6349:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 254,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "6363:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6379:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6371:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 255,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6371:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6371:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6363:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "6537:362:0",
													"statements": [
														{
															"assignments": [
																266
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 266,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6559:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 291,
																	"src": "6551:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 265,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6551:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 270,
															"initialValue": {
																"baseExpression": {
																	"id": 267,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "6573:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 269,
																"indexExpression": {
																	"id": 268,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "6583:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6573:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6551:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 271,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "6606:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "6620:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6606:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 281,
															"nodeType": "IfStatement",
															"src": "6602:115:0",
															"trueBody": {
																"id": 280,
																"nodeType": "Block",
																"src": "6627:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 275,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 247,
																					"src": "6677:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 276,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 266,
																					"src": "6683:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 277,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 251,
																					"src": "6696:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 274,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "6652:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6652:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 279,
																		"nodeType": "RevertStatement",
																		"src": "6645:57:0"
																	}
																]
															}
														},
														{
															"id": 290,
															"nodeType": "UncheckedBlock",
															"src": "6730:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 282,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "6837:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 284,
																			"indexExpression": {
																				"id": 283,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 247,
																				"src": "6847:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6837:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 285,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "6855:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 286,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 251,
																				"src": "6869:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6855:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6837:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 289,
																	"nodeType": "ExpressionStatement",
																	"src": "6837:37:0"
																}
															]
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6359:540:0",
												"trueBody": {
													"id": 264,
													"nodeType": "Block",
													"src": "6383:148:0",
													"statements": [
														{
															"expression": {
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 260,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "6499:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 261,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "6515:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6499:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 263,
															"nodeType": "ExpressionStatement",
															"src": "6499:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "6913:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6927:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 294,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6919:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6919:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6913:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7128:206:0",
													"statements": [
														{
															"id": 311,
															"nodeType": "UncheckedBlock",
															"src": "7142:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 305,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "7287:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 307,
																			"indexExpression": {
																				"id": 306,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "7297:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7287:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 308,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 251,
																			"src": "7304:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7287:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 310,
																	"nodeType": "ExpressionStatement",
																	"src": "7287:22:0"
																}
															]
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "6909:425:0",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "6931:191:0",
													"statements": [
														{
															"id": 303,
															"nodeType": "UncheckedBlock",
															"src": "6945:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 299,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 30,
																			"src": "7076:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 251,
																			"src": "7092:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7076:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 302,
																	"nodeType": "ExpressionStatement",
																	"src": "7076:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 315,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7358:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7364:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7368:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "7349:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7349:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "EmitStatement",
												"src": "7344:30:0"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "5965:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6299:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6291:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6313:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6305:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6325:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6317:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6290:41:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6349:0:0"
									},
									"scope": 514,
									"src": "6274:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "7780:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 329,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "7794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 330,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7805:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7805:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7794:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "7790:91:0",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "7817:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7867:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7859:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 336,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7859:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7859:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 335,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "7838:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7838:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 341,
															"nodeType": "RevertStatement",
															"src": "7831:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7906:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7898:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 345,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7898:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7898:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "7910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "7919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "7890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7890:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "7890:35:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "7387:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7733:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7756:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7738:32:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7780:0:0"
									},
									"scope": 514,
									"src": "7724:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "8306:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 362,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "8320:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8339:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8331:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 363,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8331:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8331:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8320:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "8316:89:0",
												"trueBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "8343:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8391:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8383:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 369,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8383:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8383:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 368,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "8364:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8364:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 374,
															"nodeType": "RevertStatement",
															"src": "8357:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8439:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8431:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 379,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8431:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8431:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "8443:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 377,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "8414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8414:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "8414:35:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "7938:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8259:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8273:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "8265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8290:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "8282:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:32:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8306:0:0"
									},
									"scope": 514,
									"src": "8250:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "9066:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "9092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "9101:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9108:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 397,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															405,
															465
														],
														"referencedDeclaration": 465,
														"src": "9076:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9076:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "9076:37:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "8462:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9001:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9018:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "9010:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "9025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9050:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "9042:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9009:47:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9066:0:0"
									},
									"scope": 514,
									"src": "8992:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "10050:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "10064:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10073:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10073:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10064:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "10060:89:0",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "10085:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10135:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10127:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10127:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10127:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "10106:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10106:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "10099:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 432,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "10162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10181:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10173:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 433,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10173:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10173:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10162:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "10158:90:0",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "10185:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10234:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10226:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 439,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10226:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10226:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "10206:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10206:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "10199:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 447,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "10257:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 450,
															"indexExpression": {
																"id": 448,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "10269:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10257:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 451,
														"indexExpression": {
															"id": 449,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "10276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10257:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 452,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "10287:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10257:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "10257:35:0"
											},
											{
												"condition": {
													"id": 455,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 414,
													"src": "10306:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "10302:76:0",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "10317:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 457,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "10345:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 458,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "10352:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 459,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "10361:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 456,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "10336:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10336:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "EmitStatement",
															"src": "10331:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "9126:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9961:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "9970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "9985:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10010:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "10002:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10022:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "10017:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10017:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:63:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10050:0:0"
									},
									"scope": 514,
									"src": "9952:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10755:388:0",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10773:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "10765:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [
														{
															"id": 478,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "10802:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "10809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 477,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10792:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10792:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10765:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "10831:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10856:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 484,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10856:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 483,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10851:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10851:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10865:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10851:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10831:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "IfStatement",
												"src": "10827:310:0",
												"trueBody": {
													"id": 510,
													"nodeType": "Block",
													"src": "10870:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 489,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "10888:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "10907:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10888:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 499,
															"nodeType": "IfStatement",
															"src": "10884:130:0",
															"trueBody": {
																"id": 498,
																"nodeType": "Block",
																"src": "10914:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 493,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "10966:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 494,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 476,
																					"src": "10975:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 495,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "10993:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 492,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "10939:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10939:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 497,
																		"nodeType": "RevertStatement",
																		"src": "10932:67:0"
																	}
																]
															}
														},
														{
															"id": 509,
															"nodeType": "UncheckedBlock",
															"src": "11027:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 501,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "11064:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 502,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 470,
																				"src": "11071:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 503,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 476,
																					"src": "11080:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 504,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "11099:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11080:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11106:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 500,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				405,
																				465
																			],
																			"referencedDeclaration": 465,
																			"src": "11055:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11055:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 508,
																	"nodeType": "ExpressionStatement",
																	"src": "11055:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "10390:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10675:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10699:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10691:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10714:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10731:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10723:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10690:47:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10755:0:0"
									},
									"scope": 514,
									"src": "10666:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 515,
							"src": "1404:9741:0",
							"usedErrors": [
								983,
								988,
								993,
								1002,
								1007,
								1012
							],
							"usedEvents": [
								526,
								535
							]
						}
					],
					"src": "105:11041:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							592
						]
					},
					"id": 593,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 592,
							"linearizedBaseContracts": [
								592
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 526,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 535,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 592,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 592,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 592,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 592,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 592,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 592,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 593,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								526,
								535
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"contracts/location.sol": {
				"ast": {
					"absolutePath": "contracts/location.sol",
					"exportedSymbols": {
						"Context": [
							1138
						],
						"ERC20": [
							514
						],
						"Geologix": [
							945
						],
						"IERC20": [
							592
						],
						"IERC20Errors": [
							1013
						],
						"IERC20Metadata": [
							971
						]
					},
					"id": 946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 946,
							"sourceUnit": 515,
							"src": "58:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 596,
										"name": "ERC20",
										"nameLocations": [
											"102:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 514,
										"src": "102:5:2"
									},
									"id": 597,
									"nodeType": "InheritanceSpecifier",
									"src": "102:5:2"
								}
							],
							"canonicalName": "Geologix",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 945,
							"linearizedBaseContracts": [
								945,
								514,
								1013,
								971,
								592,
								1138
							],
							"name": "Geologix",
							"nameLocation": "90:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 599,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "131:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "116:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 598,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "116:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fd7d76a",
									"id": 601,
									"mutability": "mutable",
									"name": "latitude",
									"nameLocation": "154:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "142:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 600,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "142:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "589af69c",
									"id": 603,
									"mutability": "mutable",
									"name": "longitude",
									"nameLocation": "180:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "168:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 602,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "168:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "217f4353",
									"id": 605,
									"mutability": "mutable",
									"name": "radius",
									"nameLocation": "207:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "195:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 604,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "195:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 607,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "231:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "219:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 606,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "219:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 609,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "258:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "246:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 608,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "246:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7b2a7be",
									"id": 611,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nameLocation": "283:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "271:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 610,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "271:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Geologix.DeviceState",
									"id": 616,
									"members": [
										{
											"id": 612,
											"name": "Created",
											"nameLocation": "323:7:2",
											"nodeType": "EnumValue",
											"src": "323:7:2"
										},
										{
											"id": 613,
											"name": "InZone",
											"nameLocation": "332:6:2",
											"nodeType": "EnumValue",
											"src": "332:6:2"
										},
										{
											"id": 614,
											"name": "OutZone",
											"nameLocation": "340:7:2",
											"nodeType": "EnumValue",
											"src": "340:7:2"
										},
										{
											"id": 615,
											"name": "Completed",
											"nameLocation": "349:9:2",
											"nodeType": "EnumValue",
											"src": "349:9:2"
										}
									],
									"name": "DeviceState",
									"nameLocation": "309:11:2",
									"nodeType": "EnumDefinition",
									"src": "304:55:2"
								},
								{
									"canonicalName": "Geologix.Device",
									"id": 632,
									"members": [
										{
											"constant": false,
											"id": 618,
											"mutability": "mutable",
											"name": "complianceCount",
											"nameLocation": "394:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 632,
											"src": "389:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 617,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "389:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 620,
											"mutability": "mutable",
											"name": "nonComplianceCount",
											"nameLocation": "424:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 632,
											"src": "419:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 619,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "419:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 623,
											"mutability": "mutable",
											"name": "deviceState",
											"nameLocation": "464:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 632,
											"src": "452:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_DeviceState_$616",
												"typeString": "enum Geologix.DeviceState"
											},
											"typeName": {
												"id": 622,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 621,
													"name": "DeviceState",
													"nameLocations": [
														"452:11:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 616,
													"src": "452:11:2"
												},
												"referencedDeclaration": 616,
												"src": "452:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_DeviceState_$616",
													"typeString": "enum Geologix.DeviceState"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 625,
											"mutability": "mutable",
											"name": "public_address",
											"nameLocation": "493:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 632,
											"src": "485:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 624,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "485:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 627,
											"mutability": "mutable",
											"name": "lastRecorededTime",
											"nameLocation": "522:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 632,
											"src": "517:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 626,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "517:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 629,
											"mutability": "mutable",
											"name": "payedAmount",
											"nameLocation": "554:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 632,
											"src": "549:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 628,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "549:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 631,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "580:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 632,
											"src": "575:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 630,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "575:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Device",
									"nameLocation": "372:6:2",
									"nodeType": "StructDefinition",
									"scope": 945,
									"src": "365:230:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e7b4cac6",
									"id": 637,
									"mutability": "mutable",
									"name": "devices",
									"nameLocation": "635:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "601:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
										"typeString": "mapping(address => struct Geologix.Device)"
									},
									"typeName": {
										"id": 636,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 633,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "609:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "601:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
											"typeString": "mapping(address => struct Geologix.Device)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 635,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 634,
												"name": "Device",
												"nameLocations": [
													"620:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 632,
												"src": "620:6:2"
											},
											"referencedDeclaration": 632,
											"src": "620:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Device_$632_storage_ptr",
												"typeString": "struct Geologix.Device"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9af8a5eb",
									"id": 639,
									"mutability": "mutable",
									"name": "DeviceCount",
									"nameLocation": "660:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "648:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 638,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "648:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "704:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 642,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "722:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "726:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "722:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 644,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "736:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "722:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "714:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "714:28:2"
											},
											{
												"id": 648,
												"nodeType": "PlaceholderStatement",
												"src": "752:1:2"
											}
										]
									},
									"id": 650,
									"name": "onlyOwner",
									"nameLocation": "692:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:2:2"
									},
									"src": "683:77:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "957:221:2",
										"statements": [
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 669,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "967:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 670,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "975:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "979:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "975:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "967:18:2"
											},
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "latitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "995:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 675,
														"name": "_latitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "1006:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "995:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "995:20:2"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "longitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "1025:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 679,
														"name": "_longitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1037:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1025:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1025:22:2"
											},
											{
												"expression": {
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 682,
														"name": "radius",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "1057:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 683,
														"name": "_radius",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "1066:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1057:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "1057:16:2"
											},
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 686,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1083:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 687,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1095:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1083:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "1083:22:2"
											},
											{
												"expression": {
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 690,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "1115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 691,
														"name": "_endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "1125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1115:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "1115:18:2"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 694,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "1143:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 695,
														"name": "_rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1158:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1143:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "1143:28:2"
											}
										]
									},
									"id": 699,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "52546f6b656e",
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "941:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cfd33e8359991f3d992809e23e55380382bfa624696d22836fbabf0de067e9dd",
														"typeString": "literal_string \"RToken\""
													},
													"value": "RToken"
												},
												{
													"hexValue": "5254",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_94a57d255a047a38b7e422127620495850278b096df7f553e5d985136f2c0c8e",
														"typeString": "literal_string \"RT\""
													},
													"value": "RT"
												}
											],
											"id": 667,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 664,
												"name": "ERC20",
												"nameLocations": [
													"935:5:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 514,
												"src": "935:5:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "935:21:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "_latitude",
												"nameLocation": "796:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "791:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "_longitude",
												"nameLocation": "820:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "815:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "815:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "_radius",
												"nameLocation": "845:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "840:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "840:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "867:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "862:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "892:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "887:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "887:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "_rewardAmount",
												"nameLocation": "915:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "910:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "910:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:153:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "957:0:2"
									},
									"scope": 945,
									"src": "770:408:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "1247:144:2",
										"statements": [
											{
												"expression": {
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1257:14:2",
													"subExpression": {
														"id": 706,
														"name": "DeviceCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1257:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "1257:14:2"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 709,
															"name": "devices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "1281:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																"typeString": "mapping(address => struct Geologix.Device storage ref)"
															}
														},
														"id": 711,
														"indexExpression": {
															"id": 710,
															"name": "_public_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1289:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1281:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Device_$632_storage",
															"typeString": "struct Geologix.Device storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1315:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1318:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 715,
																	"name": "DeviceState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "1321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_DeviceState_$616_$",
																		"typeString": "type(enum Geologix.DeviceState)"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1333:7:2",
																"memberName": "Created",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 612,
																"src": "1321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_DeviceState_$616",
																	"typeString": "enum Geologix.DeviceState"
																}
															},
															{
																"id": 717,
																"name": "_public_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "1342:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 718,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1359:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1365:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1359:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "74727565",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1379:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_enum$_DeviceState_$616",
																	"typeString": "enum Geologix.DeviceState"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 712,
															"name": "Device",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "1308:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Device_$632_storage_ptr_$",
																"typeString": "type(struct Geologix.Device storage pointer)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1308:76:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Device_$632_memory_ptr",
															"typeString": "struct Geologix.Device memory"
														}
													},
													"src": "1281:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Device_$632_storage",
														"typeString": "struct Geologix.Device storage ref"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "1281:103:2"
											}
										]
									},
									"functionSelector": "63a411c0",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 704,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 703,
												"name": "onlyOwner",
												"nameLocations": [
													"1237:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 650,
												"src": "1237:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1237:9:2"
										}
									],
									"name": "addDriver",
									"nameLocation": "1193:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "_public_address",
												"nameLocation": "1211:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1203:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:25:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1247:0:2"
									},
									"scope": 945,
									"src": "1184:207:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "1454:831:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 734,
																		"name": "devices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "1469:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																			"typeString": "mapping(address => struct Geologix.Device storage ref)"
																		}
																	},
																	"id": 737,
																	"indexExpression": {
																		"expression": {
																			"id": 735,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1477:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1481:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1477:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1469:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Device_$632_storage",
																		"typeString": "struct Geologix.Device storage ref"
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1489:14:2",
																"memberName": "public_address",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 625,
																"src": "1469:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1515:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1507:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 739,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1507:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1507:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1469:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446576696365206e6f742072656769737465726564",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1519:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66",
																"typeString": "literal_string \"Device not registered\""
															},
															"value": "Device not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66",
																"typeString": "literal_string \"Device not registered\""
															}
														],
														"id": 733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1461:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "1461:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 748,
																	"name": "devices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "1557:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																		"typeString": "mapping(address => struct Geologix.Device storage ref)"
																	}
																},
																"id": 751,
																"indexExpression": {
																	"expression": {
																		"id": 749,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1565:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1569:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1565:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1557:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Device_$632_storage",
																	"typeString": "struct Geologix.Device storage ref"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1577:8:2",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 631,
															"src": "1557:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468652064657669636520436f6e7472616374206973206e6f7420616374697665",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1587:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc",
																"typeString": "literal_string \"the device Contract is not active\""
															},
															"value": "the device Contract is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eddd359cc1f07e839fa533411c422ec8b317e874ea0ba172b958b51edc0e6abc",
																"typeString": "literal_string \"the device Contract is not active\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1549:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "1549:74:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 756,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1638:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1644:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1638:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 758,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "1656:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 765,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1732:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1738:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1732:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 767,
															"name": "endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "1750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1732:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 796,
													"nodeType": "IfStatement",
													"src": "1728:257:2",
													"trueBody": {
														"id": 795,
														"nodeType": "Block",
														"src": "1759:226:2",
														"statements": [
															{
																"expression": {
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 769,
																				"name": "devices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "1770:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																					"typeString": "mapping(address => struct Geologix.Device storage ref)"
																				}
																			},
																			"id": 772,
																			"indexExpression": {
																				"expression": {
																					"id": 770,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1778:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1782:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1778:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1770:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Device_$632_storage",
																				"typeString": "struct Geologix.Device storage ref"
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "1790:8:2",
																		"memberName": "isActive",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 631,
																		"src": "1770:28:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "1770:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 776,
																"nodeType": "ExpressionStatement",
																"src": "1770:36:2"
															},
															{
																"expression": {
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 777,
																				"name": "devices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "1851:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																					"typeString": "mapping(address => struct Geologix.Device storage ref)"
																				}
																			},
																			"id": 780,
																			"indexExpression": {
																				"expression": {
																					"id": 778,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1859:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1863:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1859:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1851:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Device_$632_storage",
																				"typeString": "struct Geologix.Device storage ref"
																			}
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "1871:11:2",
																		"memberName": "payedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 629,
																		"src": "1851:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 782,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "1885:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1851:46:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 784,
																"nodeType": "ExpressionStatement",
																"src": "1851:46:2"
															},
															{
																"expression": {
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 785,
																				"name": "devices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "1907:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																					"typeString": "mapping(address => struct Geologix.Device storage ref)"
																				}
																			},
																			"id": 788,
																			"indexExpression": {
																				"expression": {
																					"id": 786,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1915:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1919:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1915:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1907:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Device_$632_storage",
																				"typeString": "struct Geologix.Device storage ref"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "1927:11:2",
																		"memberName": "deviceState",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 623,
																		"src": "1907:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_DeviceState_$616",
																			"typeString": "enum Geologix.DeviceState"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 790,
																			"name": "DeviceState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 616,
																			"src": "1941:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_DeviceState_$616_$",
																				"typeString": "type(enum Geologix.DeviceState)"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1953:9:2",
																		"memberName": "Completed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 615,
																		"src": "1941:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_DeviceState_$616",
																			"typeString": "enum Geologix.DeviceState"
																		}
																	},
																	"src": "1907:55:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DeviceState_$616",
																		"typeString": "enum Geologix.DeviceState"
																	}
																},
																"id": 793,
																"nodeType": "ExpressionStatement",
																"src": "1907:55:2"
															},
															{
																"functionReturnParameters": 732,
																"id": 794,
																"nodeType": "Return",
																"src": "1972:7:2"
															}
														]
													}
												},
												"id": 797,
												"nodeType": "IfStatement",
												"src": "1634:351:2",
												"trueBody": {
													"id": 764,
													"nodeType": "Block",
													"src": "1667:55:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "436f6e747261637420686173206e6f74207374617274656420796574",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1684:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b",
																			"typeString": "literal_string \"Contract has not started yet\""
																		},
																		"value": "Contract has not started yet"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_4cface5ff02df0cfb3bcb4cb14beba99690aab5fc795271f930a073da39bc41b",
																			"typeString": "literal_string \"Contract has not started yet\""
																		}
																	],
																	"id": 760,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1677:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1677:38:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 763,
															"nodeType": "ExpressionStatement",
															"src": "1677:38:2"
														}
													]
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 799,
															"name": "_latitude",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "2013:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 800,
															"name": "_longitude",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "2024:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 798,
														"name": "_isWithinArea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "1999:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256) view returns (bool)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "2159:120:2",
													"statements": [
														{
															"expression": {
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2169:40:2",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 819,
																			"name": "devices",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2169:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																				"typeString": "mapping(address => struct Geologix.Device storage ref)"
																			}
																		},
																		"id": 822,
																		"indexExpression": {
																			"expression": {
																				"id": 820,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2177:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2181:6:2",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2177:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2169:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Device_$632_storage",
																			"typeString": "struct Geologix.Device storage ref"
																		}
																	},
																	"id": 823,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2189:18:2",
																	"memberName": "nonComplianceCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 620,
																	"src": "2169:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "2169:40:2"
														},
														{
															"expression": {
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 826,
																			"name": "devices",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2219:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																				"typeString": "mapping(address => struct Geologix.Device storage ref)"
																			}
																		},
																		"id": 829,
																		"indexExpression": {
																			"expression": {
																				"id": 827,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2227:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2231:6:2",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2227:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2219:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Device_$632_storage",
																			"typeString": "struct Geologix.Device storage ref"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2239:11:2",
																	"memberName": "deviceState",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 623,
																	"src": "2219:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DeviceState_$616",
																		"typeString": "enum Geologix.DeviceState"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 831,
																		"name": "DeviceState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "2253:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_DeviceState_$616_$",
																			"typeString": "type(enum Geologix.DeviceState)"
																		}
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2265:7:2",
																	"memberName": "OutZone",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 614,
																	"src": "2253:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DeviceState_$616",
																		"typeString": "enum Geologix.DeviceState"
																	}
																},
																"src": "2219:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_DeviceState_$616",
																	"typeString": "enum Geologix.DeviceState"
																}
															},
															"id": 834,
															"nodeType": "ExpressionStatement",
															"src": "2219:53:2"
														}
													]
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "1995:284:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "2037:116:2",
													"statements": [
														{
															"expression": {
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2047:37:2",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 802,
																			"name": "devices",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2047:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																				"typeString": "mapping(address => struct Geologix.Device storage ref)"
																			}
																		},
																		"id": 805,
																		"indexExpression": {
																			"expression": {
																				"id": 803,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2055:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2059:6:2",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2055:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2047:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Device_$632_storage",
																			"typeString": "struct Geologix.Device storage ref"
																		}
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2067:15:2",
																	"memberName": "complianceCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 618,
																	"src": "2047:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 808,
															"nodeType": "ExpressionStatement",
															"src": "2047:37:2"
														},
														{
															"expression": {
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 809,
																			"name": "devices",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2094:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																				"typeString": "mapping(address => struct Geologix.Device storage ref)"
																			}
																		},
																		"id": 812,
																		"indexExpression": {
																			"expression": {
																				"id": 810,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2102:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2106:6:2",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2102:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2094:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Device_$632_storage",
																			"typeString": "struct Geologix.Device storage ref"
																		}
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2114:11:2",
																	"memberName": "deviceState",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 623,
																	"src": "2094:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DeviceState_$616",
																		"typeString": "enum Geologix.DeviceState"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 814,
																		"name": "DeviceState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "2128:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_DeviceState_$616_$",
																			"typeString": "type(enum Geologix.DeviceState)"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2140:6:2",
																	"memberName": "InZone",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "2128:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DeviceState_$616",
																		"typeString": "enum Geologix.DeviceState"
																	}
																},
																"src": "2094:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_DeviceState_$616",
																	"typeString": "enum Geologix.DeviceState"
																}
															},
															"id": 817,
															"nodeType": "ExpressionStatement",
															"src": "2094:52:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b620b8cb",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "optIn",
									"nameLocation": "1406:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "_latitude",
												"nameLocation": "1417:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1412:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1412:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "_longitude",
												"nameLocation": "1433:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1428:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1428:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:33:2"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:0:2"
									},
									"scope": 945,
									"src": "1397:888:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "2375:211:2",
										"statements": [
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "distance",
														"nameLocation": "2471:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "2466:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 847,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2466:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"arguments": [
														{
															"id": 850,
															"name": "latitude",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "2501:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 851,
															"name": "longitude",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2511:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 852,
															"name": "_latitude",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "2522:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 853,
															"name": "_longitude",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "2533:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 849,
														"name": "_calculateDistance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "2482:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2482:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2466:78:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "distance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2561:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 857,
														"name": "radius",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "2573:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2561:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 846,
												"id": 859,
												"nodeType": "Return",
												"src": "2554:25:2"
											}
										]
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isWithinArea",
									"nameLocation": "2300:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "_latitude",
												"nameLocation": "2319:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2314:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2314:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "_longitude",
												"nameLocation": "2335:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2330:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2330:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:33:2"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2369:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 844,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2369:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:6:2"
									},
									"scope": 945,
									"src": "2291:295:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "2691:53:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "lat1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "2709:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 875,
																	"name": "lat2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "2716:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2709:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 877,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2708:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 878,
																	"name": "lon1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2725:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 879,
																	"name": "lon2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "2732:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2725:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 881,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2724:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2708:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 873,
												"id": 883,
												"nodeType": "Return",
												"src": "2701:36:2"
											}
										]
									},
									"functionSelector": "563a6c7a",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateDistance",
									"nameLocation": "2601:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "lat1",
												"nameLocation": "2625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2620:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2620:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "lon1",
												"nameLocation": "2636:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2631:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "lat2",
												"nameLocation": "2647:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2642:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2642:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "lon2",
												"nameLocation": "2658:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2653:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2653:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:44:2"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2685:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2685:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:6:2"
									},
									"scope": 945,
									"src": "2592:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "2797:152:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2816:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2827:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2807:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2807:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "2807:33:2"
											},
											{
												"expression": {
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 895,
																"name": "devices",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2897:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																	"typeString": "mapping(address => struct Geologix.Device storage ref)"
																}
															},
															"id": 897,
															"indexExpression": {
																"id": 896,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "2905:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2897:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Device_$632_storage",
																"typeString": "struct Geologix.Device storage ref"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2916:11:2",
														"memberName": "payedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 629,
														"src": "2897:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 899,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "2930:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2897:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "2897:45:2"
											}
										]
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payReward",
									"nameLocation": "2759:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2778:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2770:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:19:2"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:0:2"
									},
									"scope": 945,
									"src": "2750:199:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "3069:251:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 914,
																		"name": "devices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "3087:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
																			"typeString": "mapping(address => struct Geologix.Device storage ref)"
																		}
																	},
																	"id": 917,
																	"indexExpression": {
																		"expression": {
																			"id": 915,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3095:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3099:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3095:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3087:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Device_$632_storage",
																		"typeString": "struct Geologix.Device storage ref"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3107:14:2",
																"memberName": "public_address",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 625,
																"src": "3087:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3133:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3125:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 919,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3125:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3125:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3087:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446576696365206e6f742072656769737465726564",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3137:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66",
																"typeString": "literal_string \"Device not registered\""
															},
															"value": "Device not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af304d76209516ea194c01275ed783d12b9d5da1ac9721c1f7e87f8f2a3e2b66",
																"typeString": "literal_string \"Device not registered\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "3079:82:2"
											},
											{
												"assignments": [
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "curDevice",
														"nameLocation": "3185:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 943,
														"src": "3171:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Device_$632_memory_ptr",
															"typeString": "struct Geologix.Device"
														},
														"typeName": {
															"id": 928,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 927,
																"name": "Device",
																"nameLocations": [
																	"3171:6:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 632,
																"src": "3171:6:2"
															},
															"referencedDeclaration": 632,
															"src": "3171:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Device_$632_storage_ptr",
																"typeString": "struct Geologix.Device"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"baseExpression": {
														"id": 930,
														"name": "devices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3197:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Device_$632_storage_$",
															"typeString": "mapping(address => struct Geologix.Device storage ref)"
														}
													},
													"id": 933,
													"indexExpression": {
														"expression": {
															"id": 931,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3205:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3209:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3205:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3197:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Device_$632_storage",
														"typeString": "struct Geologix.Device storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3171:45:2"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 935,
																"name": "curDevice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "3234:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Device_$632_memory_ptr",
																	"typeString": "struct Geologix.Device memory"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3244:15:2",
															"memberName": "complianceCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 618,
															"src": "3234:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 937,
																"name": "curDevice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "3261:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Device_$632_memory_ptr",
																	"typeString": "struct Geologix.Device memory"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3271:18:2",
															"memberName": "nonComplianceCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 620,
															"src": "3261:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 939,
																"name": "curDevice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "3291:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Device_$632_memory_ptr",
																	"typeString": "struct Geologix.Device memory"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3301:11:2",
															"memberName": "deviceState",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 623,
															"src": "3291:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_DeviceState_$616",
																"typeString": "enum Geologix.DeviceState"
															}
														}
													],
													"id": 941,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3233:80:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_enum$_DeviceState_$616_$",
														"typeString": "tuple(uint256,uint256,enum Geologix.DeviceState)"
													}
												},
												"functionReturnParameters": 912,
												"id": 942,
												"nodeType": "Return",
												"src": "3226:87:2"
											}
										]
									},
									"functionSelector": "8ea286c2",
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDevice",
									"nameLocation": "2964:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2973:2:2"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "complianceCount",
												"nameLocation": "3002:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "2997:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2997:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "nonComplianceCount",
												"nameLocation": "3024:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3019:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "deviceState",
												"nameLocation": "3056:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3044:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_DeviceState_$616",
													"typeString": "enum Geologix.DeviceState"
												},
												"typeName": {
													"id": 910,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 909,
														"name": "DeviceState",
														"nameLocations": [
															"3044:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 616,
														"src": "3044:11:2"
													},
													"referencedDeclaration": 616,
													"src": "3044:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_DeviceState_$616",
														"typeString": "enum Geologix.DeviceState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2996:72:2"
									},
									"scope": 945,
									"src": "2955:365:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 946,
							"src": "81:3242:2",
							"usedErrors": [
								983,
								988,
								993,
								1002,
								1007,
								1012
							],
							"usedEvents": [
								526,
								535
							]
						}
					],
					"src": "32:3295:2"
				},
				"id": 2
			},
			"extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							592
						],
						"IERC20Metadata": [
							971
						]
					},
					"id": 972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./../contracts/IERC20.sol",
							"id": 949,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 972,
							"sourceUnit": 593,
							"src": "151:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 948,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 592,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 951,
										"name": "IERC20",
										"nameLocations": [
											"318:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 592,
										"src": "318:6:3"
									},
									"id": 952,
									"nodeType": "InheritanceSpecifier",
									"src": "318:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 950,
								"nodeType": "StructuredDocumentation",
								"src": "202:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 971,
							"linearizedBaseContracts": [
								971,
								592
							],
							"name": "IERC20Metadata",
							"nameLocation": "300:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "331:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "399:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:3"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "429:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:15:3"
									},
									"scope": 971,
									"src": "390:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "450:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "520:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "526:2:3"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "552:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 961,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "552:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:15:3"
									},
									"scope": 971,
									"src": "511:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "573:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "652:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:3"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "686:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 967,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "686:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:7:3"
									},
									"scope": 971,
									"src": "643:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 972,
							"src": "290:405:3",
							"usedErrors": [],
							"usedEvents": [
								526,
								535
							]
						}
					],
					"src": "125:571:3"
				},
				"id": 3
			},
			"interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1108
						],
						"IERC20Errors": [
							1013
						],
						"IERC721Errors": [
							1061
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 973,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 974,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1013,
							"linearizedBaseContracts": [
								1013
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 983,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 988,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 993,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1002,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1007,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1012,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 1109,
							"src": "280:1764:4",
							"usedErrors": [
								983,
								988,
								993,
								1002,
								1007,
								1012
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1061,
							"linearizedBaseContracts": [
								1061
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1019,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1024,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1033,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1038,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1043,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1050,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1055,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1060,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 1109,
							"src": "2190:2092:4",
							"usedErrors": [
								1019,
								1024,
								1033,
								1038,
								1043,
								1050,
								1055,
								1060
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1062,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1073,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1078,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1083,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1090,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1095,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1100,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1107,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 1109,
							"src": "4430:2107:4",
							"usedErrors": [
								1073,
								1078,
								1083,
								1090,
								1095,
								1100,
								1107
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"utils/Context.sol": {
				"ast": {
					"absolutePath": "utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1138
						]
					},
					"id": 1139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1111,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1138,
							"linearizedBaseContracts": [
								1138
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1118,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1138,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1125,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1127,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1138,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1133,
												"id": 1135,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1138,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1139,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			}
		}
	}
}